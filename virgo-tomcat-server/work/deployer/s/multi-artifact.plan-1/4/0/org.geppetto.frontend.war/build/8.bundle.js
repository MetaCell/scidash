webpackJsonp([8,25],{

/***/ 1034:
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Reusable drop down button React component. \n * Takes in a configuration with properties and data, uses it \n * to create button and drop down.\n * \n * @author Jesus R Martinez (jesus@metacell.us) \n * \n * @param require\n * @returns\n */\n!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n    var React = __webpack_require__(1);\n    var GEPPETTO = __webpack_require__(132);\n    __webpack_require__(1185);\n\n    var ListItem = React.createClass({\n        displayName: 'ListItem',\n\n\n        updateIcon: false,\n        icons: {\n            checked: \"fa fa-check-circle-o\",\n            unchecked: \"fa fa-circle-o\",\n            default: \"fa fa-bolt\"\n        },\n\n        getInitialState: function getInitialState() {\n            return {\n                icon: \"\"\n            };\n        },\n\n        select: function select() {\n            this.props.handleSelect(this.props.item.value, this.props.item.radio);\n\n            var iconState = this.icons.default;\n            var action = null;\n\n            if (this.props.item.condition != undefined) {\n                // evaluate condition\n                var condition = null;\n                try {\n                    condition = eval(this.props.item.condition);\n                } catch (e) {\n                    throw \"Could not evaluate condition [\" + this.props.item.condition + \"]\";\n                }\n\n                if (typeof condition === \"boolean\") {\n                    // assign action\n                    action = condition ? this.props.item.true.action : this.props.item.false.action;\n                    // assign icon status\n                    iconState = condition ? this.icons.unchecked : this.icons.checked;\n                } else {\n                    throw \"The condition [\" + this.props.item.condition + \"] doesn't resolve to a boolean\";\n                }\n            } else {\n                // if condition does not exist, simply assign action\n                action = this.props.item.action;\n            }\n\n            // execute action\n            if (action != null) {\n                GEPPETTO.CommandController.execute(action, true);\n            }\n\n            this.setState({ icon: iconState });\n        },\n\n        componentDidMount: function componentDidMount() {\n            var iconState = this.getIconState();\n            this.setState({ icon: iconState });\n        },\n\n        getIconState: function getIconState() {\n            // figure out icon for this item\n            var iconState = this.icons.default;\n            if (this.props.item.condition != undefined) {\n                // evaluate condition\n                var condition = null;\n                try {\n                    condition = eval(this.props.item.condition);\n                } catch (e) {\n                    throw \"Could not evaluate condition [\" + this.props.item.condition + \"]\";\n                }\n\n                if (typeof condition === \"boolean\") {\n                    // assign icon status\n                    iconState = condition ? this.icons.checked : this.icons.unchecked;\n                } else {\n                    throw \"The condition [\" + this.props.item.condition + \"] doesn't resolve to a boolean\";\n                }\n            }\n\n            return iconState;\n        },\n\n        render: function render() {\n            var iconState = this.getIconState();\n            this.state.icon = iconState;\n\n            var outerClass = \"menuBtnListItem\";\n            var innerClass = \"\";\n            if (this.props.parentDisabled && this.props.item.disabled) {\n                outerClass += \" menuBtnListItemDisabled\";\n                innerClass += \" menuBtnListItemDisabled\";\n            }\n\n            return React.createElement(\n                'tr',\n                { className: outerClass, onClick: this.select },\n                React.createElement(\n                    'td',\n                    { className: 'selectedStatus' },\n                    React.createElement('i', { className: \"iconSelectionStatus \" + this.state.icon })\n                ),\n                React.createElement(\n                    'td',\n                    { className: 'dropDownLabel' },\n                    React.createElement(\n                        'label',\n                        { className: innerClass },\n                        React.createElement(\n                            'span',\n                            null,\n                            this.props.item.label\n                        )\n                    )\n                )\n            );\n        }\n    });\n\n    var DropDownControlComp = React.createClass({\n        displayName: 'DropDownControlComp',\n\n        onClickHandler: null,\n        menuPosition: null,\n\n        getInitialState: function getInitialState() {\n            return {\n                visible: this.props.configuration.openByDefault,\n                configuration: null\n            };\n        },\n\n        componentDidMount: function componentDidMount() {\n            var self = this;\n\n            var selector = $(\"#\" + this.props.configuration.id + \"-dropDown\");\n\n            window.addEventListener('resize', function (event) {\n                if (selector != null && selector != undefined) {\n                    if (self.state.visible) {\n                        self.menuPosition = self.getMenuPosition();\n                        selector.css({\n                            top: self.menuPosition.top, right: self.menuPosition.right,\n                            bottom: self.menuPosition.bottom, left: self.menuPosition.left, position: 'fixed'\n                        });\n                    }\n                }\n            });\n        },\n\n        renderListItems: function renderListItems() {\n            var items = [];\n            if (this.props.configuration.menuItems != undefined || null) {\n                for (var i = 0; i < this.props.configuration.menuItems.length; i++) {\n                    var item = this.props.configuration.menuItems[i];\n                    if (item.radio) {\n                        // include a ref for every radio item so we can call their select method from other items\n                        items.push(React.createElement(ListItem, { key: i, item: item, ref: item.value, handleSelect: this.handleSelect, parentDisabled: this.props.configuration.buttonDisabled }));\n                    } else {\n                        items.push(React.createElement(ListItem, { key: i, item: item, handleSelect: this.handleSelect, parentDisabled: this.props.configuration.buttonDisabled }));\n                    }\n                }\n            }\n            return items;\n        },\n\n        handleSelect: function handleSelect(value, radio) {\n            // call select on any other 'checked' radio items to deselect them\n            if (radio) {\n                for (var key in this.refs) {\n                    var ref = this.refs[key];\n                    if (ref.props.item.value != value && ref.state.icon == ref.icons.checked && ref.props.item.radio) {\n                        ref.select();\n                    }\n                }\n            }\n            this.props.handleSelect(value);\n\n            if (this.props.configuration.autoFormatMenu) {\n                for (var i = 0; i < this.props.configuration.menuItems.length; i++) {\n                    var item = this.props.configuration.menuItems[i];\n                    if (item.value == value) {\n                        this.props.configuration.menuItems.splice(i, 1);\n                        this.props.configuration.menuItems.unshift(item);\n                    }\n                }\n\n                this.forceUpdate();\n            }\n        },\n\n        getMenuPosition: function getMenuPosition() {\n            var selector = $(\"#\" + this.props.configuration.id);\n            var horizontalOffset = this.props.configuration.horizontalOffset != undefined ? this.props.configuration.horizontalOffset : 0;\n            return {\n                top: selector.offset().top + selector.outerHeight(),\n                left: selector.offset().left - (selector.outerHeight() - selector.innerHeight()) - horizontalOffset\n            };\n        },\n\n        close: function close() {\n            this.setState({ visible: false });\n        },\n\n        calculateSizeandPosition: function calculateSizeandPosition() {\n            var menuSize = null;\n            var self = this;\n            //if position wasn't specify for location of menu list\n            if (self.props.configuration.menuPosition == null || self.props.configuration.menuPosition == undefined) {\n                //compute best spot for menu to show up by getting the button's top\n                //and left values, and considering padding values as well\n                this.menuPosition = self.getMenuPosition();\n            } else {\n                //assign position of menu to what it is in configuration passed\n                this.menuPosition = self.props.configuration.menuPosition;\n            }\n\n            if (self.props.configuration.menuSize != null && self.props.configuration.menuSize != undefined) {\n                menuSize = {\n                    width: self.props.configuration.menuSize.width,\n                    height: self.props.configuration.menuSize.height\n                };\n            }\n\n            var selector = $(\"#\" + this.props.configuration.id + \"-dropDown\");\n            selector.css({\n                top: self.menuPosition.top, right: self.menuPosition.right,\n                bottom: self.menuPosition.bottom, left: self.menuPosition.left, position: 'fixed'\n            });\n\n            var table = $(\"#\" + this.props.configuration.id + \"-dropDownTable\");\n            if (menuSize != null) {\n                if (menuSize.width != undefined && menuSize.height != undefined) {\n                    table.css({\n                        width: menuSize.width,\n                        height: menuSize.height\n                    });\n                }\n            }\n        },\n\n        open: function open() {\n            this.calculateSizeandPosition();\n\n            //makes sure that menu position is not offscreen or at 0,0\n            if (this.menuPosition.top <= 0 && this.menuPosition.left <= 0) {\n                this.menuPosition = this.getMenuPosition();\n                var selector = $(\"#\" + this.props.configuration.id + \"-dropDown\");\n\n                if (this.menuPosition != null && this.menuPosition != undefined) {\n                    var that = this;\n                    selector.css({\n                        top: that.menuPosition.top, right: that.menuPosition.right,\n                        bottom: that.menuPosition.bottom, left: that.menuPosition.left, position: 'fixed'\n                    });\n                }\n            }\n            this.setState({ visible: true });\n        },\n\n        render: function render() {\n            return React.createElement(\n                'div',\n                { id: this.props.configuration.id + \"-dropDownTable\", className: (this.state.visible ? 'show' : 'hide') + \" dropDownButtonContainer\" },\n                React.createElement(\n                    'table',\n                    { className: this.props.configuration.menuCSS + \" dropDownTable\", id: 'dropDownTable' },\n                    React.createElement(\n                        'tbody',\n                        null,\n                        this.renderListItems()\n                    )\n                )\n            );\n        }\n    });\n\n    var MenuButton = React.createClass({\n        displayName: 'MenuButton',\n\n        menu: null,\n        onLoadHandler: null,\n        positionUpdated: false,\n\n        getInitialState: function getInitialState() {\n            return {\n                icon: this.props.configuration.iconOff,\n                open: false,\n                menuItems: this.props.configuration.menuItems\n            };\n        },\n\n        refresh: function refresh() {\n            this.forceUpdate();\n        },\n\n        updateMenuItems: function updateMenuItems(items) {\n            this.setState({ menuItems: items });\n        },\n\n        addMenuItem: function addMenuItem(item) {\n            if (this.props.configuration.menuItems == null || this.props.configuration.menuItems == undefined) {\n                this.props.configuration.menuItems = new Array();\n            }\n            this.props.configuration.menuItems.push(item);\n            this.refresh();\n        },\n\n        //Makes the drop down menu visible\n        showMenu: function showMenu() {\n            var self = this;\n            if (self.props.configuration.menuItems.length > 0) {\n                self.refs.dropDown.open();\n            }\n\n            if (typeof self.props.configuration.menuItems.then === \"function\") {\n                self.props.configuration.menuItems.then(function (val) {\n                    self.props.configuration.menuItems = val;\n                    self.refs.dropDown.open();\n                });\n            }\n\n            var showIcon = this.props.configuration.iconOn;\n            this.setState({ open: true, icon: showIcon });\n        },\n\n        hideMenu: function hideMenu() {\n            this.refs.dropDown.close();\n            var showIcon = this.props.configuration.iconOff;\n            this.setState({ open: false, icon: showIcon });\n        },\n\n        //Adds external handler for click events, notifies it when a drop down item is clicked\n        selectionChanged: function selectionChanged(value) {\n            if (this.props.configuration.closeOnClick) {\n                this.toggleMenu();\n                if (this.onClickHandler != undefined && this.onClickHandler != null) {\n                    this.onClickHandler(value);\n                }\n            }\n        },\n\n        //Adds external load handler, gets notified when component is mounted and ready\n        addExternalLoadHandler: function addExternalLoadHandler() {\n            var self = this;\n            self.onLoadHandler = self.props.configuration.onLoadHandler;\n            if (self.onLoadHandler != null || undefined) {\n                self.onLoadHandler(self);\n            }\n        },\n\n        componentWillUnmount: function componentWillUnmount() {\n            this.onLoadHandler = null;\n            this.onClickHandler = null;\n        },\n\n        componentDidMount: function componentDidMount() {\n            var self = this;\n\n            //attach external handler for loading events\n            self.onClickHandler = self.props.configuration.onClickHandler;\n\n            //attach external handler for clicking events\n            self.addExternalLoadHandler();\n            if (this.props.configuration.closeOnClick) {\n                var container = $('#' + this.props.configuration.id + \"-container\");\n                $('body').click(function (e) {\n                    // if the target of the click isn't the container nor a descendant of the container\n                    if (!container.is(e.target) && container.has(e.target).length === 0) {\n                        if (self.props.configuration.closeOnClick) {\n                            if (self.state.open) {\n                                if (self.isMounted()) {\n                                    self.hideMenu();\n                                }\n                            }\n                        }\n                    }\n                });\n            }\n        },\n\n        //toggles visibility of drop down menu\n        toggleMenu: function toggleMenu() {\n            if (this.state.open) {\n                this.hideMenu();\n            } else {\n                this.showMenu();\n            }\n        },\n\n        render: function render() {\n            return React.createElement(\n                'div',\n                { id: this.props.configuration.id + \"-container\", className: 'menuButtonContainer' },\n                React.createElement(\n                    'button',\n                    { className: this.props.configuration.id + \" btn \" + this.props.configuration.buttonClassName, type: 'button', title: '',\n                        id: this.props.configuration.id, onClick: this.toggleMenu,\n                        disabled: this.props.configuration.buttonDisabled && this.props.configuration.disableable, ref: 'menuButton' },\n                    React.createElement('i', { className: this.state.icon + \" menuButtonIcon\" }),\n                    this.props.configuration.label\n                ),\n                React.createElement(\n                    'div',\n                    { id: this.props.configuration.id + \"-dropDown\", className: 'menuListContainer' },\n                    React.createElement(DropDownControlComp, { handleSelect: this.selectionChanged, ref: 'dropDown', configuration: this.props.configuration, parentDisabled: this.props.configuration.buttonDisabled })\n                )\n            );\n        }\n    });\n\n    return MenuButton;\n}.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/components/controls/menuButton/MenuButton.js\n// module id = 1034\n// module chunks = 1 2 8 25\n\n//# sourceURL=webpack:///./js/components/controls/menuButton/MenuButton.js?");

/***/ }),

/***/ 1051:
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n    var React = __webpack_require__(1);\n\n    var RunButton = __webpack_require__(2810);\n    var PlayButton = __webpack_require__(2811);\n    var PauseButton = __webpack_require__(2812);\n    var StopButton = __webpack_require__(2813);\n    var HelpButton = __webpack_require__(2814);\n    var MenuButton = __webpack_require__(1034);\n\n    var GEPPETTO = __webpack_require__(132);\n\n    __webpack_require__(2818);\n\n    var SimulationControls = React.createClass({\n        displayName: 'SimulationControls',\n\n\n        getInitialState: function getInitialState() {\n            return {\n                disableRun: true,\n                disablePlay: true,\n                disablePause: true,\n                disableStop: true\n            };\n        },\n\n        getDefaultProps: function getDefaultProps() {\n            return {\n                hideHelp: false,\n                hideRun: false,\n                hidePlay: false,\n                hidePause: false,\n                hideStop: false\n            };\n        },\n\n        permissions: function permissions() {\n            var experiment = window.Project.getActiveExperiment();\n            var writePermission = GEPPETTO.UserController.hasPermission(GEPPETTO.Resources.WRITE_PROJECT);\n            var runPermission = GEPPETTO.UserController.hasPermission(GEPPETTO.Resources.RUN_EXPERIMENT);\n            var projectPersisted = experiment.getParent().persisted;\n            var login = GEPPETTO.UserController.isLoggedIn() && GEPPETTO.UserController.hasPersistence();\n            var readOnlyProject = window.Project.isReadOnly();\n\n            if (writePermission && runPermission && projectPersisted && login && !readOnlyProject) {\n                return true;\n            }\n\n            return false;\n        },\n\n        componentDidMount: function componentDidMount() {\n            var self = this;\n\n            GEPPETTO.on(GEPPETTO.Events.Experiment_loaded, function () {\n                self.updateStatus();\n            });\n\n            GEPPETTO.on(GEPPETTO.Events.Project_persisted, function () {\n                self.updateStatus();\n            });\n\n            GEPPETTO.on(GEPPETTO.Events.Project_loaded, function () {\n                self.updateStatus();\n            });\n\n            GEPPETTO.on(GEPPETTO.Events.Experiment_running, function () {\n                self.updateStatus();\n            });\n\n            GEPPETTO.on(GEPPETTO.Events.Experiment_failed, function (id) {\n                var activeExperiment = window.Project.getActiveExperiment();\n                if (activeExperiment != null || undefined) {\n                    if (activeExperiment.getId() == id) {\n                        self.setState({ disableRun: false, disablePlay: true, disablePause: true, disableStop: true });\n                    }\n                }\n            });\n\n            GEPPETTO.on(GEPPETTO.Events.Experiment_completed, function () {\n                self.updateStatus();\n            });\n\n            GEPPETTO.on(GEPPETTO.Events.Experiment_play, function (options) {\n                self.updateStatus();\n            });\n\n            GEPPETTO.on(GEPPETTO.Events.Experiment_resume, function () {\n                self.updateStatus();\n            });\n\n            GEPPETTO.on(GEPPETTO.Events.Experiment_pause, function () {\n                self.updateStatus();\n            });\n\n            GEPPETTO.on(GEPPETTO.Events.Experiment_stop, function (options) {\n                self.updateStatus();\n            });\n\n            GEPPETTO.on(GEPPETTO.Events.Experiment_deleted, function () {\n                var experiment = window.Project.getActiveExperiment();\n                if (experiment == null || undefined) {\n                    self.setState({ disableRun: true, disablePlay: true, disablePause: true, disableStop: true });\n                }\n            });\n\n            GEPPETTO.on('disable_all', function () {\n                self.setState({ disableRun: true, disablePlay: true, disablePause: true, disableStop: true });\n            });\n\n            GEPPETTO.on(GEPPETTO.Events.Experiment_over, function () {\n                self.updateStatus();\n            });\n\n            this.updateStatus();\n        },\n\n        updateStatus: function updateStatus() {\n            var experiment = window.Project.getActiveExperiment();\n\n            if (experiment != null || undefined) {\n                if (experiment.getStatus() == GEPPETTO.Resources.ExperimentStatus.COMPLETED) {\n                    if (GEPPETTO.ExperimentsController.isPaused()) {\n                        this.setState({ disableRun: true, disablePlay: false, disablePause: true, disableStop: false });\n                    } else if (GEPPETTO.ExperimentsController.isPlaying()) {\n                        this.setState({ disableRun: true, disablePlay: true, disablePause: false, disableStop: false });\n                    } else if (GEPPETTO.ExperimentsController.isStopped()) {\n                        this.setState({ disableRun: true, disablePlay: false, disablePause: true, disableStop: true });\n                    }\n                } else if (experiment.getStatus() == GEPPETTO.Resources.ExperimentStatus.RUNNING) {\n                    this.setState({ disableRun: true, disablePlay: true, disablePause: true, disableStop: true });\n                } else if (experiment.getStatus() == GEPPETTO.Resources.ExperimentStatus.ERROR) {\n                    if (this.permissions()) {\n                        this.setState({ disableRun: false, disablePlay: true, disablePause: true, disableStop: true });\n                    } else {\n                        this.setState({ disableRun: true, disablePlay: true, disablePause: true, disableStop: true });\n                    }\n                } else if (experiment.getStatus() == GEPPETTO.Resources.ExperimentStatus.DESIGN) {\n                    if (this.permissions()) {\n                        this.setState({ disableRun: false, disablePlay: true, disablePause: true, disableStop: true });\n                    } else {\n                        this.setState({ disableRun: true, disablePlay: true, disablePause: true, disableStop: true });\n                    }\n                }\n            }\n        },\n\n        render: function render() {\n\n            var runButton = \"\";\n            if (this.props.runConfiguration != undefined) {\n                this.props.runConfiguration.buttonDisabled = this.state.disableRun;\n                runButton = React.createElement(MenuButton, { configuration: this.props.runConfiguration });\n            } else {\n                runButton = React.createElement(RunButton, { disabled: this.state.disableRun, hidden: this.props.hideRun });\n            }\n\n            return React.createElement(\n                'div',\n                { className: 'simulation-controls' },\n                React.createElement(HelpButton, { disabled: false, hidden: this.props.hideHelp }),\n                React.createElement(StopButton, { disabled: this.state.disableStop, hidden: this.props.hideStop }),\n                React.createElement(PauseButton, { disabled: this.state.disablePause, hidden: this.props.hidePause }),\n                React.createElement(PlayButton, { disabled: this.state.disablePlay, hidden: this.props.hidePlay }),\n                runButton\n            );\n        }\n\n    });\n\n    return SimulationControls;\n}.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/components/interface/simulationControls/ExperimentControls.js\n// module id = 1051\n// module chunks = 8\n\n//# sourceURL=webpack:///./js/components/interface/simulationControls/ExperimentControls.js?");

/***/ }),

/***/ 1131:
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n    /**\n     * Button used as part of GEPPETTO Components\n     *\n     * @mixin Button\n     */\n    var React = __webpack_require__(1);\n\n    return {\n        displayName: 'Button',\n\n        render: function render() {\n            return React.DOM.button({\n                type: 'button',\n                id: this.props.id,\n                className: 'btn ' + this.props.className + (this.props.hidden === true ? ' hiddenElement' : ''),\n                'data-toggle': this.props['data-toggle'],\n                onClick: this.props.onClick,\n                disabled: this.props.disabled,\n                icon: this.props.icon\n            }, React.DOM.i({ className: this.props.icon }), \" \" + this.props.label);\n        }\n    };\n}.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/components/controls/mixins/Button.js\n// module id = 1131\n// module chunks = 8 11 24\n\n//# sourceURL=webpack:///./js/components/controls/mixins/Button.js?");

/***/ }),

/***/ 1185:
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(1186);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(25)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/less-loader/dist/cjs.js?{\\\"modifyVars\\\":{\\\"url\\\":\\\"'../../../extensions/geppetto-default/colors'\\\"}}!./MenuButton.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/less-loader/dist/cjs.js?{\\\"modifyVars\\\":{\\\"url\\\":\\\"'../../../extensions/geppetto-default/colors'\\\"}}!./MenuButton.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/components/controls/menuButton/MenuButton.less\n// module id = 1185\n// module chunks = 1 2 8 25\n\n//# sourceURL=webpack:///./js/components/controls/menuButton/MenuButton.less?");

/***/ }),

/***/ 1186:
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(24)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \".dark-orange {\\n  color: #fc401a;\\n}\\n.orange {\\n  color: #fc6320;\\n}\\n.orange-color {\\n  color: #fc6320;\\n}\\n.orange-color-bg {\\n  background-color: #fc6320;\\n}\\n.menuButtonIcon {\\n  padding-right: 5px;\\n}\\n.menuListContainer {\\n  z-index: 100 !important;\\n}\\n.dropDownButtonContainer {\\n  position: fixed;\\n  z-index: 99;\\n  height: auto;\\n  width: auto;\\n  background-color: rgba(50, 50, 53, 0.8);\\n}\\n.dropDownButtonContainer:disabled {\\n  background: 0;\\n  color: #fc6320;\\n}\\n.dropDownTable {\\n  color: #fc6320;\\n  float: left;\\n  padding-right: 10px;\\n  white-space: nowrap;\\n  width: 100%;\\n  height: auto;\\n  overflow: hidden;\\n}\\n.dropDownTable label {\\n  float: left;\\n  display: inline-block;\\n  margin-top: 0;\\n  margin-bottom: 0;\\n  font-weight: normal;\\n  text-align: center;\\n  vertical-align: middle;\\n  cursor: pointer;\\n  font-size: 14px;\\n}\\n.dropDownTable label:hover {\\n  color: white;\\n}\\n.dropDownTable tr {\\n  cursor: pointer;\\n}\\n.dropDownTable tr:not(:hover) label {\\n  color: #fc6320;\\n}\\n.dropDownTable tr:hover {\\n  background-color: #fc6320;\\n  color: white;\\n}\\n.dropDownTable tr:hover label {\\n  color: white;\\n}\\n.dropDownItem {\\n  display: inline-block;\\n}\\n.selectedStatus {\\n  width: 50px;\\n  padding-left: 15px;\\n}\\n.menuBtnListItem {\\n  text-align: left;\\n}\\n.dropDownLabel {\\n  padding: 5px 20px 5px 0;\\n}\\n\", \"\"]);\n\n// exports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/less-loader/dist/cjs.js?{\"modifyVars\":{\"url\":\"'../../../extensions/geppetto-default/colors'\"}}!./js/components/controls/menuButton/MenuButton.less\n// module id = 1186\n// module chunks = 1 2 8 25\n\n//# sourceURL=webpack:///./js/components/controls/menuButton/MenuButton.less?./node_modules/css-loader!./node_modules/less-loader/dist/cjs.js?%7B%22modifyVars%22:%7B%22url%22:%22'../../../extensions/geppetto-default/colors'%22%7D%7D");

/***/ }),

/***/ 1437:
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n    var React = __webpack_require__(1);\n\n    return React.createClass({\n\n        mixins: [],\n\n        displayName: 'Button',\n\n        getDefaultProps: function getDefaultProps() {\n            return {\n                disabled: false,\n                className: ''\n            };\n        },\n\n        render: function render() {\n            return React.DOM.button({\n                type: 'button',\n                className: 'btn ' + this.props.className,\n                'data-toggle': this.props['data-toggle'],\n                onClick: this.props.onClick,\n                disabled: this.props.disabled\n            }, React.DOM.i({ className: this.props.icon }, \" \" + this.props.children));\n        }\n    });\n}.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/components/controls/mixins/bootstrap/button.js\n// module id = 1437\n// module chunks = 8 15\n\n//# sourceURL=webpack:///./js/components/controls/mixins/bootstrap/button.js?");

/***/ }),

/***/ 2810:
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n    var React = __webpack_require__(1),\n        GEPPETTO = __webpack_require__(132);\n\n    return React.createClass({\n        mixins: [__webpack_require__(1131)],\n\n        componentDidMount: function componentDidMount() {},\n\n        getDefaultProps: function getDefaultProps() {\n            return {\n                label: 'Run',\n                className: 'pull-right',\n                icon: 'fa fa-cogs',\n                onClick: function onClick() {\n                    GEPPETTO.Flows.onRun(\"Project.getActiveExperiment().run();\");\n                }\n            };\n        }\n\n    });\n}.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/components/interface/simulationControls/buttons/RunButton.js\n// module id = 2810\n// module chunks = 8\n\n//# sourceURL=webpack:///./js/components/interface/simulationControls/buttons/RunButton.js?");

/***/ }),

/***/ 2811:
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n    var React = __webpack_require__(1),\n        GEPPETTO = __webpack_require__(132);\n\n    return React.createClass({\n        mixins: [__webpack_require__(1131)],\n\n        componentDidMount: function componentDidMount() {},\n\n        getDefaultProps: function getDefaultProps() {\n            return {\n                label: 'Play',\n                className: 'pull-right',\n                icon: 'fa fa-play',\n                onClick: function onClick() {\n\n                    if (GEPPETTO.ExperimentsController.isPaused()) {\n                        GEPPETTO.CommandController.execute(\"Project.getActiveExperiment().resume();\");\n                    } else {\n                        if (GEPPETTO.isKeyPressed(\"shift\")) {\n                            GEPPETTO.Flows.onPlay(\"Project.getActiveExperiment().play();\");\n                        } else {\n                            GEPPETTO.Flows.onPlay(\"Project.getActiveExperiment().playAll();\");\n                        }\n                    }\n                }\n            };\n        }\n\n    });\n}.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/components/interface/simulationControls/buttons/PlayButton.js\n// module id = 2811\n// module chunks = 8\n\n//# sourceURL=webpack:///./js/components/interface/simulationControls/buttons/PlayButton.js?");

/***/ }),

/***/ 2812:
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n    var React = __webpack_require__(1),\n        GEPPETTO = __webpack_require__(132);\n\n    return React.createClass({\n        mixins: [__webpack_require__(1131)],\n\n        componentDidMount: function componentDidMount() {},\n\n        getDefaultProps: function getDefaultProps() {\n            return {\n                label: 'Pause',\n                className: 'pull-right',\n                icon: 'fa fa-pause',\n                onClick: function onClick() {\n                    GEPPETTO.CommandController.execute(\"Project.getActiveExperiment().pause()\", true);\n                }\n            };\n        }\n\n    });\n}.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/components/interface/simulationControls/buttons/PauseButton.js\n// module id = 2812\n// module chunks = 8\n\n//# sourceURL=webpack:///./js/components/interface/simulationControls/buttons/PauseButton.js?");

/***/ }),

/***/ 2813:
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n    var React = __webpack_require__(1),\n        GEPPETTO = __webpack_require__(132);\n\n    return React.createClass({\n        mixins: [__webpack_require__(1131)],\n\n        componentDidMount: function componentDidMount() {},\n\n        getDefaultProps: function getDefaultProps() {\n            return {\n                label: 'Stop',\n                className: 'pull-right',\n                icon: 'fa fa-stop',\n                onClick: function onClick() {\n                    GEPPETTO.CommandController.execute(\"Project.getActiveExperiment().stop()\", true);\n                }\n            };\n        }\n\n    });\n}.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/components/interface/simulationControls/buttons/StopButton.js\n// module id = 2813\n// module chunks = 8\n\n//# sourceURL=webpack:///./js/components/interface/simulationControls/buttons/StopButton.js?");

/***/ }),

/***/ 2814:
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n    var React = __webpack_require__(1),\n        ReactDOM = __webpack_require__(21),\n        GEPPETTO = __webpack_require__(132);\n    $ = __webpack_require__(9), HelpModal = __webpack_require__(2815);\n\n    return React.createClass({\n        mixins: [__webpack_require__(1131)],\n\n        componentDidMount: function componentDidMount() {\n\n            GEPPETTO.on('simulation:show_helpwindow', function () {\n                ReactDOM.render(React.createFactory(HelpModal)({ show: true }), document.getElementById('modal-region'));\n\n                $(\"#help-modal\").css(\"margin-right\", \"-20px\");\n                $('#help-modal').css('max-height', $(window).height() * 0.7);\n                $('#help-modal .modal-body').css('max-height', $(window).height() * 0.5);\n            });\n\n            GEPPETTO.on('simulation:hide_helpwindow', function () {\n                GEPPETTO.ComponentFactory.addComponent('LOADINGSPINNER', { show: true, keyboard: false, logo: \"gpt-gpt_logo\" }, document.getElementById(\"modal-region\"));\n            });\n        },\n\n        getDefaultProps: function getDefaultProps() {\n            return {\n                label: 'Help',\n                id: 'genericHelpBtn',\n                className: 'pull-right help-button',\n                icon: 'fa fa-info-circle',\n                onClick: function onClick() {\n                    GEPPETTO.CommandController.execute(\"G.showHelpWindow(true)\", true);\n                }\n            };\n        }\n    });\n}.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/components/interface/simulationControls/buttons/HelpButton.js\n// module id = 2814\n// module chunks = 8\n\n//# sourceURL=webpack:///./js/components/interface/simulationControls/buttons/HelpButton.js?");

/***/ }),

/***/ 2815:
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n    var React = __webpack_require__(1),\n        Button = __webpack_require__(1437),\n        GEPPETTO = __webpack_require__(132);\n\n    __webpack_require__(2816);\n\n    return React.createClass({\n        mixins: [__webpack_require__(113)],\n\n        startTutorial: function startTutorial() {\n            GEPPETTO.trigger('start:tutorial');\n            GEPPETTO.tutorialEnabled = true;\n            this.hide();\n        },\n\n        render: function render() {\n            return React.createElement(\n                'div',\n                { className: 'modal fade', id: 'help-modal' },\n                React.createElement(\n                    'div',\n                    { className: 'modal-dialog' },\n                    React.createElement(\n                        'div',\n                        { className: 'modal-content' },\n                        React.createElement(\n                            'div',\n                            { className: 'modal-header' },\n                            React.createElement(\n                                'a',\n                                { className: 'btn pull-right', icon: 'fa-file-text', href: 'http://docs.geppetto.org', target: '_blank' },\n                                'Docs '\n                            ),\n                            React.createElement(\n                                'h4',\n                                { className: 'modal-title pagination-centered' },\n                                'Quick Help'\n                            )\n                        ),\n                        React.createElement(\n                            'div',\n                            { className: 'modal-body' },\n                            React.createElement(\n                                'h4',\n                                null,\n                                'Navigation Controls'\n                            ),\n                            React.createElement(\n                                'h5',\n                                null,\n                                'Rotation'\n                            ),\n                            React.createElement(\n                                'p',\n                                null,\n                                'Left click and drag with the mouse to rotate.'\n                            ),\n                            React.createElement(\n                                'h5',\n                                null,\n                                'Pan'\n                            ),\n                            React.createElement(\n                                'p',\n                                null,\n                                'Right click and drag with the mouse to pan.'\n                            ),\n                            React.createElement(\n                                'h5',\n                                null,\n                                'Zoom'\n                            ),\n                            React.createElement(\n                                'p',\n                                null,\n                                'Wheel click and move your mouse up and down to zoom in and out. In addition, you can use the buttons in the upper left corner. The Home button resets the view.'\n                            ),\n                            React.createElement(\n                                'h4',\n                                null,\n                                'Selection Controls'\n                            ),\n                            React.createElement(\n                                'p',\n                                null,\n                                'Left click will select the closest object under the pointer. Holding ',\n                                React.createElement(\n                                    'kbd',\n                                    null,\n                                    'Shift'\n                                ),\n                                ' enables multiple objects to be selected at once.'\n                            ),\n                            React.createElement(\n                                'h5',\n                                null,\n                                'Selection Order'\n                            ),\n                            React.createElement(\n                                'p',\n                                null,\n                                'Solid objects are selected over closer transparent objects. Holding ',\n                                React.createElement(\n                                    'kbd',\n                                    null,\n                                    'Ctrl'\n                                ),\n                                ' enables selection of the closest object regardless.'\n                            ),\n                            React.createElement(\n                                'p',\n                                null,\n                                'To toggle through multiple stacked transparent objects, just keep clicking.'\n                            ),\n                            React.createElement(\n                                'h5',\n                                null,\n                                'Clear Selection'\n                            ),\n                            React.createElement(\n                                'p',\n                                null,\n                                'To unselect all objects simply click on empty space with ',\n                                React.createElement(\n                                    'kbd',\n                                    null,\n                                    'Ctrl'\n                                ),\n                                ' pressed.'\n                            ),\n                            React.createElement(\n                                'h4',\n                                null,\n                                'Geppetto Console'\n                            ),\n                            React.createElement(\n                                'p',\n                                null,\n                                'The console provides a way to interact with Geppetto without having to use the UI controls. Through the console, the user can control the Geppetto project and experiments and use the other features available.'\n                            ),\n                            React.createElement(\n                                'h5',\n                                null,\n                                'Commands'\n                            ),\n                            React.createElement(\n                                'p',\n                                null,\n                                'Open the console and type help() in it to view list of available commands, a description on how to use each one of them is also provided.'\n                            ),\n                            React.createElement(\n                                'h5',\n                                null,\n                                'Autocompletion'\n                            ),\n                            React.createElement(\n                                'p',\n                                null,\n                                'Console autcompletes a command once you start typing. Pressing double',\n                                React.createElement(\n                                    'kbd',\n                                    null,\n                                    'Tab'\n                                ),\n                                'provides list of available commands that match the entered input.'\n                            ),\n                            React.createElement(\n                                'h4',\n                                null,\n                                'Loading a Project'\n                            ),\n                            React.createElement(\n                                'h5',\n                                null,\n                                'Using Controls'\n                            ),\n                            React.createElement(\n                                'p',\n                                null,\n                                'Use the home button button in the top right corner to go back to the dashboard load a Geppetto project by double-clicking on it.'\n                            ),\n                            React.createElement(\n                                'h5',\n                                null,\n                                'Using console'\n                            ),\n                            React.createElement(\n                                'p',\n                                null,\n                                'Projects can be loaded via console using commands',\n                                React.createElement(\n                                    'a',\n                                    { className: 'label label-default' },\n                                    'Project.loadFromURL(projectURL)'\n                                )\n                            ),\n                            React.createElement(\n                                'h5',\n                                null,\n                                'Passing a parameter via URL'\n                            ),\n                            React.createElement(\n                                'p',\n                                null,\n                                'A project can be loaded by specifying its ID as a paramater in the Geppetto URL, for easy bookmarking. This will automatically load the project when the Geppetto simulation environment is opened. To use this feature add the query string paramater ',\n                                React.createElement(\n                                    'a',\n                                    { className: 'label label-default' },\n                                    'load_project_from_id=PROJECT_ID'\n                                ),\n                                ', where',\n                                React.createElement(\n                                    'a',\n                                    { className: 'label label-default' },\n                                    'PROJECT_ID'\n                                ),\n                                ' corresponds to the ID of the project you want to load.'\n                            ),\n                            React.createElement('div', { className: 'help-small-spacer help-clearer' }),\n                            React.createElement(\n                                'h4',\n                                null,\n                                'Colour coding for connections and connected elements'\n                            ),\n                            React.createElement('div', { className: 'circle default help-clearer left-floater' }),\n                            React.createElement(\n                                'div',\n                                { className: 'circle-description left-floater' },\n                                'The element is ',\n                                React.createElement(\n                                    'b',\n                                    null,\n                                    'unselected'\n                                ),\n                                '.'\n                            ),\n                            React.createElement('div', { className: 'circle selected help-clearer left-floater' }),\n                            React.createElement(\n                                'div',\n                                { className: 'circle-description left-floater' },\n                                'The element is ',\n                                React.createElement(\n                                    'b',\n                                    null,\n                                    'selected.'\n                                )\n                            ),\n                            React.createElement('div', { className: 'circle input help-clearer left-floater' }),\n                            React.createElement(\n                                'div',\n                                { className: 'circle-description left-floater' },\n                                'The element is an ',\n                                React.createElement(\n                                    'b',\n                                    null,\n                                    'input'\n                                ),\n                                ' to the selected one.'\n                            ),\n                            React.createElement('div', { className: 'circle output help-clearer left-floater' }),\n                            React.createElement(\n                                'div',\n                                { className: 'circle-description left-floater' },\n                                'The element is an ',\n                                React.createElement(\n                                    'b',\n                                    null,\n                                    'output'\n                                ),\n                                ' from the selected one.'\n                            ),\n                            React.createElement('div', { className: 'circle inputoutput help-clearer left-floater' }),\n                            React.createElement(\n                                'div',\n                                { className: 'circle-description left-floater' },\n                                'The element is both an ',\n                                React.createElement(\n                                    'b',\n                                    null,\n                                    'input and an output'\n                                ),\n                                ' to/from the selected one.'\n                            ),\n                            React.createElement('div', { className: 'help-spacer help-clearer' }),\n                            React.createElement(\n                                'h4',\n                                null,\n                                'Colour coding for experiment status lifecycle'\n                            ),\n                            React.createElement('div', { className: 'circle design-status help-clearer left-floater' }),\n                            React.createElement(\n                                'div',\n                                { className: 'circle-description left-floater' },\n                                'The experiment is in ',\n                                React.createElement(\n                                    'b',\n                                    null,\n                                    'design'\n                                ),\n                                ' phase. If available in the model, parameters can be set and state variables can be set to be recorded before running the experiment.'\n                            ),\n                            React.createElement('div', { className: 'circle queued-status help-clearer left-floater' }),\n                            React.createElement(\n                                'div',\n                                { className: 'circle-description left-floater' },\n                                'The experiment is ',\n                                React.createElement(\n                                    'b',\n                                    null,\n                                    'queued'\n                                ),\n                                ' for running on the configured server.'\n                            ),\n                            React.createElement('div', { className: 'circle running-status help-clearer left-floater' }),\n                            React.createElement(\n                                'div',\n                                { className: 'circle-description left-floater' },\n                                'The experiment is currently ',\n                                React.createElement(\n                                    'b',\n                                    null,\n                                    'running'\n                                ),\n                                ' on the designated server.'\n                            ),\n                            React.createElement('div', { className: 'circle completed-status help-clearer left-floater' }),\n                            React.createElement(\n                                'div',\n                                { className: 'circle-description left-floater' },\n                                'The experiment has successfully ',\n                                React.createElement(\n                                    'b',\n                                    null,\n                                    'completed'\n                                ),\n                                ' running. Simulation results (state variables that were recorded, if any) can now be visualized/plotted.'\n                            ),\n                            React.createElement('div', { className: 'circle error-status help-clearer left-floater' }),\n                            React.createElement(\n                                'div',\n                                { className: 'circle-description left-floater' },\n                                'Bad news! The experiment caused an ',\n                                React.createElement(\n                                    'b',\n                                    null,\n                                    'error'\n                                ),\n                                ' while running on the server.'\n                            )\n                        ),\n                        React.createElement(\n                            'div',\n                            { className: 'modal-footer' },\n                            React.createElement(\n                                'button',\n                                { type: 'button', className: 'btn', 'data-dismiss': 'modal' },\n                                'Close'\n                            )\n                        )\n                    )\n                )\n            );\n        }\n    });\n}.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/components/interface/simulationControls/HelpModal.js\n// module id = 2815\n// module chunks = 8\n\n//# sourceURL=webpack:///./js/components/interface/simulationControls/HelpModal.js?");

/***/ }),

/***/ 2816:
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(2817);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(25)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/less-loader/dist/cjs.js?{\\\"modifyVars\\\":{\\\"url\\\":\\\"'../../../extensions/geppetto-default/colors'\\\"}}!./HelpModal.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/less-loader/dist/cjs.js?{\\\"modifyVars\\\":{\\\"url\\\":\\\"'../../../extensions/geppetto-default/colors'\\\"}}!./HelpModal.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/components/interface/simulationControls/HelpModal.less\n// module id = 2816\n// module chunks = 8\n\n//# sourceURL=webpack:///./js/components/interface/simulationControls/HelpModal.less?");

/***/ }),

/***/ 2817:
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(24)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \".modal {\\n  z-index: 9999999;\\n}\\n.modal input {\\n  font-weight: 200;\\n}\\n.modal .modal-content {\\n  background: rgba(50, 50, 53, 0.8);\\n  border-radius: 0px!important;\\n  color: #fc6320;\\n}\\n.modal .modal-header {\\n  border: 0;\\n  padding: 10px;\\n}\\n.modal .modal-body {\\n  border: 0;\\n  max-height: 50%;\\n}\\n.modal .modal-footer {\\n  border: 0;\\n  padding: 10px;\\n}\\n.dark-orange {\\n  color: #fc401a;\\n}\\n.orange {\\n  color: #fc6320;\\n}\\n.orange-color {\\n  color: #fc6320;\\n}\\n.orange-color-bg {\\n  background-color: #fc6320;\\n}\\n#help-modal {\\n  top: 10%;\\n  font-family: 'Helvetica Neue';\\n  font-weight: 200;\\n}\\n#help-modal h4 {\\n  color: #fc6320;\\n}\\n#help-modal p {\\n  color: white;\\n}\\n#help-modal .circle {\\n  border-radius: 50%;\\n  width: 20px;\\n  height: 20px;\\n  clear: both;\\n  float: left;\\n  margin-bottom: 10px;\\n}\\n#help-modal .default {\\n  background-color: #0199e8;\\n}\\n#help-modal .selected {\\n  background-color: #ffcc00;\\n}\\n#help-modal .input {\\n  background-color: #ffdfc6;\\n}\\n#help-modal .output {\\n  background-color: #ff5a02;\\n}\\n#help-modal .inputoutput {\\n  background-color: #649615;\\n}\\n#help-modal .queued-status {\\n  background-color: #0199e8;\\n}\\n#help-modal .running-status {\\n  background-color: #ffcc00;\\n}\\n#help-modal .design-status {\\n  background-color: #ff5a02;\\n}\\n#help-modal .completed-status {\\n  background-color: #649615;\\n}\\n#help-modal .error-status {\\n  background-color: red;\\n}\\n#help-modal h4.modal-title {\\n  text-align: center;\\n}\\n#help-modal .modal-body {\\n  overflow-y: auto;\\n}\\n#help-modal .btn,\\n#help-modal .label {\\n  margin-left: 3px;\\n  margin-right: 3px;\\n}\\n#help-modal .icon-question-sign {\\n  margin-left: 5px;\\n  font-size: 20px;\\n}\\n#help-modal .left-floater {\\n  float: left;\\n}\\n#help-modal .help-spacer {\\n  height: 15px;\\n}\\n#help-modal .help-small-spacer {\\n  height: 7.5px;\\n}\\n#help-modal .help-clearer {\\n  clear: both;\\n}\\n#help-modal .circle-description {\\n  margin-left: 20px;\\n  margin-top: 2px;\\n  max-width: 500px;\\n  color: white;\\n}\\n#help-modal div.circle-description b {\\n  color: #fc6320;\\n}\\n\", \"\"]);\n\n// exports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/less-loader/dist/cjs.js?{\"modifyVars\":{\"url\":\"'../../../extensions/geppetto-default/colors'\"}}!./js/components/interface/simulationControls/HelpModal.less\n// module id = 2817\n// module chunks = 8\n\n//# sourceURL=webpack:///./js/components/interface/simulationControls/HelpModal.less?./node_modules/css-loader!./node_modules/less-loader/dist/cjs.js?%7B%22modifyVars%22:%7B%22url%22:%22'../../../extensions/geppetto-default/colors'%22%7D%7D");

/***/ }),

/***/ 2818:
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(2819);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(25)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/less-loader/dist/cjs.js?{\\\"modifyVars\\\":{\\\"url\\\":\\\"'../../../extensions/geppetto-default/colors'\\\"}}!./SimulationControls.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/less-loader/dist/cjs.js?{\\\"modifyVars\\\":{\\\"url\\\":\\\"'../../../extensions/geppetto-default/colors'\\\"}}!./SimulationControls.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/components/interface/simulationControls/SimulationControls.less\n// module id = 2818\n// module chunks = 8\n\n//# sourceURL=webpack:///./js/components/interface/simulationControls/SimulationControls.less?");

/***/ }),

/***/ 2819:
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(24)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \".dark-orange {\\n  color: #fc401a;\\n}\\n.orange {\\n  color: #fc6320;\\n}\\n.orange-color {\\n  color: #fc6320;\\n}\\n.orange-color-bg {\\n  background-color: #fc6320;\\n}\\n#sim-toolbar {\\n  position: fixed;\\n  right: 5px;\\n  top: 5px;\\n  margin-right: 0;\\n}\\n.simulation-controls button {\\n  margin: 0px 3px;\\n  border: none;\\n  height: 27px;\\n}\\n.SaveButton {\\n  position: fixed;\\n  top: 5px;\\n  right: 539px;\\n  height: 27px;\\n}\\n.SaveButton:disabled {\\n  background: 0;\\n  color: #fc6320;\\n}\\n.tooltip-persist {\\n  height: 25px;\\n  max-width: 800px;\\n  border-radius: 5px;\\n  border: 1px solid black;\\n  padding: 2px 4px 2px 4px;\\n  background: white;\\n  opacity: 1;\\n  left: 200px;\\n}\\n.HomeButton {\\n  position: fixed;\\n  top: 5px;\\n  right: 496px;\\n  height: 27px;\\n}\\n.menuBtnListItemDisabled {\\n  color: grey !important;\\n  pointer-events: none;\\n}\\n\", \"\"]);\n\n// exports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/less-loader/dist/cjs.js?{\"modifyVars\":{\"url\":\"'../../../extensions/geppetto-default/colors'\"}}!./js/components/interface/simulationControls/SimulationControls.less\n// module id = 2819\n// module chunks = 8\n\n//# sourceURL=webpack:///./js/components/interface/simulationControls/SimulationControls.less?./node_modules/css-loader!./node_modules/less-loader/dist/cjs.js?%7B%22modifyVars%22:%7B%22url%22:%22'../../../extensions/geppetto-default/colors'%22%7D%7D");

/***/ })

});