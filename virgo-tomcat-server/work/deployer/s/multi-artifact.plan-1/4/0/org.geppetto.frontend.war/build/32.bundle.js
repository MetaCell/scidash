webpackJsonp([32],{

/***/ 1132:
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n *\n * Base Widget Class, all widgets extend this class.\n * @module Widgets/Widget\n * @author  Jesus R. Martinez (jesus@metacell.us)\n */\n!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n    var _Backbone$View$extend;\n\n    var Backbone = __webpack_require__(59);\n    var $ = __webpack_require__(9);\n    __webpack_require__(415);\n\n    var zIndex = {\n        min: 1,\n        max: 9999,\n        restore: 10\n    };\n\n    return {\n\n        /**\n         * Not yet implemented, used for local storage and history.\n         */\n        Model: Backbone.Model.extend({}),\n\n        /**\n         * Creates base view for widget\n         */\n        View: Backbone.View.extend((_Backbone$View$extend = {\n\n            id: null,\n            dialog: null,\n            visible: true,\n            destroyed: false,\n            size: {},\n            position: {},\n            registeredEvents: null,\n            executedAction: 0,\n            lastExecutedAction: 0,\n            title: null,\n            previousMaxTransparency: false,\n            previousMaxSize: {},\n            maximize: false,\n            collapsed: false,\n            widgetType: null,\n            stateless: false,\n            showTitleBar: true,\n            transparentBackground: false,\n            dirtyView: false,\n            updateHistoryPosition: true,\n            helpInfo: '### Inline help not yet available for this widget! \\n\\n' + 'Try the <a href=\"http://docs.geppetto.org/en/latest/usingwidgets.html\"' + 'target=\"_blank\">online documentation</a> instead.',\n\n            defaultSize: function defaultSize() {\n                return { height: 300, width: 350 };\n            },\n            defaultPosition: function defaultPosition() {\n                return { left: \"50%\", top: \"50%\" };\n            },\n            /**\n             * Initializes the widget\n             *\n             * @param {String} id - id of widget\n             * @param {String} name - name of widget\n             * @param {String} visibility - visibility of widget window\n             */\n            initialize: function initialize(options) {\n                this.id = options.id;\n                this.name = options.name;\n                this.visible = options.visible;\n                this.size = this.defaultSize();\n                this.position = this.defaultPosition();\n                this.contextMenu = new GEPPETTO.ContextMenuView();\n                this.historyMenu = new GEPPETTO.ContextMenuView();\n                this.widgetType = options.widgetType;\n                this.stateless = options.stateless != undefined ? options.stateless : false;\n                this.registeredEvents = [];\n                this.dirtyView = false;\n\n                var self = this;\n                $(self.historyMenu.el).on('click', function (event) {\n                    var itemId = $(event.target).attr('id');\n                    var registeredItem = self.historyMenu.getClickedItem(itemId);\n                    if (registeredItem != null || registeredItem != undefined) {\n                        var label = registeredItem[\"label\"];\n                        self.title = label;\n                        $(\"#\" + self.id).parent().find(\".ui-dialog-title\").html(self.title);\n                    }\n                });\n                window.addEventListener('resize', function (event) {\n                    if (self.maximize) {\n                        self.maximize = false;\n                        self.setSize(window.innerHeight, window.innerWidth);\n                        self.$el.trigger('resizeEnd', [\"maximize\"]);\n                        self.maximize = true;\n                    }\n                });\n\n                //this.setSize(this.defaultSize.height, this.defaultSize.width);\n            },\n\n            /**\n             * Destroy the widget, remove it from DOM\n             *\n             * @command destroy()\n             * @returns {String} - Action Message\n             */\n            destroy: function destroy() {\n                this.$el.remove();\n                this.destroyed = true;\n                return this.name + \" destroyed\";\n            },\n\n            /**\n             * Hides the widget\n             *\n             * @command hide()\n             * @returns {String} - Action Message\n             */\n            hide: function hide() {\n                this.$el.dialog('close').dialogExtend();\n\n                this.visible = false;\n\n                return \"Hiding \" + this.name + \" widget\";\n            },\n\n            /**\n             *  Opens widget dialog\n             *\n             * @command show()\n             * @returns {Object} - Action Message\n             */\n            show: function show() {\n                this.$el.dialog('open').dialogExtend();\n                this.visible = true;\n\n                //Unfocused close button\n                $(\".ui-dialog-titlebar-close\").blur();\n\n                return this;\n            },\n\n            /**\n             * Returns widget type as defined in GEPPETTO.Widgets\n             *\n             * @returns {int}\n             */\n            getComponentType: function getComponentType() {\n                return this.widgetType;\n            },\n\n            /**\n             * Gets the name of the widget\n             *\n             * @command getName()\n             * @returns {String} - Name of widget\n             */\n            getName: function getName() {\n                return this.name;\n            },\n\n            /**\n             * Sets the name of the widget\n             * @command setName(name)\n             * @param {String} name - Name of widget\n             */\n            setName: function setName(name) {\n                this.name = name;\n\n                // set name to widget window\n                this.$el.dialog(\"option\", \"title\", this.name).dialogExtend();\n\n                // set flag to indicate something changed\n                this.dirtyView = true;\n\n                return this;\n            },\n\n            /**\n             * @command setPosition(left,top)\n             * @param {Integer} left -Left position of the widget\n             * @param {Integer} top - Top position of the widget\n             */\n            setPosition: function setPosition(left, top) {\n                if (left != null && left != undefined) {\n                    this.position.left = left;\n                }\n                if (top != null && top != undefined) {\n                    this.position.top = top;\n                }\n\n                this.$el.dialog('option', 'position', {\n                    my: \"left+\" + this.position.left + \" top+\" + this.position.top,\n                    at: \"left top\",\n                    of: $(window)\n                }).dialogExtend();\n\n                // set flag to indicate something changed\n                this.dirtyView = true;\n\n                return this;\n            },\n\n            /**\n             * Sets the size of the widget\n             * @command setSize(h,w)\n             * @param {Integer} h - Height of the widget\n             * @param {Integer} w - Width of the widget\n             */\n            setSize: function setSize(h, w) {\n                if (h != null && h != undefined && h != -1) {\n                    this.size.height = h;\n                }\n                if (w != null && w != undefined && w != -1) {\n                    this.size.width = w;\n                }\n                this.$el.dialog({ height: this.size.height, width: this.size.width }).dialogExtend();\n\n                this.$el.trigger('resizeEnd');\n\n                // set flag to indicate something changed\n                this.dirtyView = true;\n\n                return this;\n            },\n\n            /**\n             * @command setMinHeight(h)\n             * @param {Integer} h - Minimum Height of the widget\n             */\n            setMinHeight: function setMinHeight(h) {\n                this.$el.dialog('option', 'minHeight', h).dialogExtend();\n                return this;\n            },\n\n            /**\n             * @command setMinWidth(w)\n             * @param {Integer} w - Minimum Width of the widget\n             */\n            setMinWidth: function setMinWidth(w) {\n                this.$el.dialog('option', 'minWidth', w).dialogExtend();\n                return this;\n            },\n\n            /**\n             * @command setMinSize(h,w)\n             * @param {Integer} h - Minimum Height of the widget\n             * @param {Integer} w - Minimum Width of the widget\n             */\n            setMinSize: function setMinSize(h, w) {\n                this.setMinHeight(h);\n                this.setMinWidth(w);\n                return this;\n            },\n\n            /**\n             * @command setResizable(true|false)\n             * @param {Boolean} true|false - enables / disables resizability\n             */\n            setResizable: function setResizable(resize) {\n                this.$el.dialog('option', 'resizable', resize).dialogExtend();\n                return this;\n            },\n\n            /**\n             * @command setAutoWidth()\n             */\n            setAutoWidth: function setAutoWidth() {\n                this.$el.dialog('option', 'width', 'auto').dialogExtend();\n                return this;\n            },\n\n            /**\n             * @command setAutoHeigth()\n             */\n            setAutoHeight: function setAutoHeight() {\n                this.$el.dialog('option', 'height', 'auto').dialogExtend();\n                return this;\n            },\n\n            /**\n             * Returns the position of the widget\n             * @command getPosition()\n             * @returns {Object} - Position of the widget\n             */\n            getPosition: function getPosition() {\n                return this.position;\n            },\n\n            /**\n             * Returns the size of the widget\n             * @command getSize()\n             * @returns {Object} - Size of the widget\n             */\n            getSize: function getSize() {\n                return this.size;\n            },\n\n            /**\n             * Gets the ID of the widget\n             *\n             * @command getId()\n             * @returns {String} - ID of widget\n             */\n            getId: function getId() {\n                return this.id;\n            },\n\n            /**\n             * Did something change in the state of the widget?\n             *\n             * @command isDirty()\n             * @returns {boolean} - ID of widget\n             */\n            isDirty: function isDirty() {\n                return this.dirtyView;\n            },\n\n            /**\n             * Explicitly sets status of view\n             * NOTE: we need to be able to control this from outside the component\n             *\n             * @command setDirty()\n             * @param {boolean} dirty\n             */\n            setDirty: function setDirty(dirty) {\n                this.dirtyView = dirty;\n            },\n\n            /**\n             * Returns whether widget is visible or not\n             *\n             * @command isVisible()\n             * @returns {Boolean} - Widget visibility state\n             */\n            isVisible: function isVisible() {\n                return this.visible;\n            },\n\n            /**\n             * Search obj for the value of node within using path.\n             * E.g. If obj = {\"tree\":{\"v\":1}} and path is \"tree.v\", it will\n             * search within the obj to find the value of \"tree.v\", returning object\n             * containing {value : val, unit : unit, scale : scale}.\n             */\n            getState: function getState(tree, state) {\n                var paths = state.split('.'),\n                    current = tree,\n                    i;\n\n                for (i = 0; i < paths.length; ++i) {\n                    //get index from node if it's array\n                    var index = paths[i].match(/[^[\\]]+(?=])/g);\n\n                    if (index == null) {\n                        if (current[paths[i]] == undefined) {\n                            return undefined;\n                        } else {\n                            current = current[paths[i]];\n                        }\n                    } else {\n                        var iNumber = index[0].replace(/[\\[\\]']+/g, \"\");\n\n                        //take index and brackets out of the equation for now\n                        var node = paths[i].replace(/ *\\[[^]]*\\] */g, \"\");\n\n                        if (current[node][parseInt(iNumber)] == undefined) {\n                            return undefined;\n                        } else {\n                            current = current[node][parseInt(iNumber)];\n                        }\n                    }\n                }\n                return current;\n            },\n\n            getItems: function getItems(history, name) {\n                var data = [];\n                for (var i = 0; i < history.length; i++) {\n                    var action = this.getId() + \"[\" + this.getId() + \".\" + name + \"[\" + i + \"].method].apply(\" + this.getId() + \", \" + this.getId() + \".\" + name + \"[\" + i + \"].arguments)\";\n                    data.push({\n                        \"label\": history[i].label,\n                        \"action\": [action],\n                        \"icon\": null,\n                        \"position\": i\n                    });\n                }\n                return data;\n            },\n\n            showHistoryMenu: function showHistoryMenu(event) {\n                var that = this;\n                if (this.controller.history.length > 0) {\n                    that.updateHistoryPosition = true;\n                    this.historyMenu.show({\n                        top: event.pageY,\n                        left: event.pageX + 1,\n                        groups: that.getItems(that.controller.history, \"controller.history\"),\n                        data: that\n                    });\n                }\n\n                if (event != null) {\n                    event.preventDefault();\n                }\n                return false;\n            },\n\n            showContextMenu: function showContextMenu(event, data) {\n                var handlers = GEPPETTO.MenuManager.getCommandsProvidersFor(data.getMetaType());\n\n                if (handlers.length > 0) {\n                    var groups = [];\n                    for (var handlerIndex = 0; handlerIndex < handlers.length; handlerIndex++) {\n                        groups = groups.concat(handlers[handlerIndex](data));\n                    }\n\n                    this.contextMenu.show({\n                        top: event.pageY,\n                        left: event.pageX + 1,\n                        groups: groups,\n                        //registeredItems: registeredItems,\n                        data: data\n                    });\n                }\n\n                if (event != null) {\n                    event.preventDefault();\n                }\n\n                return false;\n            }\n\n        }, _defineProperty(_Backbone$View$extend, 'showTitleBar', function showTitleBar(show) {\n            this.hasTitleBar = show;\n\n            if (show) {\n                this.$el.parent().find(\".ui-dialog-titlebar\").show();\n            } else {\n                this.$el.parent().find(\".ui-dialog-titlebar\").hide();\n            }\n\n            // set flag to indicate something changed\n            this.dirtyView = true;\n\n            return this;\n        }), _defineProperty(_Backbone$View$extend, 'updateNavigationHistoryBar', function updateNavigationHistoryBar() {\n            var disabled = \"arrow-disabled\";\n            if (this.getItems(this.controller.staticHistoryMenu, \"controller.staticHistoryMenu\").length <= 1) {\n                if (!$(\"#\" + this.id + \"-left-nav\").hasClass(disabled)) {\n                    $(\"#\" + this.id + \"-left-nav\").addClass(disabled);\n                    $(\"#\" + this.id + \"-right-nav\").addClass(disabled);\n                }\n            } else {\n                if ($(\"#\" + this.id + \"-left-nav\").hasClass(disabled)) {\n                    $(\"#\" + this.id + \"-left-nav\").removeClass(disabled);\n                    $(\"#\" + this.id + \"-right-nav\").removeClass(disabled);\n                }\n            }\n        }), _defineProperty(_Backbone$View$extend, 'showHistoryNavigationBar', function showHistoryNavigationBar(show) {\n            this.hasHistoryNavigationBar = show;\n            var leftNav = $(\"#\" + this.id + \"-left-nav\");\n            var rightNav = $(\"#\" + this.id + \"-right-nav\");\n\n            if (show) {\n                if (leftNav.length == 0 && rightNav.length == 0) {\n\n                    var disabled = \"\";\n                    if (this.getItems(this.controller.staticHistoryMenu, \"controller.staticHistoryMenu\").length <= 1) {\n                        disabled = \"arrow-disabled \";\n                    }\n\n                    var that = this;\n                    var button = $(\"<div id='\" + this.id + \"-left-nav' class='\" + disabled + \"fa fa-arrow-left'></div>\" + \"<div id='\" + this.id + \"-right-nav' class='\" + disabled + \"fa fa-arrow-right'></div>\").click(function (event) {\n                        var historyItems = that.getItems(that.controller.staticHistoryMenu, \"controller.staticHistoryMenu\");\n                        var item;\n                        that.lastExecutedAction = $(\"#\" + that.id).parent().find(\".ui-dialog-title\").html();\n                        if (event.target.id == that.id + \"-right-nav\") {\n                            that.executedAction = that.executedAction + 1;\n                            if (that.executedAction >= historyItems.length) {\n                                that.executedAction = 0;\n                            }\n\n                            var match = that.executedAction;\n                            for (var i = 0; i < historyItems.length; i++) {\n                                var currentItem = historyItems[i];\n                                if (that.lastExecutedAction == currentItem.label) {\n                                    match = i;\n                                }\n                            }\n\n                            if (that.lastExecutedAction == historyItems[that.executedAction].label) {\n                                that.executedAction = match + 1;\n                            }\n\n                            if (that.executedAction <= match) {\n                                that.executedAction = match + 1;\n                                if (that.executedAction >= historyItems.length) {\n                                    that.executedAction = 0;\n                                }\n                            }\n                        }\n                        if (event.target.id == that.id + \"-left-nav\") {\n                            that.executedAction = that.executedAction - 1;\n                            if (that.executedAction <= -1) {\n                                that.executedAction = historyItems.length - 1;\n                            }\n\n                            var match = that.executedAction;\n                            for (var i = 0; i < historyItems.length; i++) {\n                                var currentItem = historyItems[i];\n                                if (that.lastExecutedAction == currentItem.label) {\n                                    match = i;\n                                }\n                            }\n\n                            if (that.lastExecutedAction == historyItems[that.executedAction].label) {\n                                that.executedAction = match - 1;\n                            }\n\n                            if (that.executedAction <= -1) {\n                                that.executedAction = historyItems.length - 1;\n                            }\n\n                            if (that.executedAction > match) {\n                                that.executedAction = match - 1;\n                                if (that.executedAction <= -1) {\n                                    that.executedAction = historyItems.length - 1;\n                                }\n                            }\n                        }\n                        that.updateHistoryPosition = false;\n                        item = historyItems[that.executedAction].action[0];\n                        GEPPETTO.CommandController.execute(item, true);\n                        $(\"#\" + that.id).parent().find(\".ui-dialog-title\").html(historyItems[that.executedAction].label);\n                        event.stopPropagation();\n                    });\n\n                    button.insertBefore(this.dialogParent.find(\"span.ui-dialog-title\"));\n                    $(button).addClass(\"widget-title-bar-button\");\n                }\n            } else {\n                if (leftNav.is(\":visible\") && rightNav.is(\":visible\")) {\n                    leftNav.remove();\n                    rightNav.remove();\n                    this.executedAction = 0;\n                }\n            }\n        }), _defineProperty(_Backbone$View$extend, 'showCloseButton', function showCloseButton(show) {\n            if (show) {\n                this.$el.parent().find(\".ui-dialog-titlebar-close\").show();\n            } else {\n                this.$el.parent().find(\".ui-dialog-titlebar-close\").hide();\n            }\n        }), _defineProperty(_Backbone$View$extend, 'addButtonToTitleBar', function addButtonToTitleBar(button) {\n            this.dialogParent.find(\"div.ui-dialog-titlebar\").prepend(button);\n            $(button).addClass(\"widget-title-bar-button\");\n        }), _defineProperty(_Backbone$View$extend, 'setDraggable', function setDraggable(draggable) {\n            if (draggable) {\n                this.$el.parent().draggable({ disabled: false });\n                // NOTE: this will wipe any class applied to the widget...\n                this.setClass('');\n            } else {\n                this.$el.parent().draggable({ disabled: true });\n                this.setClass('noStyleDisableDrag');\n            }\n        }), _defineProperty(_Backbone$View$extend, 'setTransparentBackground', function setTransparentBackground(isTransparent) {\n            this.transparentBackground = isTransparent;\n\n            if (isTransparent) {\n                this.$el.parent().addClass('transparent-back');\n                this.previousMaxTransparency = true;\n            } else {\n                this.$el.parent().removeClass('transparent-back');\n            }\n            return this;\n        }), _defineProperty(_Backbone$View$extend, 'setClass', function setClass(className) {\n            this.$el.dialog({ dialogClass: className }).dialogExtend();\n        }), _defineProperty(_Backbone$View$extend, 'perfomEffect', function perfomEffect(effect, options, speed) {\n            this.$el.parent().effect(effect, options, speed);\n        }), _defineProperty(_Backbone$View$extend, 'shake', function shake(options, speed) {\n            if (options === undefined) {\n                options = { distance: 5, times: 3 };\n            }\n            if (speed === undefined) {\n                speed = 500;\n            }\n\n            this.$el.parent().effect('shake', options, speed);\n        }), _defineProperty(_Backbone$View$extend, 'render', function render() {\n            var _$$dialog$dialogExten;\n\n            var that = this;\n\n            //create the dialog window for the widget\n            this.dialog = $(\"<div id=\" + this.id + \" class='dialog' title='\" + this.name + \" Widget'></div>\").dialog({\n                resizable: true,\n                draggable: true,\n                top: 10,\n                height: 300,\n                width: 350,\n                closeOnEscape: false,\n                close: function close(event, ui) {\n                    if (event.originalEvent && $(event.originalEvent.target).closest(\".ui-dialog-titlebar-close\").length) {\n                        that.destroy();\n                    }\n                }\n            }).dialogExtend((_$$dialog$dialogExten = {\n                \"closable\": true,\n                \"maximizable\": true,\n                \"minimizable\": true,\n                \"collapsable\": true,\n                \"restore\": true,\n                \"minimizeLocation\": \"right\",\n                \"icons\": {\n                    \"maximize\": \"fa fa-expand\",\n                    \"minimize\": \"fa fa-window-minimize\",\n                    \"collapse\": \"fa  fa-chevron-circle-up\",\n                    \"restore\": \"fa fa-compress\"\n                },\n                \"load\": function load(evt, dlg) {\n                    var icons = $(\"#\" + that.id).parent().find(\".ui-icon\");\n                    for (var i = 0; i < icons.length; i++) {\n                        //remove text from span added by vendor library\n                        $(icons[i]).text(\"\");\n                    }\n                },\n                \"beforeMinimize\": function beforeMinimize(evt, dlg) {\n                    var label = that.name;\n                    if (label != undefined) {\n                        label = label.substring(0, 6);\n                    }\n                    that.$el.dialog({ title: label });\n                },\n                \"beforeMaximize\": function beforeMaximize(evt, dlg) {\n                    var divheight = that.size.height;\n                    var divwidth = that.size.width;\n                    that.previousMaxSize = { width: divwidth, height: divheight };\n                },\n                \"minimize\": function minimize(evt, dlg) {\n                    that.$el.dialog({ title: that.name });\n                    $(\".ui-dialog-titlebar-restore span\").removeClass(\"fa-chevron-circle-down\");\n                    $(\".ui-dialog-titlebar-restore span\").removeClass(\"fa-compress\");\n                    $(\".ui-dialog-titlebar-restore span\").addClass(\"fa-window-restore\");\n                    that.$el.parent().css(\"z-index\", zIndex.min);\n                },\n                \"maximize\": function maximize(evt, dlg) {\n                    that.setTransparentBackground(false);\n                    $(this).trigger('resizeEnd');\n                    var divheight = $(window).height();\n                    var divwidth = $(window).width();\n                    that.$el.dialog({ height: divheight, width: divwidth });\n                    $(\".ui-dialog-titlebar-restore span\").removeClass(\"fa-chevron-circle-down\");\n                    $(\".ui-dialog-titlebar-restore span\").removeClass(\"fa-window-restore\");\n                    $(\".ui-dialog-titlebar-restore span\").addClass(\"fa-compress\");\n                    that.maximize = true;\n                    that.$el.parent().css(\"z-index\", zIndex.max);\n                    that.size = {\n                        height: divheight,\n                        width: divwidth\n                    };\n                }\n            }, _defineProperty(_$$dialog$dialogExten, 'restore', function restore(evt, dlg) {\n                if (that.maximize) {\n                    that.setSize(that.previousMaxSize.height, that.previousMaxSize.width);\n                    $(this).trigger('restored', [that.id]);\n                }\n                that.setTransparentBackground(that.previousMaxTransparency);\n                $(this).trigger('resizeEnd');\n                that.maximize = false;\n                that.collapsed = false;\n                that.$el.parent().css(\"z-index\", zIndex.restore);\n            }), _defineProperty(_$$dialog$dialogExten, \"collapse\", function collapse(evt, dlg) {\n                $(\".ui-dialog-titlebar-restore span\").removeClass(\"fa-compress\");\n                $(\".ui-dialog-titlebar-restore span\").removeClass(\"fa-window-restore\");\n                $(\".ui-dialog-titlebar-restore span\").addClass(\"fa-chevron-circle-down\");\n                that.collapsed = true;\n                that.$el.parent().css(\"z-index\", zIndex.min);\n            }), _$$dialog$dialogExten));\n\n            this.$el = $(\"#\" + this.id);\n            this.dialogParent = this.$el.parent();\n\n            //add history\n            this.showHistoryIcon(true);\n\n            //remove the jQuery UI icon\n            this.dialogParent.find(\"button.ui-dialog-titlebar-close\").html(\"\");\n            this.dialogParent.find(\"button\").append(\"<i class='fa fa-close'></i>\");\n\n            //Take focus away from close button\n            this.dialogParent.find(\"button.ui-dialog-titlebar-close\").blur();\n\n            //add help button\n            this.showHelpIcon(true);\n        }), _defineProperty(_Backbone$View$extend, 'registerEvent', function registerEvent(event, callback) {\n            this.registeredEvents.push({ id: event, callback: callback });\n        }), _defineProperty(_Backbone$View$extend, 'unregisterEvent', function unregisterEvent(event) {\n            this.registeredEvents = _.reject(this.registeredEvents, function (el) {\n                return el.id === event;\n            });\n        }), _defineProperty(_Backbone$View$extend, 'setHelpInfo', function setHelpInfo(helpInfo) {\n            this.helpInfo = helpInfo;\n        }), _defineProperty(_Backbone$View$extend, 'getHelp', function getHelp() {\n            return this.helpInfo;\n        }), _defineProperty(_Backbone$View$extend, 'setController', function setController(controller) {\n            this.controller = controller;\n        }), _defineProperty(_Backbone$View$extend, 'showHelpIcon', function showHelpIcon(show) {\n            var that = this;\n            if (show && this.$el.parent().find(\".history-icon\").length == 0) {\n                this.addButtonToTitleBar($(\"<div class='fa fa-question help-icon' title='Widget Help'></div>\").click(function () {\n                    GEPPETTO.ComponentFactory.addComponent('MDMODAL', {\n                        title: that.id.slice(0, -1) + ' help',\n                        content: that.getHelp(),\n                        show: true\n                    }, document.getElementById(\"modal-region\"));\n                }));\n            } else {\n                this.$el.parent().find(\".help-icon\").remove();\n            }\n        }), _defineProperty(_Backbone$View$extend, 'showHistoryIcon', function showHistoryIcon(show) {\n            var that = this;\n            if (show && this.$el.parent().find(\".history-icon\").length == 0) {\n                this.addButtonToTitleBar($(\"<div class='fa fa-history history-icon' title='Show Navigation History'></div>\").click(function (event) {\n                    that.showHistoryMenu(event);\n                    event.stopPropagation();\n                }));\n            } else {\n                this.$el.parent().find(\".history-icon\").remove();\n            }\n        }), _defineProperty(_Backbone$View$extend, 'getView', function getView() {\n            // get default stuff such as id, position and size\n            return {\n                widgetType: this.widgetType,\n                isWidget: this.isWidget(),\n                showTitleBar: this.hasTitleBar,\n                showHistoryNavigationBar: this.hasHistoryNavigationBar,\n                transparentBackground: this.transparentBackground,\n                name: this.name,\n                size: {\n                    height: this.size.height,\n                    width: this.size.width\n                },\n                position: {\n                    left: this.position.left,\n                    top: this.position.top\n                }\n            };\n        }), _defineProperty(_Backbone$View$extend, 'setView', function setView(view) {\n            // set default stuff such as position and size\n            if (view.size != undefined && view.size.height != 0 && view.size.width != 0) {\n                this.setSize(view.size.height, view.size.width);\n            } else {\n                // trigger auto size if we have no size info\n                this.setAutoWidth();\n                this.setAutoHeight();\n            }\n\n            if (view.position != undefined) {\n                this.setPosition(view.position.left, view.position.top);\n            }\n\n            if (view.name != undefined) {\n                this.setName(view.name);\n            }\n\n            if (view.showTitleBar != undefined) {\n                this.showTitleBar(view.showTitleBar);\n            }\n\n            if (view.showHistoryNavigationBar != undefined) {\n                this.showHistoryNavigationBar(view.showHistoryNavigationBar);\n            }\n\n            if (view.transparentBackground != undefined) {\n                this.setTransparentBackground(view.transparentBackground);\n            }\n\n            // after setting view through setView, reset dirty flag\n            this.dirtyView = false;\n        }), _defineProperty(_Backbone$View$extend, 'isStateLess', function isStateLess() {\n            return this.stateless;\n        }), _defineProperty(_Backbone$View$extend, 'isWidget', function isWidget() {\n            return true;\n        }), _Backbone$View$extend))\n    };\n}.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/components/widgets/Widget.js\n// module id = 1132\n// module chunks = 29 30 31 32 33 34\n\n//# sourceURL=webpack:///./js/components/widgets/Widget.js?");

/***/ }),

/***/ 1370:
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n     _ _      _       _\n ___| (_) ___| | __  (_)___\n/ __| | |/ __| |/ /  | / __|\n\\__ \\ | | (__|   < _ | \\__ \\\n|___/_|_|\\___|_|\\_(_)/ |___/\n                   |__/\n\n Version: 1.8.1\n  Author: Ken Wheeler\n Website: http://kenwheeler.github.io\n    Docs: http://kenwheeler.github.io/slick\n    Repo: http://github.com/kenwheeler/slick\n  Issues: http://github.com/kenwheeler/slick/issues\n\n */\n/* global window, document, define, jQuery, setInterval, clearInterval */\n;(function(factory) {\n    'use strict';\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(9)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports !== 'undefined') {\n        module.exports = factory(require('jquery'));\n    } else {\n        factory(jQuery);\n    }\n\n}(function($) {\n    'use strict';\n    var Slick = window.Slick || {};\n\n    Slick = (function() {\n\n        var instanceUid = 0;\n\n        function Slick(element, settings) {\n\n            var _ = this, dataSettings;\n\n            _.defaults = {\n                accessibility: true,\n                adaptiveHeight: false,\n                appendArrows: $(element),\n                appendDots: $(element),\n                arrows: true,\n                asNavFor: null,\n                prevArrow: '<button class=\"slick-prev\" aria-label=\"Previous\" type=\"button\">Previous</button>',\n                nextArrow: '<button class=\"slick-next\" aria-label=\"Next\" type=\"button\">Next</button>',\n                autoplay: false,\n                autoplaySpeed: 3000,\n                centerMode: false,\n                centerPadding: '50px',\n                cssEase: 'ease',\n                customPaging: function(slider, i) {\n                    return $('<button type=\"button\" />').text(i + 1);\n                },\n                dots: false,\n                dotsClass: 'slick-dots',\n                draggable: true,\n                easing: 'linear',\n                edgeFriction: 0.35,\n                fade: false,\n                focusOnSelect: false,\n                focusOnChange: false,\n                infinite: true,\n                initialSlide: 0,\n                lazyLoad: 'ondemand',\n                mobileFirst: false,\n                pauseOnHover: true,\n                pauseOnFocus: true,\n                pauseOnDotsHover: false,\n                respondTo: 'window',\n                responsive: null,\n                rows: 1,\n                rtl: false,\n                slide: '',\n                slidesPerRow: 1,\n                slidesToShow: 1,\n                slidesToScroll: 1,\n                speed: 500,\n                swipe: true,\n                swipeToSlide: false,\n                touchMove: true,\n                touchThreshold: 5,\n                useCSS: true,\n                useTransform: true,\n                variableWidth: false,\n                vertical: false,\n                verticalSwiping: false,\n                waitForAnimate: true,\n                zIndex: 1000\n            };\n\n            _.initials = {\n                animating: false,\n                dragging: false,\n                autoPlayTimer: null,\n                currentDirection: 0,\n                currentLeft: null,\n                currentSlide: 0,\n                direction: 1,\n                $dots: null,\n                listWidth: null,\n                listHeight: null,\n                loadIndex: 0,\n                $nextArrow: null,\n                $prevArrow: null,\n                scrolling: false,\n                slideCount: null,\n                slideWidth: null,\n                $slideTrack: null,\n                $slides: null,\n                sliding: false,\n                slideOffset: 0,\n                swipeLeft: null,\n                swiping: false,\n                $list: null,\n                touchObject: {},\n                transformsEnabled: false,\n                unslicked: false\n            };\n\n            $.extend(_, _.initials);\n\n            _.activeBreakpoint = null;\n            _.animType = null;\n            _.animProp = null;\n            _.breakpoints = [];\n            _.breakpointSettings = [];\n            _.cssTransitions = false;\n            _.focussed = false;\n            _.interrupted = false;\n            _.hidden = 'hidden';\n            _.paused = true;\n            _.positionProp = null;\n            _.respondTo = null;\n            _.rowCount = 1;\n            _.shouldClick = true;\n            _.$slider = $(element);\n            _.$slidesCache = null;\n            _.transformType = null;\n            _.transitionType = null;\n            _.visibilityChange = 'visibilitychange';\n            _.windowWidth = 0;\n            _.windowTimer = null;\n\n            dataSettings = $(element).data('slick') || {};\n\n            _.options = $.extend({}, _.defaults, settings, dataSettings);\n\n            _.currentSlide = _.options.initialSlide;\n\n            _.originalSettings = _.options;\n\n            if (typeof document.mozHidden !== 'undefined') {\n                _.hidden = 'mozHidden';\n                _.visibilityChange = 'mozvisibilitychange';\n            } else if (typeof document.webkitHidden !== 'undefined') {\n                _.hidden = 'webkitHidden';\n                _.visibilityChange = 'webkitvisibilitychange';\n            }\n\n            _.autoPlay = $.proxy(_.autoPlay, _);\n            _.autoPlayClear = $.proxy(_.autoPlayClear, _);\n            _.autoPlayIterator = $.proxy(_.autoPlayIterator, _);\n            _.changeSlide = $.proxy(_.changeSlide, _);\n            _.clickHandler = $.proxy(_.clickHandler, _);\n            _.selectHandler = $.proxy(_.selectHandler, _);\n            _.setPosition = $.proxy(_.setPosition, _);\n            _.swipeHandler = $.proxy(_.swipeHandler, _);\n            _.dragHandler = $.proxy(_.dragHandler, _);\n            _.keyHandler = $.proxy(_.keyHandler, _);\n\n            _.instanceUid = instanceUid++;\n\n            // A simple way to check for HTML strings\n            // Strict HTML recognition (must start with <)\n            // Extracted from jQuery v1.11 source\n            _.htmlExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*)$/;\n\n\n            _.registerBreakpoints();\n            _.init(true);\n\n        }\n\n        return Slick;\n\n    }());\n\n    Slick.prototype.activateADA = function() {\n        var _ = this;\n\n        _.$slideTrack.find('.slick-active').attr({\n            'aria-hidden': 'false'\n        }).find('a, input, button, select').attr({\n            'tabindex': '0'\n        });\n\n    };\n\n    Slick.prototype.addSlide = Slick.prototype.slickAdd = function(markup, index, addBefore) {\n\n        var _ = this;\n\n        if (typeof(index) === 'boolean') {\n            addBefore = index;\n            index = null;\n        } else if (index < 0 || (index >= _.slideCount)) {\n            return false;\n        }\n\n        _.unload();\n\n        if (typeof(index) === 'number') {\n            if (index === 0 && _.$slides.length === 0) {\n                $(markup).appendTo(_.$slideTrack);\n            } else if (addBefore) {\n                $(markup).insertBefore(_.$slides.eq(index));\n            } else {\n                $(markup).insertAfter(_.$slides.eq(index));\n            }\n        } else {\n            if (addBefore === true) {\n                $(markup).prependTo(_.$slideTrack);\n            } else {\n                $(markup).appendTo(_.$slideTrack);\n            }\n        }\n\n        _.$slides = _.$slideTrack.children(this.options.slide);\n\n        _.$slideTrack.children(this.options.slide).detach();\n\n        _.$slideTrack.append(_.$slides);\n\n        _.$slides.each(function(index, element) {\n            $(element).attr('data-slick-index', index);\n        });\n\n        _.$slidesCache = _.$slides;\n\n        _.reinit();\n\n    };\n\n    Slick.prototype.animateHeight = function() {\n        var _ = this;\n        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {\n            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);\n            _.$list.animate({\n                height: targetHeight\n            }, _.options.speed);\n        }\n    };\n\n    Slick.prototype.animateSlide = function(targetLeft, callback) {\n\n        var animProps = {},\n            _ = this;\n\n        _.animateHeight();\n\n        if (_.options.rtl === true && _.options.vertical === false) {\n            targetLeft = -targetLeft;\n        }\n        if (_.transformsEnabled === false) {\n            if (_.options.vertical === false) {\n                _.$slideTrack.animate({\n                    left: targetLeft\n                }, _.options.speed, _.options.easing, callback);\n            } else {\n                _.$slideTrack.animate({\n                    top: targetLeft\n                }, _.options.speed, _.options.easing, callback);\n            }\n\n        } else {\n\n            if (_.cssTransitions === false) {\n                if (_.options.rtl === true) {\n                    _.currentLeft = -(_.currentLeft);\n                }\n                $({\n                    animStart: _.currentLeft\n                }).animate({\n                    animStart: targetLeft\n                }, {\n                    duration: _.options.speed,\n                    easing: _.options.easing,\n                    step: function(now) {\n                        now = Math.ceil(now);\n                        if (_.options.vertical === false) {\n                            animProps[_.animType] = 'translate(' +\n                                now + 'px, 0px)';\n                            _.$slideTrack.css(animProps);\n                        } else {\n                            animProps[_.animType] = 'translate(0px,' +\n                                now + 'px)';\n                            _.$slideTrack.css(animProps);\n                        }\n                    },\n                    complete: function() {\n                        if (callback) {\n                            callback.call();\n                        }\n                    }\n                });\n\n            } else {\n\n                _.applyTransition();\n                targetLeft = Math.ceil(targetLeft);\n\n                if (_.options.vertical === false) {\n                    animProps[_.animType] = 'translate3d(' + targetLeft + 'px, 0px, 0px)';\n                } else {\n                    animProps[_.animType] = 'translate3d(0px,' + targetLeft + 'px, 0px)';\n                }\n                _.$slideTrack.css(animProps);\n\n                if (callback) {\n                    setTimeout(function() {\n\n                        _.disableTransition();\n\n                        callback.call();\n                    }, _.options.speed);\n                }\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.getNavTarget = function() {\n\n        var _ = this,\n            asNavFor = _.options.asNavFor;\n\n        if ( asNavFor && asNavFor !== null ) {\n            asNavFor = $(asNavFor).not(_.$slider);\n        }\n\n        return asNavFor;\n\n    };\n\n    Slick.prototype.asNavFor = function(index) {\n\n        var _ = this,\n            asNavFor = _.getNavTarget();\n\n        if ( asNavFor !== null && typeof asNavFor === 'object' ) {\n            asNavFor.each(function() {\n                var target = $(this).slick('getSlick');\n                if(!target.unslicked) {\n                    target.slideHandler(index, true);\n                }\n            });\n        }\n\n    };\n\n    Slick.prototype.applyTransition = function(slide) {\n\n        var _ = this,\n            transition = {};\n\n        if (_.options.fade === false) {\n            transition[_.transitionType] = _.transformType + ' ' + _.options.speed + 'ms ' + _.options.cssEase;\n        } else {\n            transition[_.transitionType] = 'opacity ' + _.options.speed + 'ms ' + _.options.cssEase;\n        }\n\n        if (_.options.fade === false) {\n            _.$slideTrack.css(transition);\n        } else {\n            _.$slides.eq(slide).css(transition);\n        }\n\n    };\n\n    Slick.prototype.autoPlay = function() {\n\n        var _ = this;\n\n        _.autoPlayClear();\n\n        if ( _.slideCount > _.options.slidesToShow ) {\n            _.autoPlayTimer = setInterval( _.autoPlayIterator, _.options.autoplaySpeed );\n        }\n\n    };\n\n    Slick.prototype.autoPlayClear = function() {\n\n        var _ = this;\n\n        if (_.autoPlayTimer) {\n            clearInterval(_.autoPlayTimer);\n        }\n\n    };\n\n    Slick.prototype.autoPlayIterator = function() {\n\n        var _ = this,\n            slideTo = _.currentSlide + _.options.slidesToScroll;\n\n        if ( !_.paused && !_.interrupted && !_.focussed ) {\n\n            if ( _.options.infinite === false ) {\n\n                if ( _.direction === 1 && ( _.currentSlide + 1 ) === ( _.slideCount - 1 )) {\n                    _.direction = 0;\n                }\n\n                else if ( _.direction === 0 ) {\n\n                    slideTo = _.currentSlide - _.options.slidesToScroll;\n\n                    if ( _.currentSlide - 1 === 0 ) {\n                        _.direction = 1;\n                    }\n\n                }\n\n            }\n\n            _.slideHandler( slideTo );\n\n        }\n\n    };\n\n    Slick.prototype.buildArrows = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true ) {\n\n            _.$prevArrow = $(_.options.prevArrow).addClass('slick-arrow');\n            _.$nextArrow = $(_.options.nextArrow).addClass('slick-arrow');\n\n            if( _.slideCount > _.options.slidesToShow ) {\n\n                _.$prevArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');\n                _.$nextArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');\n\n                if (_.htmlExpr.test(_.options.prevArrow)) {\n                    _.$prevArrow.prependTo(_.options.appendArrows);\n                }\n\n                if (_.htmlExpr.test(_.options.nextArrow)) {\n                    _.$nextArrow.appendTo(_.options.appendArrows);\n                }\n\n                if (_.options.infinite !== true) {\n                    _.$prevArrow\n                        .addClass('slick-disabled')\n                        .attr('aria-disabled', 'true');\n                }\n\n            } else {\n\n                _.$prevArrow.add( _.$nextArrow )\n\n                    .addClass('slick-hidden')\n                    .attr({\n                        'aria-disabled': 'true',\n                        'tabindex': '-1'\n                    });\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.buildDots = function() {\n\n        var _ = this,\n            i, dot;\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$slider.addClass('slick-dotted');\n\n            dot = $('<ul />').addClass(_.options.dotsClass);\n\n            for (i = 0; i <= _.getDotCount(); i += 1) {\n                dot.append($('<li />').append(_.options.customPaging.call(this, _, i)));\n            }\n\n            _.$dots = dot.appendTo(_.options.appendDots);\n\n            _.$dots.find('li').first().addClass('slick-active');\n\n        }\n\n    };\n\n    Slick.prototype.buildOut = function() {\n\n        var _ = this;\n\n        _.$slides =\n            _.$slider\n                .children( _.options.slide + ':not(.slick-cloned)')\n                .addClass('slick-slide');\n\n        _.slideCount = _.$slides.length;\n\n        _.$slides.each(function(index, element) {\n            $(element)\n                .attr('data-slick-index', index)\n                .data('originalStyling', $(element).attr('style') || '');\n        });\n\n        _.$slider.addClass('slick-slider');\n\n        _.$slideTrack = (_.slideCount === 0) ?\n            $('<div class=\"slick-track\"/>').appendTo(_.$slider) :\n            _.$slides.wrapAll('<div class=\"slick-track\"/>').parent();\n\n        _.$list = _.$slideTrack.wrap(\n            '<div class=\"slick-list\"/>').parent();\n        _.$slideTrack.css('opacity', 0);\n\n        if (_.options.centerMode === true || _.options.swipeToSlide === true) {\n            _.options.slidesToScroll = 1;\n        }\n\n        $('img[data-lazy]', _.$slider).not('[src]').addClass('slick-loading');\n\n        _.setupInfinite();\n\n        _.buildArrows();\n\n        _.buildDots();\n\n        _.updateDots();\n\n\n        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);\n\n        if (_.options.draggable === true) {\n            _.$list.addClass('draggable');\n        }\n\n    };\n\n    Slick.prototype.buildRows = function() {\n\n        var _ = this, a, b, c, newSlides, numOfSlides, originalSlides,slidesPerSection;\n\n        newSlides = document.createDocumentFragment();\n        originalSlides = _.$slider.children();\n\n        if(_.options.rows > 0) {\n\n            slidesPerSection = _.options.slidesPerRow * _.options.rows;\n            numOfSlides = Math.ceil(\n                originalSlides.length / slidesPerSection\n            );\n\n            for(a = 0; a < numOfSlides; a++){\n                var slide = document.createElement('div');\n                for(b = 0; b < _.options.rows; b++) {\n                    var row = document.createElement('div');\n                    for(c = 0; c < _.options.slidesPerRow; c++) {\n                        var target = (a * slidesPerSection + ((b * _.options.slidesPerRow) + c));\n                        if (originalSlides.get(target)) {\n                            row.appendChild(originalSlides.get(target));\n                        }\n                    }\n                    slide.appendChild(row);\n                }\n                newSlides.appendChild(slide);\n            }\n\n            _.$slider.empty().append(newSlides);\n            _.$slider.children().children().children()\n                .css({\n                    'width':(100 / _.options.slidesPerRow) + '%',\n                    'display': 'inline-block'\n                });\n\n        }\n\n    };\n\n    Slick.prototype.checkResponsive = function(initial, forceUpdate) {\n\n        var _ = this,\n            breakpoint, targetBreakpoint, respondToWidth, triggerBreakpoint = false;\n        var sliderWidth = _.$slider.width();\n        var windowWidth = window.innerWidth || $(window).width();\n\n        if (_.respondTo === 'window') {\n            respondToWidth = windowWidth;\n        } else if (_.respondTo === 'slider') {\n            respondToWidth = sliderWidth;\n        } else if (_.respondTo === 'min') {\n            respondToWidth = Math.min(windowWidth, sliderWidth);\n        }\n\n        if ( _.options.responsive &&\n            _.options.responsive.length &&\n            _.options.responsive !== null) {\n\n            targetBreakpoint = null;\n\n            for (breakpoint in _.breakpoints) {\n                if (_.breakpoints.hasOwnProperty(breakpoint)) {\n                    if (_.originalSettings.mobileFirst === false) {\n                        if (respondToWidth < _.breakpoints[breakpoint]) {\n                            targetBreakpoint = _.breakpoints[breakpoint];\n                        }\n                    } else {\n                        if (respondToWidth > _.breakpoints[breakpoint]) {\n                            targetBreakpoint = _.breakpoints[breakpoint];\n                        }\n                    }\n                }\n            }\n\n            if (targetBreakpoint !== null) {\n                if (_.activeBreakpoint !== null) {\n                    if (targetBreakpoint !== _.activeBreakpoint || forceUpdate) {\n                        _.activeBreakpoint =\n                            targetBreakpoint;\n                        if (_.breakpointSettings[targetBreakpoint] === 'unslick') {\n                            _.unslick(targetBreakpoint);\n                        } else {\n                            _.options = $.extend({}, _.originalSettings,\n                                _.breakpointSettings[\n                                    targetBreakpoint]);\n                            if (initial === true) {\n                                _.currentSlide = _.options.initialSlide;\n                            }\n                            _.refresh(initial);\n                        }\n                        triggerBreakpoint = targetBreakpoint;\n                    }\n                } else {\n                    _.activeBreakpoint = targetBreakpoint;\n                    if (_.breakpointSettings[targetBreakpoint] === 'unslick') {\n                        _.unslick(targetBreakpoint);\n                    } else {\n                        _.options = $.extend({}, _.originalSettings,\n                            _.breakpointSettings[\n                                targetBreakpoint]);\n                        if (initial === true) {\n                            _.currentSlide = _.options.initialSlide;\n                        }\n                        _.refresh(initial);\n                    }\n                    triggerBreakpoint = targetBreakpoint;\n                }\n            } else {\n                if (_.activeBreakpoint !== null) {\n                    _.activeBreakpoint = null;\n                    _.options = _.originalSettings;\n                    if (initial === true) {\n                        _.currentSlide = _.options.initialSlide;\n                    }\n                    _.refresh(initial);\n                    triggerBreakpoint = targetBreakpoint;\n                }\n            }\n\n            // only trigger breakpoints during an actual break. not on initialize.\n            if( !initial && triggerBreakpoint !== false ) {\n                _.$slider.trigger('breakpoint', [_, triggerBreakpoint]);\n            }\n        }\n\n    };\n\n    Slick.prototype.changeSlide = function(event, dontAnimate) {\n\n        var _ = this,\n            $target = $(event.currentTarget),\n            indexOffset, slideOffset, unevenOffset;\n\n        // If target is a link, prevent default action.\n        if($target.is('a')) {\n            event.preventDefault();\n        }\n\n        // If target is not the <li> element (ie: a child), find the <li>.\n        if(!$target.is('li')) {\n            $target = $target.closest('li');\n        }\n\n        unevenOffset = (_.slideCount % _.options.slidesToScroll !== 0);\n        indexOffset = unevenOffset ? 0 : (_.slideCount - _.currentSlide) % _.options.slidesToScroll;\n\n        switch (event.data.message) {\n\n            case 'previous':\n                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : _.options.slidesToShow - indexOffset;\n                if (_.slideCount > _.options.slidesToShow) {\n                    _.slideHandler(_.currentSlide - slideOffset, false, dontAnimate);\n                }\n                break;\n\n            case 'next':\n                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : indexOffset;\n                if (_.slideCount > _.options.slidesToShow) {\n                    _.slideHandler(_.currentSlide + slideOffset, false, dontAnimate);\n                }\n                break;\n\n            case 'index':\n                var index = event.data.index === 0 ? 0 :\n                    event.data.index || $target.index() * _.options.slidesToScroll;\n\n                _.slideHandler(_.checkNavigable(index), false, dontAnimate);\n                $target.children().trigger('focus');\n                break;\n\n            default:\n                return;\n        }\n\n    };\n\n    Slick.prototype.checkNavigable = function(index) {\n\n        var _ = this,\n            navigables, prevNavigable;\n\n        navigables = _.getNavigableIndexes();\n        prevNavigable = 0;\n        if (index > navigables[navigables.length - 1]) {\n            index = navigables[navigables.length - 1];\n        } else {\n            for (var n in navigables) {\n                if (index < navigables[n]) {\n                    index = prevNavigable;\n                    break;\n                }\n                prevNavigable = navigables[n];\n            }\n        }\n\n        return index;\n    };\n\n    Slick.prototype.cleanUpEvents = function() {\n\n        var _ = this;\n\n        if (_.options.dots && _.$dots !== null) {\n\n            $('li', _.$dots)\n                .off('click.slick', _.changeSlide)\n                .off('mouseenter.slick', $.proxy(_.interrupt, _, true))\n                .off('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n            if (_.options.accessibility === true) {\n                _.$dots.off('keydown.slick', _.keyHandler);\n            }\n        }\n\n        _.$slider.off('focus.slick blur.slick');\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n            _.$prevArrow && _.$prevArrow.off('click.slick', _.changeSlide);\n            _.$nextArrow && _.$nextArrow.off('click.slick', _.changeSlide);\n\n            if (_.options.accessibility === true) {\n                _.$prevArrow && _.$prevArrow.off('keydown.slick', _.keyHandler);\n                _.$nextArrow && _.$nextArrow.off('keydown.slick', _.keyHandler);\n            }\n        }\n\n        _.$list.off('touchstart.slick mousedown.slick', _.swipeHandler);\n        _.$list.off('touchmove.slick mousemove.slick', _.swipeHandler);\n        _.$list.off('touchend.slick mouseup.slick', _.swipeHandler);\n        _.$list.off('touchcancel.slick mouseleave.slick', _.swipeHandler);\n\n        _.$list.off('click.slick', _.clickHandler);\n\n        $(document).off(_.visibilityChange, _.visibility);\n\n        _.cleanUpSlideEvents();\n\n        if (_.options.accessibility === true) {\n            _.$list.off('keydown.slick', _.keyHandler);\n        }\n\n        if (_.options.focusOnSelect === true) {\n            $(_.$slideTrack).children().off('click.slick', _.selectHandler);\n        }\n\n        $(window).off('orientationchange.slick.slick-' + _.instanceUid, _.orientationChange);\n\n        $(window).off('resize.slick.slick-' + _.instanceUid, _.resize);\n\n        $('[draggable!=true]', _.$slideTrack).off('dragstart', _.preventDefault);\n\n        $(window).off('load.slick.slick-' + _.instanceUid, _.setPosition);\n\n    };\n\n    Slick.prototype.cleanUpSlideEvents = function() {\n\n        var _ = this;\n\n        _.$list.off('mouseenter.slick', $.proxy(_.interrupt, _, true));\n        _.$list.off('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n    };\n\n    Slick.prototype.cleanUpRows = function() {\n\n        var _ = this, originalSlides;\n\n        if(_.options.rows > 0) {\n            originalSlides = _.$slides.children().children();\n            originalSlides.removeAttr('style');\n            _.$slider.empty().append(originalSlides);\n        }\n\n    };\n\n    Slick.prototype.clickHandler = function(event) {\n\n        var _ = this;\n\n        if (_.shouldClick === false) {\n            event.stopImmediatePropagation();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n\n    };\n\n    Slick.prototype.destroy = function(refresh) {\n\n        var _ = this;\n\n        _.autoPlayClear();\n\n        _.touchObject = {};\n\n        _.cleanUpEvents();\n\n        $('.slick-cloned', _.$slider).detach();\n\n        if (_.$dots) {\n            _.$dots.remove();\n        }\n\n        if ( _.$prevArrow && _.$prevArrow.length ) {\n\n            _.$prevArrow\n                .removeClass('slick-disabled slick-arrow slick-hidden')\n                .removeAttr('aria-hidden aria-disabled tabindex')\n                .css('display','');\n\n            if ( _.htmlExpr.test( _.options.prevArrow )) {\n                _.$prevArrow.remove();\n            }\n        }\n\n        if ( _.$nextArrow && _.$nextArrow.length ) {\n\n            _.$nextArrow\n                .removeClass('slick-disabled slick-arrow slick-hidden')\n                .removeAttr('aria-hidden aria-disabled tabindex')\n                .css('display','');\n\n            if ( _.htmlExpr.test( _.options.nextArrow )) {\n                _.$nextArrow.remove();\n            }\n        }\n\n\n        if (_.$slides) {\n\n            _.$slides\n                .removeClass('slick-slide slick-active slick-center slick-visible slick-current')\n                .removeAttr('aria-hidden')\n                .removeAttr('data-slick-index')\n                .each(function(){\n                    $(this).attr('style', $(this).data('originalStyling'));\n                });\n\n            _.$slideTrack.children(this.options.slide).detach();\n\n            _.$slideTrack.detach();\n\n            _.$list.detach();\n\n            _.$slider.append(_.$slides);\n        }\n\n        _.cleanUpRows();\n\n        _.$slider.removeClass('slick-slider');\n        _.$slider.removeClass('slick-initialized');\n        _.$slider.removeClass('slick-dotted');\n\n        _.unslicked = true;\n\n        if(!refresh) {\n            _.$slider.trigger('destroy', [_]);\n        }\n\n    };\n\n    Slick.prototype.disableTransition = function(slide) {\n\n        var _ = this,\n            transition = {};\n\n        transition[_.transitionType] = '';\n\n        if (_.options.fade === false) {\n            _.$slideTrack.css(transition);\n        } else {\n            _.$slides.eq(slide).css(transition);\n        }\n\n    };\n\n    Slick.prototype.fadeSlide = function(slideIndex, callback) {\n\n        var _ = this;\n\n        if (_.cssTransitions === false) {\n\n            _.$slides.eq(slideIndex).css({\n                zIndex: _.options.zIndex\n            });\n\n            _.$slides.eq(slideIndex).animate({\n                opacity: 1\n            }, _.options.speed, _.options.easing, callback);\n\n        } else {\n\n            _.applyTransition(slideIndex);\n\n            _.$slides.eq(slideIndex).css({\n                opacity: 1,\n                zIndex: _.options.zIndex\n            });\n\n            if (callback) {\n                setTimeout(function() {\n\n                    _.disableTransition(slideIndex);\n\n                    callback.call();\n                }, _.options.speed);\n            }\n\n        }\n\n    };\n\n    Slick.prototype.fadeSlideOut = function(slideIndex) {\n\n        var _ = this;\n\n        if (_.cssTransitions === false) {\n\n            _.$slides.eq(slideIndex).animate({\n                opacity: 0,\n                zIndex: _.options.zIndex - 2\n            }, _.options.speed, _.options.easing);\n\n        } else {\n\n            _.applyTransition(slideIndex);\n\n            _.$slides.eq(slideIndex).css({\n                opacity: 0,\n                zIndex: _.options.zIndex - 2\n            });\n\n        }\n\n    };\n\n    Slick.prototype.filterSlides = Slick.prototype.slickFilter = function(filter) {\n\n        var _ = this;\n\n        if (filter !== null) {\n\n            _.$slidesCache = _.$slides;\n\n            _.unload();\n\n            _.$slideTrack.children(this.options.slide).detach();\n\n            _.$slidesCache.filter(filter).appendTo(_.$slideTrack);\n\n            _.reinit();\n\n        }\n\n    };\n\n    Slick.prototype.focusHandler = function() {\n\n        var _ = this;\n\n        _.$slider\n            .off('focus.slick blur.slick')\n            .on('focus.slick blur.slick', '*', function(event) {\n\n            event.stopImmediatePropagation();\n            var $sf = $(this);\n\n            setTimeout(function() {\n\n                if( _.options.pauseOnFocus ) {\n                    _.focussed = $sf.is(':focus');\n                    _.autoPlay();\n                }\n\n            }, 0);\n\n        });\n    };\n\n    Slick.prototype.getCurrent = Slick.prototype.slickCurrentSlide = function() {\n\n        var _ = this;\n        return _.currentSlide;\n\n    };\n\n    Slick.prototype.getDotCount = function() {\n\n        var _ = this;\n\n        var breakPoint = 0;\n        var counter = 0;\n        var pagerQty = 0;\n\n        if (_.options.infinite === true) {\n            if (_.slideCount <= _.options.slidesToShow) {\n                 ++pagerQty;\n            } else {\n                while (breakPoint < _.slideCount) {\n                    ++pagerQty;\n                    breakPoint = counter + _.options.slidesToScroll;\n                    counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n                }\n            }\n        } else if (_.options.centerMode === true) {\n            pagerQty = _.slideCount;\n        } else if(!_.options.asNavFor) {\n            pagerQty = 1 + Math.ceil((_.slideCount - _.options.slidesToShow) / _.options.slidesToScroll);\n        }else {\n            while (breakPoint < _.slideCount) {\n                ++pagerQty;\n                breakPoint = counter + _.options.slidesToScroll;\n                counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n            }\n        }\n\n        return pagerQty - 1;\n\n    };\n\n    Slick.prototype.getLeft = function(slideIndex) {\n\n        var _ = this,\n            targetLeft,\n            verticalHeight,\n            verticalOffset = 0,\n            targetSlide,\n            coef;\n\n        _.slideOffset = 0;\n        verticalHeight = _.$slides.first().outerHeight(true);\n\n        if (_.options.infinite === true) {\n            if (_.slideCount > _.options.slidesToShow) {\n                _.slideOffset = (_.slideWidth * _.options.slidesToShow) * -1;\n                coef = -1\n\n                if (_.options.vertical === true && _.options.centerMode === true) {\n                    if (_.options.slidesToShow === 2) {\n                        coef = -1.5;\n                    } else if (_.options.slidesToShow === 1) {\n                        coef = -2\n                    }\n                }\n                verticalOffset = (verticalHeight * _.options.slidesToShow) * coef;\n            }\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                if (slideIndex + _.options.slidesToScroll > _.slideCount && _.slideCount > _.options.slidesToShow) {\n                    if (slideIndex > _.slideCount) {\n                        _.slideOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * _.slideWidth) * -1;\n                        verticalOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * verticalHeight) * -1;\n                    } else {\n                        _.slideOffset = ((_.slideCount % _.options.slidesToScroll) * _.slideWidth) * -1;\n                        verticalOffset = ((_.slideCount % _.options.slidesToScroll) * verticalHeight) * -1;\n                    }\n                }\n            }\n        } else {\n            if (slideIndex + _.options.slidesToShow > _.slideCount) {\n                _.slideOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * _.slideWidth;\n                verticalOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * verticalHeight;\n            }\n        }\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            _.slideOffset = 0;\n            verticalOffset = 0;\n        }\n\n        if (_.options.centerMode === true && _.slideCount <= _.options.slidesToShow) {\n            _.slideOffset = ((_.slideWidth * Math.floor(_.options.slidesToShow)) / 2) - ((_.slideWidth * _.slideCount) / 2);\n        } else if (_.options.centerMode === true && _.options.infinite === true) {\n            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2) - _.slideWidth;\n        } else if (_.options.centerMode === true) {\n            _.slideOffset = 0;\n            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2);\n        }\n\n        if (_.options.vertical === false) {\n            targetLeft = ((slideIndex * _.slideWidth) * -1) + _.slideOffset;\n        } else {\n            targetLeft = ((slideIndex * verticalHeight) * -1) + verticalOffset;\n        }\n\n        if (_.options.variableWidth === true) {\n\n            if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {\n                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);\n            } else {\n                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow);\n            }\n\n            if (_.options.rtl === true) {\n                if (targetSlide[0]) {\n                    targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;\n                } else {\n                    targetLeft =  0;\n                }\n            } else {\n                targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;\n            }\n\n            if (_.options.centerMode === true) {\n                if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {\n                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);\n                } else {\n                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow + 1);\n                }\n\n                if (_.options.rtl === true) {\n                    if (targetSlide[0]) {\n                        targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;\n                    } else {\n                        targetLeft =  0;\n                    }\n                } else {\n                    targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;\n                }\n\n                targetLeft += (_.$list.width() - targetSlide.outerWidth()) / 2;\n            }\n        }\n\n        return targetLeft;\n\n    };\n\n    Slick.prototype.getOption = Slick.prototype.slickGetOption = function(option) {\n\n        var _ = this;\n\n        return _.options[option];\n\n    };\n\n    Slick.prototype.getNavigableIndexes = function() {\n\n        var _ = this,\n            breakPoint = 0,\n            counter = 0,\n            indexes = [],\n            max;\n\n        if (_.options.infinite === false) {\n            max = _.slideCount;\n        } else {\n            breakPoint = _.options.slidesToScroll * -1;\n            counter = _.options.slidesToScroll * -1;\n            max = _.slideCount * 2;\n        }\n\n        while (breakPoint < max) {\n            indexes.push(breakPoint);\n            breakPoint = counter + _.options.slidesToScroll;\n            counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n        }\n\n        return indexes;\n\n    };\n\n    Slick.prototype.getSlick = function() {\n\n        return this;\n\n    };\n\n    Slick.prototype.getSlideCount = function() {\n\n        var _ = this,\n            slidesTraversed, swipedSlide, centerOffset;\n\n        centerOffset = _.options.centerMode === true ? _.slideWidth * Math.floor(_.options.slidesToShow / 2) : 0;\n\n        if (_.options.swipeToSlide === true) {\n            _.$slideTrack.find('.slick-slide').each(function(index, slide) {\n                if (slide.offsetLeft - centerOffset + ($(slide).outerWidth() / 2) > (_.swipeLeft * -1)) {\n                    swipedSlide = slide;\n                    return false;\n                }\n            });\n\n            slidesTraversed = Math.abs($(swipedSlide).attr('data-slick-index') - _.currentSlide) || 1;\n\n            return slidesTraversed;\n\n        } else {\n            return _.options.slidesToScroll;\n        }\n\n    };\n\n    Slick.prototype.goTo = Slick.prototype.slickGoTo = function(slide, dontAnimate) {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'index',\n                index: parseInt(slide)\n            }\n        }, dontAnimate);\n\n    };\n\n    Slick.prototype.init = function(creation) {\n\n        var _ = this;\n\n        if (!$(_.$slider).hasClass('slick-initialized')) {\n\n            $(_.$slider).addClass('slick-initialized');\n\n            _.buildRows();\n            _.buildOut();\n            _.setProps();\n            _.startLoad();\n            _.loadSlider();\n            _.initializeEvents();\n            _.updateArrows();\n            _.updateDots();\n            _.checkResponsive(true);\n            _.focusHandler();\n\n        }\n\n        if (creation) {\n            _.$slider.trigger('init', [_]);\n        }\n\n        if (_.options.accessibility === true) {\n            _.initADA();\n        }\n\n        if ( _.options.autoplay ) {\n\n            _.paused = false;\n            _.autoPlay();\n\n        }\n\n    };\n\n    Slick.prototype.initADA = function() {\n        var _ = this,\n                numDotGroups = Math.ceil(_.slideCount / _.options.slidesToShow),\n                tabControlIndexes = _.getNavigableIndexes().filter(function(val) {\n                    return (val >= 0) && (val < _.slideCount);\n                });\n\n        _.$slides.add(_.$slideTrack.find('.slick-cloned')).attr({\n            'aria-hidden': 'true',\n            'tabindex': '-1'\n        }).find('a, input, button, select').attr({\n            'tabindex': '-1'\n        });\n\n        if (_.$dots !== null) {\n            _.$slides.not(_.$slideTrack.find('.slick-cloned')).each(function(i) {\n                var slideControlIndex = tabControlIndexes.indexOf(i);\n\n                $(this).attr({\n                    'role': 'tabpanel',\n                    'id': 'slick-slide' + _.instanceUid + i,\n                    'tabindex': -1\n                });\n\n                if (slideControlIndex !== -1) {\n                   var ariaButtonControl = 'slick-slide-control' + _.instanceUid + slideControlIndex\n                   if ($('#' + ariaButtonControl).length) {\n                     $(this).attr({\n                         'aria-describedby': ariaButtonControl\n                     });\n                   }\n                }\n            });\n\n            _.$dots.attr('role', 'tablist').find('li').each(function(i) {\n                var mappedSlideIndex = tabControlIndexes[i];\n\n                $(this).attr({\n                    'role': 'presentation'\n                });\n\n                $(this).find('button').first().attr({\n                    'role': 'tab',\n                    'id': 'slick-slide-control' + _.instanceUid + i,\n                    'aria-controls': 'slick-slide' + _.instanceUid + mappedSlideIndex,\n                    'aria-label': (i + 1) + ' of ' + numDotGroups,\n                    'aria-selected': null,\n                    'tabindex': '-1'\n                });\n\n            }).eq(_.currentSlide).find('button').attr({\n                'aria-selected': 'true',\n                'tabindex': '0'\n            }).end();\n        }\n\n        for (var i=_.currentSlide, max=i+_.options.slidesToShow; i < max; i++) {\n          if (_.options.focusOnChange) {\n            _.$slides.eq(i).attr({'tabindex': '0'});\n          } else {\n            _.$slides.eq(i).removeAttr('tabindex');\n          }\n        }\n\n        _.activateADA();\n\n    };\n\n    Slick.prototype.initArrowEvents = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n            _.$prevArrow\n               .off('click.slick')\n               .on('click.slick', {\n                    message: 'previous'\n               }, _.changeSlide);\n            _.$nextArrow\n               .off('click.slick')\n               .on('click.slick', {\n                    message: 'next'\n               }, _.changeSlide);\n\n            if (_.options.accessibility === true) {\n                _.$prevArrow.on('keydown.slick', _.keyHandler);\n                _.$nextArrow.on('keydown.slick', _.keyHandler);\n            }\n        }\n\n    };\n\n    Slick.prototype.initDotEvents = function() {\n\n        var _ = this;\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n            $('li', _.$dots).on('click.slick', {\n                message: 'index'\n            }, _.changeSlide);\n\n            if (_.options.accessibility === true) {\n                _.$dots.on('keydown.slick', _.keyHandler);\n            }\n        }\n\n        if (_.options.dots === true && _.options.pauseOnDotsHover === true && _.slideCount > _.options.slidesToShow) {\n\n            $('li', _.$dots)\n                .on('mouseenter.slick', $.proxy(_.interrupt, _, true))\n                .on('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n        }\n\n    };\n\n    Slick.prototype.initSlideEvents = function() {\n\n        var _ = this;\n\n        if ( _.options.pauseOnHover ) {\n\n            _.$list.on('mouseenter.slick', $.proxy(_.interrupt, _, true));\n            _.$list.on('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n        }\n\n    };\n\n    Slick.prototype.initializeEvents = function() {\n\n        var _ = this;\n\n        _.initArrowEvents();\n\n        _.initDotEvents();\n        _.initSlideEvents();\n\n        _.$list.on('touchstart.slick mousedown.slick', {\n            action: 'start'\n        }, _.swipeHandler);\n        _.$list.on('touchmove.slick mousemove.slick', {\n            action: 'move'\n        }, _.swipeHandler);\n        _.$list.on('touchend.slick mouseup.slick', {\n            action: 'end'\n        }, _.swipeHandler);\n        _.$list.on('touchcancel.slick mouseleave.slick', {\n            action: 'end'\n        }, _.swipeHandler);\n\n        _.$list.on('click.slick', _.clickHandler);\n\n        $(document).on(_.visibilityChange, $.proxy(_.visibility, _));\n\n        if (_.options.accessibility === true) {\n            _.$list.on('keydown.slick', _.keyHandler);\n        }\n\n        if (_.options.focusOnSelect === true) {\n            $(_.$slideTrack).children().on('click.slick', _.selectHandler);\n        }\n\n        $(window).on('orientationchange.slick.slick-' + _.instanceUid, $.proxy(_.orientationChange, _));\n\n        $(window).on('resize.slick.slick-' + _.instanceUid, $.proxy(_.resize, _));\n\n        $('[draggable!=true]', _.$slideTrack).on('dragstart', _.preventDefault);\n\n        $(window).on('load.slick.slick-' + _.instanceUid, _.setPosition);\n        $(_.setPosition);\n\n    };\n\n    Slick.prototype.initUI = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$prevArrow.show();\n            _.$nextArrow.show();\n\n        }\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$dots.show();\n\n        }\n\n    };\n\n    Slick.prototype.keyHandler = function(event) {\n\n        var _ = this;\n         //Dont slide if the cursor is inside the form fields and arrow keys are pressed\n        if(!event.target.tagName.match('TEXTAREA|INPUT|SELECT')) {\n            if (event.keyCode === 37 && _.options.accessibility === true) {\n                _.changeSlide({\n                    data: {\n                        message: _.options.rtl === true ? 'next' :  'previous'\n                    }\n                });\n            } else if (event.keyCode === 39 && _.options.accessibility === true) {\n                _.changeSlide({\n                    data: {\n                        message: _.options.rtl === true ? 'previous' : 'next'\n                    }\n                });\n            }\n        }\n\n    };\n\n    Slick.prototype.lazyLoad = function() {\n\n        var _ = this,\n            loadRange, cloneRange, rangeStart, rangeEnd;\n\n        function loadImages(imagesScope) {\n\n            $('img[data-lazy]', imagesScope).each(function() {\n\n                var image = $(this),\n                    imageSource = $(this).attr('data-lazy'),\n                    imageSrcSet = $(this).attr('data-srcset'),\n                    imageSizes  = $(this).attr('data-sizes') || _.$slider.attr('data-sizes'),\n                    imageToLoad = document.createElement('img');\n\n                imageToLoad.onload = function() {\n\n                    image\n                        .animate({ opacity: 0 }, 100, function() {\n\n                            if (imageSrcSet) {\n                                image\n                                    .attr('srcset', imageSrcSet );\n\n                                if (imageSizes) {\n                                    image\n                                        .attr('sizes', imageSizes );\n                                }\n                            }\n\n                            image\n                                .attr('src', imageSource)\n                                .animate({ opacity: 1 }, 200, function() {\n                                    image\n                                        .removeAttr('data-lazy data-srcset data-sizes')\n                                        .removeClass('slick-loading');\n                                });\n                            _.$slider.trigger('lazyLoaded', [_, image, imageSource]);\n                        });\n\n                };\n\n                imageToLoad.onerror = function() {\n\n                    image\n                        .removeAttr( 'data-lazy' )\n                        .removeClass( 'slick-loading' )\n                        .addClass( 'slick-lazyload-error' );\n\n                    _.$slider.trigger('lazyLoadError', [ _, image, imageSource ]);\n\n                };\n\n                imageToLoad.src = imageSource;\n\n            });\n\n        }\n\n        if (_.options.centerMode === true) {\n            if (_.options.infinite === true) {\n                rangeStart = _.currentSlide + (_.options.slidesToShow / 2 + 1);\n                rangeEnd = rangeStart + _.options.slidesToShow + 2;\n            } else {\n                rangeStart = Math.max(0, _.currentSlide - (_.options.slidesToShow / 2 + 1));\n                rangeEnd = 2 + (_.options.slidesToShow / 2 + 1) + _.currentSlide;\n            }\n        } else {\n            rangeStart = _.options.infinite ? _.options.slidesToShow + _.currentSlide : _.currentSlide;\n            rangeEnd = Math.ceil(rangeStart + _.options.slidesToShow);\n            if (_.options.fade === true) {\n                if (rangeStart > 0) rangeStart--;\n                if (rangeEnd <= _.slideCount) rangeEnd++;\n            }\n        }\n\n        loadRange = _.$slider.find('.slick-slide').slice(rangeStart, rangeEnd);\n\n        if (_.options.lazyLoad === 'anticipated') {\n            var prevSlide = rangeStart - 1,\n                nextSlide = rangeEnd,\n                $slides = _.$slider.find('.slick-slide');\n\n            for (var i = 0; i < _.options.slidesToScroll; i++) {\n                if (prevSlide < 0) prevSlide = _.slideCount - 1;\n                loadRange = loadRange.add($slides.eq(prevSlide));\n                loadRange = loadRange.add($slides.eq(nextSlide));\n                prevSlide--;\n                nextSlide++;\n            }\n        }\n\n        loadImages(loadRange);\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            cloneRange = _.$slider.find('.slick-slide');\n            loadImages(cloneRange);\n        } else\n        if (_.currentSlide >= _.slideCount - _.options.slidesToShow) {\n            cloneRange = _.$slider.find('.slick-cloned').slice(0, _.options.slidesToShow);\n            loadImages(cloneRange);\n        } else if (_.currentSlide === 0) {\n            cloneRange = _.$slider.find('.slick-cloned').slice(_.options.slidesToShow * -1);\n            loadImages(cloneRange);\n        }\n\n    };\n\n    Slick.prototype.loadSlider = function() {\n\n        var _ = this;\n\n        _.setPosition();\n\n        _.$slideTrack.css({\n            opacity: 1\n        });\n\n        _.$slider.removeClass('slick-loading');\n\n        _.initUI();\n\n        if (_.options.lazyLoad === 'progressive') {\n            _.progressiveLazyLoad();\n        }\n\n    };\n\n    Slick.prototype.next = Slick.prototype.slickNext = function() {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'next'\n            }\n        });\n\n    };\n\n    Slick.prototype.orientationChange = function() {\n\n        var _ = this;\n\n        _.checkResponsive();\n        _.setPosition();\n\n    };\n\n    Slick.prototype.pause = Slick.prototype.slickPause = function() {\n\n        var _ = this;\n\n        _.autoPlayClear();\n        _.paused = true;\n\n    };\n\n    Slick.prototype.play = Slick.prototype.slickPlay = function() {\n\n        var _ = this;\n\n        _.autoPlay();\n        _.options.autoplay = true;\n        _.paused = false;\n        _.focussed = false;\n        _.interrupted = false;\n\n    };\n\n    Slick.prototype.postSlide = function(index) {\n\n        var _ = this;\n\n        if( !_.unslicked ) {\n\n            _.$slider.trigger('afterChange', [_, index]);\n\n            _.animating = false;\n\n            if (_.slideCount > _.options.slidesToShow) {\n                _.setPosition();\n            }\n\n            _.swipeLeft = null;\n\n            if ( _.options.autoplay ) {\n                _.autoPlay();\n            }\n\n            if (_.options.accessibility === true) {\n                _.initADA();\n\n                if (_.options.focusOnChange) {\n                    var $currentSlide = $(_.$slides.get(_.currentSlide));\n                    $currentSlide.attr('tabindex', 0).focus();\n                }\n            }\n\n        }\n\n    };\n\n    Slick.prototype.prev = Slick.prototype.slickPrev = function() {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'previous'\n            }\n        });\n\n    };\n\n    Slick.prototype.preventDefault = function(event) {\n\n        event.preventDefault();\n\n    };\n\n    Slick.prototype.progressiveLazyLoad = function( tryCount ) {\n\n        tryCount = tryCount || 1;\n\n        var _ = this,\n            $imgsToLoad = $( 'img[data-lazy]', _.$slider ),\n            image,\n            imageSource,\n            imageSrcSet,\n            imageSizes,\n            imageToLoad;\n\n        if ( $imgsToLoad.length ) {\n\n            image = $imgsToLoad.first();\n            imageSource = image.attr('data-lazy');\n            imageSrcSet = image.attr('data-srcset');\n            imageSizes  = image.attr('data-sizes') || _.$slider.attr('data-sizes');\n            imageToLoad = document.createElement('img');\n\n            imageToLoad.onload = function() {\n\n                if (imageSrcSet) {\n                    image\n                        .attr('srcset', imageSrcSet );\n\n                    if (imageSizes) {\n                        image\n                            .attr('sizes', imageSizes );\n                    }\n                }\n\n                image\n                    .attr( 'src', imageSource )\n                    .removeAttr('data-lazy data-srcset data-sizes')\n                    .removeClass('slick-loading');\n\n                if ( _.options.adaptiveHeight === true ) {\n                    _.setPosition();\n                }\n\n                _.$slider.trigger('lazyLoaded', [ _, image, imageSource ]);\n                _.progressiveLazyLoad();\n\n            };\n\n            imageToLoad.onerror = function() {\n\n                if ( tryCount < 3 ) {\n\n                    /**\n                     * try to load the image 3 times,\n                     * leave a slight delay so we don't get\n                     * servers blocking the request.\n                     */\n                    setTimeout( function() {\n                        _.progressiveLazyLoad( tryCount + 1 );\n                    }, 500 );\n\n                } else {\n\n                    image\n                        .removeAttr( 'data-lazy' )\n                        .removeClass( 'slick-loading' )\n                        .addClass( 'slick-lazyload-error' );\n\n                    _.$slider.trigger('lazyLoadError', [ _, image, imageSource ]);\n\n                    _.progressiveLazyLoad();\n\n                }\n\n            };\n\n            imageToLoad.src = imageSource;\n\n        } else {\n\n            _.$slider.trigger('allImagesLoaded', [ _ ]);\n\n        }\n\n    };\n\n    Slick.prototype.refresh = function( initializing ) {\n\n        var _ = this, currentSlide, lastVisibleIndex;\n\n        lastVisibleIndex = _.slideCount - _.options.slidesToShow;\n\n        // in non-infinite sliders, we don't want to go past the\n        // last visible index.\n        if( !_.options.infinite && ( _.currentSlide > lastVisibleIndex )) {\n            _.currentSlide = lastVisibleIndex;\n        }\n\n        // if less slides than to show, go to start.\n        if ( _.slideCount <= _.options.slidesToShow ) {\n            _.currentSlide = 0;\n\n        }\n\n        currentSlide = _.currentSlide;\n\n        _.destroy(true);\n\n        $.extend(_, _.initials, { currentSlide: currentSlide });\n\n        _.init();\n\n        if( !initializing ) {\n\n            _.changeSlide({\n                data: {\n                    message: 'index',\n                    index: currentSlide\n                }\n            }, false);\n\n        }\n\n    };\n\n    Slick.prototype.registerBreakpoints = function() {\n\n        var _ = this, breakpoint, currentBreakpoint, l,\n            responsiveSettings = _.options.responsive || null;\n\n        if ( $.type(responsiveSettings) === 'array' && responsiveSettings.length ) {\n\n            _.respondTo = _.options.respondTo || 'window';\n\n            for ( breakpoint in responsiveSettings ) {\n\n                l = _.breakpoints.length-1;\n\n                if (responsiveSettings.hasOwnProperty(breakpoint)) {\n                    currentBreakpoint = responsiveSettings[breakpoint].breakpoint;\n\n                    // loop through the breakpoints and cut out any existing\n                    // ones with the same breakpoint number, we don't want dupes.\n                    while( l >= 0 ) {\n                        if( _.breakpoints[l] && _.breakpoints[l] === currentBreakpoint ) {\n                            _.breakpoints.splice(l,1);\n                        }\n                        l--;\n                    }\n\n                    _.breakpoints.push(currentBreakpoint);\n                    _.breakpointSettings[currentBreakpoint] = responsiveSettings[breakpoint].settings;\n\n                }\n\n            }\n\n            _.breakpoints.sort(function(a, b) {\n                return ( _.options.mobileFirst ) ? a-b : b-a;\n            });\n\n        }\n\n    };\n\n    Slick.prototype.reinit = function() {\n\n        var _ = this;\n\n        _.$slides =\n            _.$slideTrack\n                .children(_.options.slide)\n                .addClass('slick-slide');\n\n        _.slideCount = _.$slides.length;\n\n        if (_.currentSlide >= _.slideCount && _.currentSlide !== 0) {\n            _.currentSlide = _.currentSlide - _.options.slidesToScroll;\n        }\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            _.currentSlide = 0;\n        }\n\n        _.registerBreakpoints();\n\n        _.setProps();\n        _.setupInfinite();\n        _.buildArrows();\n        _.updateArrows();\n        _.initArrowEvents();\n        _.buildDots();\n        _.updateDots();\n        _.initDotEvents();\n        _.cleanUpSlideEvents();\n        _.initSlideEvents();\n\n        _.checkResponsive(false, true);\n\n        if (_.options.focusOnSelect === true) {\n            $(_.$slideTrack).children().on('click.slick', _.selectHandler);\n        }\n\n        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);\n\n        _.setPosition();\n        _.focusHandler();\n\n        _.paused = !_.options.autoplay;\n        _.autoPlay();\n\n        _.$slider.trigger('reInit', [_]);\n\n    };\n\n    Slick.prototype.resize = function() {\n\n        var _ = this;\n\n        if ($(window).width() !== _.windowWidth) {\n            clearTimeout(_.windowDelay);\n            _.windowDelay = window.setTimeout(function() {\n                _.windowWidth = $(window).width();\n                _.checkResponsive();\n                if( !_.unslicked ) { _.setPosition(); }\n            }, 50);\n        }\n    };\n\n    Slick.prototype.removeSlide = Slick.prototype.slickRemove = function(index, removeBefore, removeAll) {\n\n        var _ = this;\n\n        if (typeof(index) === 'boolean') {\n            removeBefore = index;\n            index = removeBefore === true ? 0 : _.slideCount - 1;\n        } else {\n            index = removeBefore === true ? --index : index;\n        }\n\n        if (_.slideCount < 1 || index < 0 || index > _.slideCount - 1) {\n            return false;\n        }\n\n        _.unload();\n\n        if (removeAll === true) {\n            _.$slideTrack.children().remove();\n        } else {\n            _.$slideTrack.children(this.options.slide).eq(index).remove();\n        }\n\n        _.$slides = _.$slideTrack.children(this.options.slide);\n\n        _.$slideTrack.children(this.options.slide).detach();\n\n        _.$slideTrack.append(_.$slides);\n\n        _.$slidesCache = _.$slides;\n\n        _.reinit();\n\n    };\n\n    Slick.prototype.setCSS = function(position) {\n\n        var _ = this,\n            positionProps = {},\n            x, y;\n\n        if (_.options.rtl === true) {\n            position = -position;\n        }\n        x = _.positionProp == 'left' ? Math.ceil(position) + 'px' : '0px';\n        y = _.positionProp == 'top' ? Math.ceil(position) + 'px' : '0px';\n\n        positionProps[_.positionProp] = position;\n\n        if (_.transformsEnabled === false) {\n            _.$slideTrack.css(positionProps);\n        } else {\n            positionProps = {};\n            if (_.cssTransitions === false) {\n                positionProps[_.animType] = 'translate(' + x + ', ' + y + ')';\n                _.$slideTrack.css(positionProps);\n            } else {\n                positionProps[_.animType] = 'translate3d(' + x + ', ' + y + ', 0px)';\n                _.$slideTrack.css(positionProps);\n            }\n        }\n\n    };\n\n    Slick.prototype.setDimensions = function() {\n\n        var _ = this;\n\n        if (_.options.vertical === false) {\n            if (_.options.centerMode === true) {\n                _.$list.css({\n                    padding: ('0px ' + _.options.centerPadding)\n                });\n            }\n        } else {\n            _.$list.height(_.$slides.first().outerHeight(true) * _.options.slidesToShow);\n            if (_.options.centerMode === true) {\n                _.$list.css({\n                    padding: (_.options.centerPadding + ' 0px')\n                });\n            }\n        }\n\n        _.listWidth = _.$list.width();\n        _.listHeight = _.$list.height();\n\n\n        if (_.options.vertical === false && _.options.variableWidth === false) {\n            _.slideWidth = Math.ceil(_.listWidth / _.options.slidesToShow);\n            _.$slideTrack.width(Math.ceil((_.slideWidth * _.$slideTrack.children('.slick-slide').length)));\n\n        } else if (_.options.variableWidth === true) {\n            _.$slideTrack.width(5000 * _.slideCount);\n        } else {\n            _.slideWidth = Math.ceil(_.listWidth);\n            _.$slideTrack.height(Math.ceil((_.$slides.first().outerHeight(true) * _.$slideTrack.children('.slick-slide').length)));\n        }\n\n        var offset = _.$slides.first().outerWidth(true) - _.$slides.first().width();\n        if (_.options.variableWidth === false) _.$slideTrack.children('.slick-slide').width(_.slideWidth - offset);\n\n    };\n\n    Slick.prototype.setFade = function() {\n\n        var _ = this,\n            targetLeft;\n\n        _.$slides.each(function(index, element) {\n            targetLeft = (_.slideWidth * index) * -1;\n            if (_.options.rtl === true) {\n                $(element).css({\n                    position: 'relative',\n                    right: targetLeft,\n                    top: 0,\n                    zIndex: _.options.zIndex - 2,\n                    opacity: 0\n                });\n            } else {\n                $(element).css({\n                    position: 'relative',\n                    left: targetLeft,\n                    top: 0,\n                    zIndex: _.options.zIndex - 2,\n                    opacity: 0\n                });\n            }\n        });\n\n        _.$slides.eq(_.currentSlide).css({\n            zIndex: _.options.zIndex - 1,\n            opacity: 1\n        });\n\n    };\n\n    Slick.prototype.setHeight = function() {\n\n        var _ = this;\n\n        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {\n            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);\n            _.$list.css('height', targetHeight);\n        }\n\n    };\n\n    Slick.prototype.setOption =\n    Slick.prototype.slickSetOption = function() {\n\n        /**\n         * accepts arguments in format of:\n         *\n         *  - for changing a single option's value:\n         *     .slick(\"setOption\", option, value, refresh )\n         *\n         *  - for changing a set of responsive options:\n         *     .slick(\"setOption\", 'responsive', [{}, ...], refresh )\n         *\n         *  - for updating multiple values at once (not responsive)\n         *     .slick(\"setOption\", { 'option': value, ... }, refresh )\n         */\n\n        var _ = this, l, item, option, value, refresh = false, type;\n\n        if( $.type( arguments[0] ) === 'object' ) {\n\n            option =  arguments[0];\n            refresh = arguments[1];\n            type = 'multiple';\n\n        } else if ( $.type( arguments[0] ) === 'string' ) {\n\n            option =  arguments[0];\n            value = arguments[1];\n            refresh = arguments[2];\n\n            if ( arguments[0] === 'responsive' && $.type( arguments[1] ) === 'array' ) {\n\n                type = 'responsive';\n\n            } else if ( typeof arguments[1] !== 'undefined' ) {\n\n                type = 'single';\n\n            }\n\n        }\n\n        if ( type === 'single' ) {\n\n            _.options[option] = value;\n\n\n        } else if ( type === 'multiple' ) {\n\n            $.each( option , function( opt, val ) {\n\n                _.options[opt] = val;\n\n            });\n\n\n        } else if ( type === 'responsive' ) {\n\n            for ( item in value ) {\n\n                if( $.type( _.options.responsive ) !== 'array' ) {\n\n                    _.options.responsive = [ value[item] ];\n\n                } else {\n\n                    l = _.options.responsive.length-1;\n\n                    // loop through the responsive object and splice out duplicates.\n                    while( l >= 0 ) {\n\n                        if( _.options.responsive[l].breakpoint === value[item].breakpoint ) {\n\n                            _.options.responsive.splice(l,1);\n\n                        }\n\n                        l--;\n\n                    }\n\n                    _.options.responsive.push( value[item] );\n\n                }\n\n            }\n\n        }\n\n        if ( refresh ) {\n\n            _.unload();\n            _.reinit();\n\n        }\n\n    };\n\n    Slick.prototype.setPosition = function() {\n\n        var _ = this;\n\n        _.setDimensions();\n\n        _.setHeight();\n\n        if (_.options.fade === false) {\n            _.setCSS(_.getLeft(_.currentSlide));\n        } else {\n            _.setFade();\n        }\n\n        _.$slider.trigger('setPosition', [_]);\n\n    };\n\n    Slick.prototype.setProps = function() {\n\n        var _ = this,\n            bodyStyle = document.body.style;\n\n        _.positionProp = _.options.vertical === true ? 'top' : 'left';\n\n        if (_.positionProp === 'top') {\n            _.$slider.addClass('slick-vertical');\n        } else {\n            _.$slider.removeClass('slick-vertical');\n        }\n\n        if (bodyStyle.WebkitTransition !== undefined ||\n            bodyStyle.MozTransition !== undefined ||\n            bodyStyle.msTransition !== undefined) {\n            if (_.options.useCSS === true) {\n                _.cssTransitions = true;\n            }\n        }\n\n        if ( _.options.fade ) {\n            if ( typeof _.options.zIndex === 'number' ) {\n                if( _.options.zIndex < 3 ) {\n                    _.options.zIndex = 3;\n                }\n            } else {\n                _.options.zIndex = _.defaults.zIndex;\n            }\n        }\n\n        if (bodyStyle.OTransform !== undefined) {\n            _.animType = 'OTransform';\n            _.transformType = '-o-transform';\n            _.transitionType = 'OTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.MozTransform !== undefined) {\n            _.animType = 'MozTransform';\n            _.transformType = '-moz-transform';\n            _.transitionType = 'MozTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.MozPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.webkitTransform !== undefined) {\n            _.animType = 'webkitTransform';\n            _.transformType = '-webkit-transform';\n            _.transitionType = 'webkitTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.msTransform !== undefined) {\n            _.animType = 'msTransform';\n            _.transformType = '-ms-transform';\n            _.transitionType = 'msTransition';\n            if (bodyStyle.msTransform === undefined) _.animType = false;\n        }\n        if (bodyStyle.transform !== undefined && _.animType !== false) {\n            _.animType = 'transform';\n            _.transformType = 'transform';\n            _.transitionType = 'transition';\n        }\n        _.transformsEnabled = _.options.useTransform && (_.animType !== null && _.animType !== false);\n    };\n\n\n    Slick.prototype.setSlideClasses = function(index) {\n\n        var _ = this,\n            centerOffset, allSlides, indexOffset, remainder;\n\n        allSlides = _.$slider\n            .find('.slick-slide')\n            .removeClass('slick-active slick-center slick-current')\n            .attr('aria-hidden', 'true');\n\n        _.$slides\n            .eq(index)\n            .addClass('slick-current');\n\n        if (_.options.centerMode === true) {\n\n            var evenCoef = _.options.slidesToShow % 2 === 0 ? 1 : 0;\n\n            centerOffset = Math.floor(_.options.slidesToShow / 2);\n\n            if (_.options.infinite === true) {\n\n                if (index >= centerOffset && index <= (_.slideCount - 1) - centerOffset) {\n                    _.$slides\n                        .slice(index - centerOffset + evenCoef, index + centerOffset + 1)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                } else {\n\n                    indexOffset = _.options.slidesToShow + index;\n                    allSlides\n                        .slice(indexOffset - centerOffset + 1 + evenCoef, indexOffset + centerOffset + 2)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                }\n\n                if (index === 0) {\n\n                    allSlides\n                        .eq(allSlides.length - 1 - _.options.slidesToShow)\n                        .addClass('slick-center');\n\n                } else if (index === _.slideCount - 1) {\n\n                    allSlides\n                        .eq(_.options.slidesToShow)\n                        .addClass('slick-center');\n\n                }\n\n            }\n\n            _.$slides\n                .eq(index)\n                .addClass('slick-center');\n\n        } else {\n\n            if (index >= 0 && index <= (_.slideCount - _.options.slidesToShow)) {\n\n                _.$slides\n                    .slice(index, index + _.options.slidesToShow)\n                    .addClass('slick-active')\n                    .attr('aria-hidden', 'false');\n\n            } else if (allSlides.length <= _.options.slidesToShow) {\n\n                allSlides\n                    .addClass('slick-active')\n                    .attr('aria-hidden', 'false');\n\n            } else {\n\n                remainder = _.slideCount % _.options.slidesToShow;\n                indexOffset = _.options.infinite === true ? _.options.slidesToShow + index : index;\n\n                if (_.options.slidesToShow == _.options.slidesToScroll && (_.slideCount - index) < _.options.slidesToShow) {\n\n                    allSlides\n                        .slice(indexOffset - (_.options.slidesToShow - remainder), indexOffset + remainder)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                } else {\n\n                    allSlides\n                        .slice(indexOffset, indexOffset + _.options.slidesToShow)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                }\n\n            }\n\n        }\n\n        if (_.options.lazyLoad === 'ondemand' || _.options.lazyLoad === 'anticipated') {\n            _.lazyLoad();\n        }\n    };\n\n    Slick.prototype.setupInfinite = function() {\n\n        var _ = this,\n            i, slideIndex, infiniteCount;\n\n        if (_.options.fade === true) {\n            _.options.centerMode = false;\n        }\n\n        if (_.options.infinite === true && _.options.fade === false) {\n\n            slideIndex = null;\n\n            if (_.slideCount > _.options.slidesToShow) {\n\n                if (_.options.centerMode === true) {\n                    infiniteCount = _.options.slidesToShow + 1;\n                } else {\n                    infiniteCount = _.options.slidesToShow;\n                }\n\n                for (i = _.slideCount; i > (_.slideCount -\n                        infiniteCount); i -= 1) {\n                    slideIndex = i - 1;\n                    $(_.$slides[slideIndex]).clone(true).attr('id', '')\n                        .attr('data-slick-index', slideIndex - _.slideCount)\n                        .prependTo(_.$slideTrack).addClass('slick-cloned');\n                }\n                for (i = 0; i < infiniteCount  + _.slideCount; i += 1) {\n                    slideIndex = i;\n                    $(_.$slides[slideIndex]).clone(true).attr('id', '')\n                        .attr('data-slick-index', slideIndex + _.slideCount)\n                        .appendTo(_.$slideTrack).addClass('slick-cloned');\n                }\n                _.$slideTrack.find('.slick-cloned').find('[id]').each(function() {\n                    $(this).attr('id', '');\n                });\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.interrupt = function( toggle ) {\n\n        var _ = this;\n\n        if( !toggle ) {\n            _.autoPlay();\n        }\n        _.interrupted = toggle;\n\n    };\n\n    Slick.prototype.selectHandler = function(event) {\n\n        var _ = this;\n\n        var targetElement =\n            $(event.target).is('.slick-slide') ?\n                $(event.target) :\n                $(event.target).parents('.slick-slide');\n\n        var index = parseInt(targetElement.attr('data-slick-index'));\n\n        if (!index) index = 0;\n\n        if (_.slideCount <= _.options.slidesToShow) {\n\n            _.slideHandler(index, false, true);\n            return;\n\n        }\n\n        _.slideHandler(index);\n\n    };\n\n    Slick.prototype.slideHandler = function(index, sync, dontAnimate) {\n\n        var targetSlide, animSlide, oldSlide, slideLeft, targetLeft = null,\n            _ = this, navTarget;\n\n        sync = sync || false;\n\n        if (_.animating === true && _.options.waitForAnimate === true) {\n            return;\n        }\n\n        if (_.options.fade === true && _.currentSlide === index) {\n            return;\n        }\n\n        if (sync === false) {\n            _.asNavFor(index);\n        }\n\n        targetSlide = index;\n        targetLeft = _.getLeft(targetSlide);\n        slideLeft = _.getLeft(_.currentSlide);\n\n        _.currentLeft = _.swipeLeft === null ? slideLeft : _.swipeLeft;\n\n        if (_.options.infinite === false && _.options.centerMode === false && (index < 0 || index > _.getDotCount() * _.options.slidesToScroll)) {\n            if (_.options.fade === false) {\n                targetSlide = _.currentSlide;\n                if (dontAnimate !== true && _.slideCount > _.options.slidesToShow) {\n                    _.animateSlide(slideLeft, function() {\n                        _.postSlide(targetSlide);\n                    });\n                } else {\n                    _.postSlide(targetSlide);\n                }\n            }\n            return;\n        } else if (_.options.infinite === false && _.options.centerMode === true && (index < 0 || index > (_.slideCount - _.options.slidesToScroll))) {\n            if (_.options.fade === false) {\n                targetSlide = _.currentSlide;\n                if (dontAnimate !== true && _.slideCount > _.options.slidesToShow) {\n                    _.animateSlide(slideLeft, function() {\n                        _.postSlide(targetSlide);\n                    });\n                } else {\n                    _.postSlide(targetSlide);\n                }\n            }\n            return;\n        }\n\n        if ( _.options.autoplay ) {\n            clearInterval(_.autoPlayTimer);\n        }\n\n        if (targetSlide < 0) {\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                animSlide = _.slideCount - (_.slideCount % _.options.slidesToScroll);\n            } else {\n                animSlide = _.slideCount + targetSlide;\n            }\n        } else if (targetSlide >= _.slideCount) {\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                animSlide = 0;\n            } else {\n                animSlide = targetSlide - _.slideCount;\n            }\n        } else {\n            animSlide = targetSlide;\n        }\n\n        _.animating = true;\n\n        _.$slider.trigger('beforeChange', [_, _.currentSlide, animSlide]);\n\n        oldSlide = _.currentSlide;\n        _.currentSlide = animSlide;\n\n        _.setSlideClasses(_.currentSlide);\n\n        if ( _.options.asNavFor ) {\n\n            navTarget = _.getNavTarget();\n            navTarget = navTarget.slick('getSlick');\n\n            if ( navTarget.slideCount <= navTarget.options.slidesToShow ) {\n                navTarget.setSlideClasses(_.currentSlide);\n            }\n\n        }\n\n        _.updateDots();\n        _.updateArrows();\n\n        if (_.options.fade === true) {\n            if (dontAnimate !== true) {\n\n                _.fadeSlideOut(oldSlide);\n\n                _.fadeSlide(animSlide, function() {\n                    _.postSlide(animSlide);\n                });\n\n            } else {\n                _.postSlide(animSlide);\n            }\n            _.animateHeight();\n            return;\n        }\n\n        if (dontAnimate !== true && _.slideCount > _.options.slidesToShow) {\n            _.animateSlide(targetLeft, function() {\n                _.postSlide(animSlide);\n            });\n        } else {\n            _.postSlide(animSlide);\n        }\n\n    };\n\n    Slick.prototype.startLoad = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$prevArrow.hide();\n            _.$nextArrow.hide();\n\n        }\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$dots.hide();\n\n        }\n\n        _.$slider.addClass('slick-loading');\n\n    };\n\n    Slick.prototype.swipeDirection = function() {\n\n        var xDist, yDist, r, swipeAngle, _ = this;\n\n        xDist = _.touchObject.startX - _.touchObject.curX;\n        yDist = _.touchObject.startY - _.touchObject.curY;\n        r = Math.atan2(yDist, xDist);\n\n        swipeAngle = Math.round(r * 180 / Math.PI);\n        if (swipeAngle < 0) {\n            swipeAngle = 360 - Math.abs(swipeAngle);\n        }\n\n        if ((swipeAngle <= 45) && (swipeAngle >= 0)) {\n            return (_.options.rtl === false ? 'left' : 'right');\n        }\n        if ((swipeAngle <= 360) && (swipeAngle >= 315)) {\n            return (_.options.rtl === false ? 'left' : 'right');\n        }\n        if ((swipeAngle >= 135) && (swipeAngle <= 225)) {\n            return (_.options.rtl === false ? 'right' : 'left');\n        }\n        if (_.options.verticalSwiping === true) {\n            if ((swipeAngle >= 35) && (swipeAngle <= 135)) {\n                return 'down';\n            } else {\n                return 'up';\n            }\n        }\n\n        return 'vertical';\n\n    };\n\n    Slick.prototype.swipeEnd = function(event) {\n\n        var _ = this,\n            slideCount,\n            direction;\n\n        _.dragging = false;\n        _.swiping = false;\n\n        if (_.scrolling) {\n            _.scrolling = false;\n            return false;\n        }\n\n        _.interrupted = false;\n        _.shouldClick = ( _.touchObject.swipeLength > 10 ) ? false : true;\n\n        if ( _.touchObject.curX === undefined ) {\n            return false;\n        }\n\n        if ( _.touchObject.edgeHit === true ) {\n            _.$slider.trigger('edge', [_, _.swipeDirection() ]);\n        }\n\n        if ( _.touchObject.swipeLength >= _.touchObject.minSwipe ) {\n\n            direction = _.swipeDirection();\n\n            switch ( direction ) {\n\n                case 'left':\n                case 'down':\n\n                    slideCount =\n                        _.options.swipeToSlide ?\n                            _.checkNavigable( _.currentSlide + _.getSlideCount() ) :\n                            _.currentSlide + _.getSlideCount();\n\n                    _.currentDirection = 0;\n\n                    break;\n\n                case 'right':\n                case 'up':\n\n                    slideCount =\n                        _.options.swipeToSlide ?\n                            _.checkNavigable( _.currentSlide - _.getSlideCount() ) :\n                            _.currentSlide - _.getSlideCount();\n\n                    _.currentDirection = 1;\n\n                    break;\n\n                default:\n\n\n            }\n\n            if( direction != 'vertical' ) {\n\n                _.slideHandler( slideCount );\n                _.touchObject = {};\n                _.$slider.trigger('swipe', [_, direction ]);\n\n            }\n\n        } else {\n\n            if ( _.touchObject.startX !== _.touchObject.curX ) {\n\n                _.slideHandler( _.currentSlide );\n                _.touchObject = {};\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.swipeHandler = function(event) {\n\n        var _ = this;\n\n        if ((_.options.swipe === false) || ('ontouchend' in document && _.options.swipe === false)) {\n            return;\n        } else if (_.options.draggable === false && event.type.indexOf('mouse') !== -1) {\n            return;\n        }\n\n        _.touchObject.fingerCount = event.originalEvent && event.originalEvent.touches !== undefined ?\n            event.originalEvent.touches.length : 1;\n\n        _.touchObject.minSwipe = _.listWidth / _.options\n            .touchThreshold;\n\n        if (_.options.verticalSwiping === true) {\n            _.touchObject.minSwipe = _.listHeight / _.options\n                .touchThreshold;\n        }\n\n        switch (event.data.action) {\n\n            case 'start':\n                _.swipeStart(event);\n                break;\n\n            case 'move':\n                _.swipeMove(event);\n                break;\n\n            case 'end':\n                _.swipeEnd(event);\n                break;\n\n        }\n\n    };\n\n    Slick.prototype.swipeMove = function(event) {\n\n        var _ = this,\n            edgeWasHit = false,\n            curLeft, swipeDirection, swipeLength, positionOffset, touches, verticalSwipeLength;\n\n        touches = event.originalEvent !== undefined ? event.originalEvent.touches : null;\n\n        if (!_.dragging || _.scrolling || touches && touches.length !== 1) {\n            return false;\n        }\n\n        curLeft = _.getLeft(_.currentSlide);\n\n        _.touchObject.curX = touches !== undefined ? touches[0].pageX : event.clientX;\n        _.touchObject.curY = touches !== undefined ? touches[0].pageY : event.clientY;\n\n        _.touchObject.swipeLength = Math.round(Math.sqrt(\n            Math.pow(_.touchObject.curX - _.touchObject.startX, 2)));\n\n        verticalSwipeLength = Math.round(Math.sqrt(\n            Math.pow(_.touchObject.curY - _.touchObject.startY, 2)));\n\n        if (!_.options.verticalSwiping && !_.swiping && verticalSwipeLength > 4) {\n            _.scrolling = true;\n            return false;\n        }\n\n        if (_.options.verticalSwiping === true) {\n            _.touchObject.swipeLength = verticalSwipeLength;\n        }\n\n        swipeDirection = _.swipeDirection();\n\n        if (event.originalEvent !== undefined && _.touchObject.swipeLength > 4) {\n            _.swiping = true;\n            event.preventDefault();\n        }\n\n        positionOffset = (_.options.rtl === false ? 1 : -1) * (_.touchObject.curX > _.touchObject.startX ? 1 : -1);\n        if (_.options.verticalSwiping === true) {\n            positionOffset = _.touchObject.curY > _.touchObject.startY ? 1 : -1;\n        }\n\n\n        swipeLength = _.touchObject.swipeLength;\n\n        _.touchObject.edgeHit = false;\n\n        if (_.options.infinite === false) {\n            if ((_.currentSlide === 0 && swipeDirection === 'right') || (_.currentSlide >= _.getDotCount() && swipeDirection === 'left')) {\n                swipeLength = _.touchObject.swipeLength * _.options.edgeFriction;\n                _.touchObject.edgeHit = true;\n            }\n        }\n\n        if (_.options.vertical === false) {\n            _.swipeLeft = curLeft + swipeLength * positionOffset;\n        } else {\n            _.swipeLeft = curLeft + (swipeLength * (_.$list.height() / _.listWidth)) * positionOffset;\n        }\n        if (_.options.verticalSwiping === true) {\n            _.swipeLeft = curLeft + swipeLength * positionOffset;\n        }\n\n        if (_.options.fade === true || _.options.touchMove === false) {\n            return false;\n        }\n\n        if (_.animating === true) {\n            _.swipeLeft = null;\n            return false;\n        }\n\n        _.setCSS(_.swipeLeft);\n\n    };\n\n    Slick.prototype.swipeStart = function(event) {\n\n        var _ = this,\n            touches;\n\n        _.interrupted = true;\n\n        if (_.touchObject.fingerCount !== 1 || _.slideCount <= _.options.slidesToShow) {\n            _.touchObject = {};\n            return false;\n        }\n\n        if (event.originalEvent !== undefined && event.originalEvent.touches !== undefined) {\n            touches = event.originalEvent.touches[0];\n        }\n\n        _.touchObject.startX = _.touchObject.curX = touches !== undefined ? touches.pageX : event.clientX;\n        _.touchObject.startY = _.touchObject.curY = touches !== undefined ? touches.pageY : event.clientY;\n\n        _.dragging = true;\n\n    };\n\n    Slick.prototype.unfilterSlides = Slick.prototype.slickUnfilter = function() {\n\n        var _ = this;\n\n        if (_.$slidesCache !== null) {\n\n            _.unload();\n\n            _.$slideTrack.children(this.options.slide).detach();\n\n            _.$slidesCache.appendTo(_.$slideTrack);\n\n            _.reinit();\n\n        }\n\n    };\n\n    Slick.prototype.unload = function() {\n\n        var _ = this;\n\n        $('.slick-cloned', _.$slider).remove();\n\n        if (_.$dots) {\n            _.$dots.remove();\n        }\n\n        if (_.$prevArrow && _.htmlExpr.test(_.options.prevArrow)) {\n            _.$prevArrow.remove();\n        }\n\n        if (_.$nextArrow && _.htmlExpr.test(_.options.nextArrow)) {\n            _.$nextArrow.remove();\n        }\n\n        _.$slides\n            .removeClass('slick-slide slick-active slick-visible slick-current')\n            .attr('aria-hidden', 'true')\n            .css('width', '');\n\n    };\n\n    Slick.prototype.unslick = function(fromBreakpoint) {\n\n        var _ = this;\n        _.$slider.trigger('unslick', [_, fromBreakpoint]);\n        _.destroy();\n\n    };\n\n    Slick.prototype.updateArrows = function() {\n\n        var _ = this,\n            centerOffset;\n\n        centerOffset = Math.floor(_.options.slidesToShow / 2);\n\n        if ( _.options.arrows === true &&\n            _.slideCount > _.options.slidesToShow &&\n            !_.options.infinite ) {\n\n            _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n            _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            if (_.currentSlide === 0) {\n\n                _.$prevArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n                _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            } else if (_.currentSlide >= _.slideCount - _.options.slidesToShow && _.options.centerMode === false) {\n\n                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            } else if (_.currentSlide >= _.slideCount - 1 && _.options.centerMode === true) {\n\n                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.updateDots = function() {\n\n        var _ = this;\n\n        if (_.$dots !== null) {\n\n            _.$dots\n                .find('li')\n                    .removeClass('slick-active')\n                    .end();\n\n            _.$dots\n                .find('li')\n                .eq(Math.floor(_.currentSlide / _.options.slidesToScroll))\n                .addClass('slick-active');\n\n        }\n\n    };\n\n    Slick.prototype.visibility = function() {\n\n        var _ = this;\n\n        if ( _.options.autoplay ) {\n\n            if ( document[_.hidden] ) {\n\n                _.interrupted = true;\n\n            } else {\n\n                _.interrupted = false;\n\n            }\n\n        }\n\n    };\n\n    $.fn.slick = function() {\n        var _ = this,\n            opt = arguments[0],\n            args = Array.prototype.slice.call(arguments, 1),\n            l = _.length,\n            i,\n            ret;\n        for (i = 0; i < l; i++) {\n            if (typeof opt == 'object' || typeof opt == 'undefined')\n                _[i].slick = new Slick(_[i], opt);\n            else\n                ret = _[i].slick[opt].apply(_[i].slick, args);\n            if (typeof ret != 'undefined') return ret;\n        }\n        return _;\n    };\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slick-carousel/slick/slick.js\n// module id = 1370\n// module chunks = 1 32\n\n//# sourceURL=webpack:///./node_modules/slick-carousel/slick/slick.js?");

/***/ }),

/***/ 2344:
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;\n/**\n * Popup Widget\n *\n * @module Widgets/Popup\n * @author Jesus R. Martinez (jesus@metacell.us)\n */\n!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n\tvar Widget = __webpack_require__(1132);\n\tvar $ = __webpack_require__(9);\n\tvar Type = __webpack_require__(114);\n\tvar React = __webpack_require__(1);\n\tvar ReactDOM = __webpack_require__(21);\n\tvar ButtonBarComponent = __webpack_require__(2345);\n\n\tvar anchorme = __webpack_require__(2349);\n\tvar slick = __webpack_require__(1370);\n\n\t__webpack_require__(2350);\n\t__webpack_require__(2352);\n\t__webpack_require__(2354);\n\n\t/**\n  * Private function to hookup custom event handlers\n  *\n  * NOTE: declared here so that it's private.\n  */\n\tvar hookupCustomHandlers = function hookupCustomHandlers(handlers, popupDOM, popup) {\n\t\tfor (var i = 0; i < handlers.length; i++) {\n\t\t\t// if not hooked already, then go ahead and hook it\n\t\t\tif (handlers[i].hooked === false) {\n\t\t\t\t// set hooked to avoid double triggers\n\t\t\t\thandlers[i].hooked = true;\n\n\t\t\t\t// Find and iterate <a> element with an instancepath attribute\n\t\t\t\tpopupDOM.find(\"a[data-instancepath]\").each(function () {\n\t\t\t\t\tvar fun = handlers[i].funct;\n\t\t\t\t\tvar ev = handlers[i].event;\n\t\t\t\t\tvar metaType = handlers[i].meta;\n\t\t\t\t\tvar path = $(this).attr(\"data-instancepath\").replace(/\\$/g, \"\");\n\t\t\t\t\tvar node;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tnode = eval(path);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\t// if instance path doesn't exist set path to undefined\n\t\t\t\t\t\tnode = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\t// hookup IF domain type is undefined OR it's defined and it matches the node type\n\t\t\t\t\tif (metaType === undefined || metaType !== undefined && node !== undefined && node.getMetaType() === metaType) {\n\t\t\t\t\t\t// hookup custom handler\n\t\t\t\t\t\t$(this).on(ev, function () {\n\t\t\t\t\t\t\t// invoke custom handler with instancepath as arg\n\t\t\t\t\t\t\tfun(node, path, popup);\n\n\t\t\t\t\t\t\t// stop default event handler of the anchor from doing anything\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\treturn Widget.View.extend({\n\n\t\tdata: null,\n\t\tbuttonBarConfig: null,\n\t\tbuttonBarControls: null,\n\t\tbuttonBar: null,\n\n\t\t/**\n   * Initialize the popup widget\n   */\n\t\tinitialize: function initialize(options) {\n\t\t\tWidget.View.prototype.initialize.call(this, options);\n\t\t\tthis.render();\n\t\t\tthis.setSize(100, 300);\n\t\t\tthis.customHandlers = [];\n\t\t\t//set class pop up\n\t\t\tvar selector = $(\"#\" + this.id);\n\t\t\tselector.addClass(\"popup\");\n\t\t},\n\n\t\t/**\n   * Sets the message that is displayed inside the widget\n   *\n   * @command setMessage(msg)\n   * @param {String} msg - The message that is displayed inside the widget\n   */\n\t\tsetRawMessage: function setRawMessage(msg) {\n\t\t\t$(\"#\" + this.id).html(msg);\n\t\t\tGEPPETTO.CommandController.log(\"Set new Message for \" + this.id, true);\n\n\t\t\tif (this.customHandlers.length > 0) {\n\t\t\t\t// msg has changed, set hooked attribute on handlers to false\n\t\t\t\tfor (var i = 0; i < this.customHandlers.length; i++) {\n\t\t\t\t\tthis.customHandlers[i].hooked = false;\n\t\t\t\t}\n\n\t\t\t\t// trigger routine that hooks up handlers\n\t\t\t\thookupCustomHandlers(this.customHandlers, $(\"#\" + this.id), this);\n\t\t\t\tGEPPETTO.CommandController.log(\"Hooked up custom handlers for \" + this.id, true);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n   * Sets the message that is displayed inside the widget\n   *\n   * @command setMessage(msg)\n   * @param {String} msg - The message that is displayed inside the widget\n   */\n\t\tsetMessage: function setMessage(msg) {\n\t\t\tthis.data = msg;\n\t\t\tthis.setRawMessage(msg);\n\t\t\t// track change in state of the widget\n\t\t\tthis.dirtyView = true;\n\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n   * Sets the message that is displayed inside the widget through an instance of type Text\n   *\n   * @command setText(textInstance)\n   * @param {Object} textInstance - An instance of type Text\n   */\n\t\tsetText: function setText(textNode) {\n\t\t\treturn this.setMessage(this.getVariable(textNode).getInitialValues()[0].value.text);\n\t\t},\n\n\t\t/**\n   * Sets the message that is displayed inside the widget through an instance of type HTML\n   *\n   * @command setHTML(htmlInstance)\n   * @param {Object} htmlInstance - An instance of type HTML\n   */\n\t\tsetHTML: function setHTML(htmlNode) {\n\t\t\tif ($.isArray(htmlNode)) {\n\t\t\t\tvar html = \"\";\n\t\t\t\tfor (var i in htmlNode) {\n\t\t\t\t\tvar values = this.getVariable(htmlNode[i]).getInitialValues();\n\t\t\t\t\thtml += values[0].value.html;\n\t\t\t\t}\n\t\t\t\tthis.setMessage(html);\n\t\t\t} else {\n\t\t\t\tthis.setMessage(this.getVariable(htmlNode).getInitialValues()[0].value.html);\n\t\t\t}\n\t\t},\n\n\t\t/**\n   * Sets the message that is displayed inside the widget through an instance of any type.\n   *\n   * @command setData(anyInstance)\n   * @param {Object} anyInstance - An instance of any type\n   */\n\n\t\tsetData: function setData(anyInstance, filter) {\n\t\t\tthis.controller.addToHistory(anyInstance.getName(), \"setData\", [anyInstance, filter], this.getId());\n\n\t\t\tthis.data = [anyInstance, filter];\n\n\t\t\tthis.setRawMessage(this.getHTML(anyInstance, \"\", filter));\n\t\t\tvar changeIcon = function changeIcon(chevron) {\n\t\t\t\tif (chevron.hasClass('fa-chevron-circle-down')) {\n\t\t\t\t\tchevron.removeClass(\"fa-chevron-circle-down\").addClass(\"fa-chevron-circle-up\");\n\t\t\t\t} else {\n\t\t\t\t\tchevron.removeClass(\"fa-chevron-circle-up\").addClass(\"fa-chevron-circle-down\");\n\t\t\t\t}\n\t\t\t};\n\t\t\t$(\"#\" + this.getId() + ' .popup-title').click(function (e) {\n\t\t\t\tchangeIcon($($(e.target).attr(\"data-target\") + \"_chevron\"));\n\t\t\t});\n\t\t\t$(\"#\" + this.getId() + \" .popup-chevron\").click(function (e) {\n\t\t\t\tchangeIcon($(e.target));\n\t\t\t});\n\t\t\t$(\"#\" + this.getId() + \" .slickdiv\").slick();\n\n\t\t\tif (this.buttonBarConfig != null && this.buttonBarConfig != undefined) {\n\t\t\t\tthis.renderButtonBar();\n\t\t\t}\n\n\t\t\tif (this.collapsed) {\n\t\t\t\tthis.$el.dialogExtend(\"collapse\");\n\t\t\t}\n\n\t\t\t// track change in state of the widget\n\t\t\tthis.dirtyView = true;\n\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n   *\n   * @param anyInstance\n   * @returns {string}\n   */\n\t\tgetHTML: function getHTML(anyInstance, id, filter) {\n\t\t\tvar anchorOptions = {\n\t\t\t\t\"attributes\": {\n\t\t\t\t\t\"target\": \"_blank\",\n\t\t\t\t\t\"class\": \"popup_link\"\n\t\t\t\t},\n\t\t\t\t\"html\": true,\n\t\t\t\tips: false,\n\t\t\t\temails: true,\n\t\t\t\turls: true,\n\t\t\t\tTLDs: 20,\n\t\t\t\ttruncate: 0,\n\t\t\t\tdefaultProtocol: \"http://\"\n\t\t\t};\n\t\t\tvar type = anyInstance;\n\t\t\tif (!(type instanceof Type)) {\n\t\t\t\ttype = anyInstance.getType();\n\t\t\t}\n\t\t\tvar html = \"\";\n\n\t\t\t//let's check the filter\n\t\t\tif (filter != undefined && type.getMetaType() != GEPPETTO.Resources.COMPOSITE_TYPE_NODE) {\n\t\t\t\tif ($.inArray(type.getMetaType(), filter) == -1) {\n\t\t\t\t\t//this type is not in the filter!\n\t\t\t\t\treturn html;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (type.getMetaType() == GEPPETTO.Resources.COMPOSITE_TYPE_NODE) {\n\t\t\t\tfor (var i = 0; i < type.getVariables().length; i++) {\n\t\t\t\t\tvar v = type.getVariables()[i];\n\n\t\t\t\t\tif (filter != undefined) {\n\t\t\t\t\t\tif ($.inArray(v.getType().getMetaType(), filter) == -1) {\n\t\t\t\t\t\t\t//this type is not in the filter!\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar id = this.getId() + \"_\" + type.getId() + \"_el_\" + i;\n\t\t\t\t\tif (filter == undefined) {\n\t\t\t\t\t\t//Titles are only displayed if there's no filter..maybe random, make it a separate parameter\n\t\t\t\t\t\thtml += \"<div class='popup-title' data-toggle='collapse' data-target='#\" + id + \"'>\" + v.getName() + \"</div><div id='\" + id + \"_chevron\" + \"' data-toggle='collapse' data-target='#\" + id + \"' class='popup-chevron fa fa-chevron-circle-down '></div>\";\n\t\t\t\t\t}\n\t\t\t\t\thtml += this.getHTML(v, id, filter);\n\t\t\t\t}\n\t\t\t} else if (type.getMetaType() == GEPPETTO.Resources.HTML_TYPE) {\n\t\t\t\tvar value = this.getVariable(anyInstance).getInitialValues()[0].value;\n\t\t\t\thtml += \"<div id='\" + id + \"' class='collapse in popup-html'>\" + value.html + \"</div>\";\n\t\t\t} else if (type.getMetaType() == GEPPETTO.Resources.TEXT_TYPE) {\n\t\t\t\tvar value = this.getVariable(anyInstance).getInitialValues()[0].value;\n\t\t\t\thtml += \"<div id='\" + id + \"' class='collapse in popup-text'>\" + anchorme(value.text, anchorOptions) + \"</div>\";\n\t\t\t} else if (type.getMetaType() == GEPPETTO.Resources.IMAGE_TYPE) {\n\t\t\t\tif (this.getVariable(anyInstance).getInitialValues()[0] != undefined) {\n\t\t\t\t\tvar value = this.getVariable(anyInstance).getInitialValues()[0].value;\n\t\t\t\t\tif (value.eClass == GEPPETTO.Resources.ARRAY_VALUE) {\n\t\t\t\t\t\t//if it's an array we use slick to create a carousel\n\t\t\t\t\t\tvar elements = \"\";\n\t\t\t\t\t\tfor (var j = 0; j < value.elements.length; j++) {\n\t\t\t\t\t\t\tvar image = value.elements[j].initialValue;\n\t\t\t\t\t\t\telements += \"<div class='popup-slick-image'>\" + image.name + \"<a href='' data-instancepath='\" + image.reference + \"'><img  class='popup-image' src='\" + image.data + \"'/></a></div>\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\thtml += \"<div id='\" + id + \"' class='slickdiv popup-slick collapse in' data-slick='{\\\"fade\\\": true,\\\"centerMode\\\": true, \\\"slidesToShow\\\": 1, \\\"slidesToScroll\\\": 1}' >\" + elements + \"</div>\";\n\t\t\t\t\t} else if (value.eClass == GEPPETTO.Resources.IMAGE) {\n\t\t\t\t\t\t//otherwise we just show an image\n\t\t\t\t\t\tvar image = value;\n\t\t\t\t\t\thtml += \"<div id='\" + id + \"' class='popup-image collapse in'><a href='' data-instancepath='\" + image.reference + \"'><img  class='popup-image' src='\" + image.data + \"'/></a></div>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn html;\n\t\t},\n\n\t\t/**\n   * Returns the variable for a node or variable node\n   *\n   * @command getVariable(node)\n   * @param {Object} variable - A variable\n   */\n\t\tgetVariable: function getVariable(node) {\n\t\t\tif (node.getMetaType() == GEPPETTO.Resources.INSTANCE_NODE) {\n\t\t\t\treturn node.getVariable();\n\t\t\t} else {\n\t\t\t\treturn node;\n\t\t\t}\n\t\t},\n\n\t\t/**\n   * Sets a custom handler for a given event for nodes that point to nodes via instancePath attribute on HTML anchors.\n   *\n   * @command addCustomNodeHandler(funct, eventType)\n   * @param {function} funct - Handler function\n   * @param {String} eventType - event that triggers the custom handler\n   */\n\t\taddCustomNodeHandler: function addCustomNodeHandler(funct, eventType, metaType) {\n\t\t\tvar addHandler = true;\n\t\t\tfor (var i = 0; i < this.customHandlers.length; i++) {\n\t\t\t\tif (eventType == this.customHandlers[i].event) {\n\t\t\t\t\taddHandler = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (addHandler) {\n\t\t\t\tthis.customHandlers.push({ funct: funct, event: eventType, meta: metaType, hooked: false });\n\n\t\t\t\t// trigger routine that hooks up handlers\n\t\t\t\thookupCustomHandlers(this.customHandlers, $(\"#\" + this.id), this);\n\n\t\t\t\t// track change in state of the widget\n\t\t\t\tthis.dirtyView = true;\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\trenderButtonBar: function renderButtonBar() {\n\t\t\tvar that = this;\n\t\t\tvar buttonBarContainer = 'button-bar-container-' + this.id;\n\t\t\tvar barDiv = 'bar-div-' + this.id;\n\t\t\tif (this.buttonBar != null) {\n\t\t\t\tReactDOM.unmountComponentAtNode(document.getElementById(barDiv));\n\t\t\t\t$(\"#\" + buttonBarContainer).remove();\n\t\t\t}\n\n\t\t\tthis.$el.parent().append(\"<div id='\" + buttonBarContainer + \"' class='button-bar-container'><div id='\" + barDiv + \"' class='button-bar-div'></div></div>\");\n\n\t\t\tvar instance = null;\n\t\t\tvar instancePath = '';\n\n\t\t\tif (this.buttonBarConfig.filter != null && this.buttonBarConfig.filter != undefined) {\n\t\t\t\tif (this.data != null && this.data != undefined) {\n\t\t\t\t\tinstance = this.buttonBarConfig.filter(this.data);\n\t\t\t\t\tinstancePath = instance.getPath();\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar originalZIndex = $(\"#\" + this.id).parent().css(\"z-index\");\n\t\t\tthis.buttonBar = ReactDOM.render(React.createElement(ButtonBarComponent, {\n\t\t\t\tbuttonBarConfig: this.buttonBarConfig, showControls: this.buttonBarControls,\n\t\t\t\tinstancePath: instancePath, instance: instance, geppetto: GEPPETTO, resize: function resize() {\n\t\t\t\t\tthat.setSize(that.size.height, that.size.width);\n\t\t\t\t}\n\t\t\t}), document.getElementById(barDiv));\n\n\t\t\t$(\"#\" + this.id).parent().css('z-index', originalZIndex);\n\t\t},\n\n\t\tsetButtonBarControls: function setButtonBarControls(controls) {\n\t\t\tthis.buttonBarControls = controls;\n\t\t\t// track change in state of the widget\n\t\t\tthis.dirtyView = true;\n\t\t},\n\n\t\tsetButtonBarConfiguration: function setButtonBarConfiguration(configuration) {\n\t\t\tthis.buttonBarConfig = configuration;\n\t\t\tif (this.data != null || this.data != undefined) {\n\t\t\t\tthis.renderButtonBar();\n\t\t\t}\n\n\t\t\t// if the user clicks outside this popup hide color pickers if visible\n\t\t\tvar popupSelector = $(\"#\" + this.id);\n\t\t\t$(document).click(function (e) {\n\t\t\t\tif (!popupSelector.is(e.target) // if the target of the click isn't the container...\n\t\t\t\t&& popupSelector.has(e.target).length === 0 // ... nor a descendant of the container\n\t\t\t\t&& !$(e.target).parents('.colorpicker').length > 0 // ... and it's not a child of a color picker\n\t\t\t\t) {\n\t\t\t\t\t\t// hide color picker (it's place in the body so we can't restrict the search) if any\n\t\t\t\t\t\t$('.colorpicker-visible').addClass('colorpicker-hidden').removeClass('colorpicker-visible');\n\t\t\t\t\t}\n\t\t\t});\n\n\t\t\t// track change in state of the widget\n\t\t\tthis.dirtyView = true;\n\t\t},\n\n\t\tdestroy: function destroy() {\n\t\t\tvar bar = document.getElementById('bar-div-' + this.id);\n\t\t\tif (bar != null || bar != undefined) {\n\t\t\t\tReactDOM.unmountComponentAtNode(bar);\n\t\t\t}\n\t\t\tWidget.View.prototype.destroy.call(this);\n\t\t},\n\n\t\tgetView: function getView() {\n\t\t\tvar baseView = Widget.View.prototype.getView.call(this);\n\n\t\t\t// add data-type and data field + any other custom fields in the component-specific attribute\n\t\t\tbaseView.dataType = typeof this.data == \"string\" ? \"string\" : \"object\";\n\n\t\t\tif ($.isArray(this.data)) baseView.data = [this.data[0].getPath(), this.data[1]];else baseView.data = this.data;\n\n\t\t\tbaseView.componentSpecific = {\n\t\t\t\tcustomHandlers: this.customHandlers.map(function (item) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfunct: item.funct.toString(),\n\t\t\t\t\t\tevent: item.event,\n\t\t\t\t\t\tmetType: item.metType\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t\tbuttonBarControls: this.buttonBarControls,\n\t\t\t\tbuttonBarConfig: this.buttonBarConfig\n\t\t\t};\n\n\t\t\treturn baseView;\n\t\t},\n\n\t\tsetView: function setView(view) {\n\t\t\t// set data\n\t\t\tif (view.data != undefined) {\n\t\t\t\tif (view.dataType == 'string') {\n\t\t\t\t\tthis.setMessage(view.data);\n\t\t\t\t} else if (view.dataType == 'stringCommand') {\n\t\t\t\t\tthis.setMessage(eval(view.data));\n\t\t\t\t} else if ($.isArray(view.data)) {\n\t\t\t\t\tthis.setData(eval(view.data[0]), view.data[1]);\n\t\t\t\t} else {\n\t\t\t\t\t// it's an object\n\t\t\t\t\tthis.setData(view.data);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// set base properties after setting data so navigation history is correct\n\t\t\tWidget.View.prototype.setView.call(this, view);\n\n\t\t\t// set component specific stuff, only custom handlers for popup widget\n\t\t\tif (view.componentSpecific != undefined) {\n\t\t\t\tif (view.componentSpecific.customHandlers != undefined) {\n\t\t\t\t\tfor (var i = 0; i < view.componentSpecific.customHandlers.length; i++) {\n\t\t\t\t\t\tthis.addCustomNodeHandler(eval(\"(\" + view.componentSpecific.customHandlers[i].funct + \")\"), view.componentSpecific.customHandlers[i].event, view.componentSpecific.customHandlers[i].metaType);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (view.componentSpecific.buttonBarControls != undefined && view.componentSpecific.buttonBarConfig != undefined) {\n\t\t\t\t\tthis.setButtonBarControls(view.componentSpecific.buttonBarControls);\n\t\t\t\t\tthis.setButtonBarConfiguration(view.componentSpecific.buttonBarConfig);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// after setting view through setView, reset dirty flag\n\t\t\tthis.dirtyView = false;\n\t\t}\n\t});\n}.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/components/widgets/popup/Popup.js\n// module id = 2344\n// module chunks = 32\n\n//# sourceURL=webpack:///./js/components/widgets/popup/Popup.js?");

/***/ }),

/***/ 2345:
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n\t__webpack_require__(2346);\n\n\tvar React = __webpack_require__(1);\n\tvar colorpicker = __webpack_require__(2348);\n\n\tvar ButtonBarComponent = React.createClass({\n\t\tdisplayName: 'ButtonBarComponent',\n\n\t\tcolorPickerBtnId: '',\n\t\tcolorPickerActionFn: '',\n\n\t\tgetInitialState: function getInitialState() {\n\t\t\treturn {};\n\t\t},\n\n\t\tcomponentDidMount: function componentDidMount() {\n\t\t\tvar that = this;\n\n\t\t\tif (that.props.instance != null || that.props.instance != undefined) {\n\t\t\t\tthat.props.resize();\n\t\t\t}\n\n\t\t\t// hookup color picker onChange\n\t\t\tif (this.colorPickerBtnId != '') {\n\t\t\t\tvar path = this.props.instancePath;\n\t\t\t\tvar entity = eval(path);\n\t\t\t\tvar defColor = '0Xffffff';\n\n\t\t\t\t// grab default color from instance\n\t\t\t\tif (entity.hasCapability(GEPPETTO.Resources.VISUAL_CAPABILITY)) {\n\t\t\t\t\tdefColor = entity.getColor();\n\t\t\t\t}\n\n\t\t\t\t// init dat color picker\n\t\t\t\tvar coloPickerElement = $('#' + this.colorPickerBtnId);\n\t\t\t\tcoloPickerElement.colorpicker({ format: 'hex', customClass: 'buttonbar-colorpicker' });\n\t\t\t\tcoloPickerElement.colorpicker('setValue', defColor.replace(/0X/i, \"#\"));\n\n\t\t\t\t// closure on local scope at this point - hook on change event\n\t\t\t\tcoloPickerElement.on('changeColor', function (e) {\n\t\t\t\t\tthat.colorPickerActionFn(e.color.toHex().replace(\"#\", \"0x\"));\n\t\t\t\t\t$(this).css(\"color\", e.color.toHex());\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (this.props.buttonBarConfig.Events != null || this.props.buttonBarConfig.Events != undefined) {\n\t\t\t\tthis.props.geppetto.on(GEPPETTO.Events.Visibility_changed, function (instance) {\n\t\t\t\t\tif (!$.isEmptyObject(that.props) || that.props != undefined) {\n\t\t\t\t\t\tif (instance.getInstancePath() == that.props.instancePath) {\n\t\t\t\t\t\t\tthat.forceUpdate();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif ((that.props.instance != null || that.props.instance != undefined) && (instance.getParent() != null || instance.getParent() != undefined)) {\n\t\t\t\t\t\t\t\tif (that.props.instance.getInstancePath() == instance.getParent().getInstancePath()) {\n\t\t\t\t\t\t\t\t\tthat.forceUpdate();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.props.geppetto.on(GEPPETTO.Events.Select, function (instance) {\n\t\t\t\t\tif (!$.isEmptyObject(that.props) || that.props != undefined) {\n\t\t\t\t\t\tif (instance.getInstancePath() == that.props.instancePath) {\n\t\t\t\t\t\t\tthat.forceUpdate();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif ((that.props.instance != null || that.props.instance != undefined) && (instance.getParent() != null || instance.getParent() != undefined)) {\n\t\t\t\t\t\t\t\tif (that.props.instance.getInstancePath() == instance.getParent().getInstancePath()) {\n\t\t\t\t\t\t\t\t\tthat.forceUpdate();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.props.geppetto.on(GEPPETTO.Events.Color_set, function (instance) {\n\t\t\t\t\tif (that.props != null || that.props != undefined) {\n\t\t\t\t\t\tif (instance.instance.getInstancePath() == that.props.instancePath) {\n\t\t\t\t\t\t\tthat.forceUpdate();\n\t\t\t\t\t\t\tif (that.props.instance != null || that.props.instance != undefined) {\n\t\t\t\t\t\t\t\tthat.props.resize();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tcomponentWillUnmount: function componentWillUnmount() {\n\t\t\tconsole.log(\"unmount\");\n\t\t\tthis.props = {};\n\t\t},\n\n\t\treplaceTokensWithPath: function replaceTokensWithPath(inputStr, path) {\n\t\t\treturn inputStr.replace(/\\$instance\\$/gi, path).replace(/\\$instances\\$/gi, '[' + path + ']');\n\t\t},\n\n\t\tgetActionString: function getActionString(control, path) {\n\t\t\tvar actionStr = '';\n\n\t\t\tif (control.actions.length > 0) {\n\t\t\t\tfor (var i = 0; i < control.actions.length; i++) {\n\t\t\t\t\tactionStr += (i != 0 ? \";\" : \"\") + this.replaceTokensWithPath(control.actions[i], path);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn actionStr;\n\t\t},\n\n\t\tresolveCondition: function resolveCondition(control, path, negateCondition) {\n\t\t\tif (negateCondition == undefined) {\n\t\t\t\tnegateCondition = false;\n\t\t\t}\n\n\t\t\tvar resolvedConfig = control;\n\n\t\t\tif (resolvedConfig.hasOwnProperty('condition')) {\n\t\t\t\t// evaluate condition and reassign control depending on results\n\t\t\t\tvar conditionStr = this.replaceTokensWithPath(control.condition, path);\n\t\t\t\tif (eval(conditionStr)) {\n\t\t\t\t\tresolvedConfig = negateCondition ? resolvedConfig.false : resolvedConfig.true;\n\t\t\t\t} else {\n\t\t\t\t\tresolvedConfig = negateCondition ? resolvedConfig.true : resolvedConfig.false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn resolvedConfig;\n\t\t},\n\n\t\trefresh: function refresh() {\n\t\t\tthis.forceUpdate();\n\t\t},\n\n\t\trender: function render() {\n\t\t\tvar showControls = this.props.showControls;\n\t\t\tvar config = this.props.buttonBarConfig;\n\t\t\tvar path = this.props.instancePath;\n\t\t\tvar ctrlButtons = [];\n\n\t\t\t// retrieve entity/instance\n\t\t\tvar entity = undefined;\n\t\t\ttry {\n\t\t\t\t// need to eval because this is a nested path - not simply a global on window\n\t\t\t\tentity = eval(path);\n\t\t\t} catch (e) {\n\t\t\t\tthrow \"The instance \" + path + \" does not exist in the current model\";\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Add common control buttons to list\n\t\t\tfor (var control in config.Common) {\n\t\t\t\tif ($.inArray(control.toString(), showControls.Common) != -1) {\n\t\t\t\t\tvar add = true;\n\n\t\t\t\t\t// check show condition\n\t\t\t\t\tif (config.Common[control].showCondition != undefined) {\n\t\t\t\t\t\tvar condition = this.replaceTokensWithPath(config.Common[control].showCondition, path);\n\t\t\t\t\t\tadd = eval(condition);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (add) {\n\t\t\t\t\t\tctrlButtons.push(config.Common[control]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (entity != null || entity != undefined) {\n\t\t\t\tif (entity.hasCapability(GEPPETTO.Resources.VISUAL_CAPABILITY)) {\n\t\t\t\t\t// Add visual capability controls to list\n\t\t\t\t\tfor (var control in config.VisualCapability) {\n\t\t\t\t\t\tif ($.inArray(control.toString(), showControls.VisualCapability) != -1) {\n\t\t\t\t\t\t\tvar add = true;\n\n\t\t\t\t\t\t\t// check show condition\n\t\t\t\t\t\t\tif (config.VisualCapability[control].showCondition != undefined) {\n\t\t\t\t\t\t\t\tvar condition = this.replaceTokensWithPath(config.VisualCapability[control].showCondition, path);\n\t\t\t\t\t\t\t\tadd = eval(condition);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (add) {\n\t\t\t\t\t\t\t\tctrlButtons.push(config.VisualCapability[control]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar that = this;\n\n\t\t\treturn React.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ className: 'buttonBarComponentDiv' },\n\t\t\t\tctrlButtons.map(function (control, id) {\n\t\t\t\t\t// grab attributes to init button attributes\n\t\t\t\t\tvar controlConfig = that.resolveCondition(control, path);\n\t\t\t\t\tvar idVal = path.replace(/\\./g, '_').replace(/\\[/g, '_').replace(/\\]/g, '_') + \"_\" + controlConfig.id + \"_buttonBar_btn\";\n\t\t\t\t\tvar tooltip = controlConfig.tooltip;\n\t\t\t\t\tvar classVal = \"btn buttonBar-button fa \" + controlConfig.icon;\n\t\t\t\t\tvar styleVal = {};\n\n\t\t\t\t\t// define action function\n\t\t\t\t\tvar actionFn = function actionFn(param) {\n\t\t\t\t\t\t// NOTE: there is a closure on 'control' so it's always the right one\n\t\t\t\t\t\tvar controlConfig = that.resolveCondition(control, path);\n\n\t\t\t\t\t\t// take out action string\n\t\t\t\t\t\tvar actionStr = that.getActionString(controlConfig, path);\n\n\t\t\t\t\t\tif (param != undefined) {\n\t\t\t\t\t\t\tactionStr = actionStr.replace(/\\$param\\$/gi, param);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// run action\n\t\t\t\t\t\tif (actionStr != '' && actionStr != undefined) {\n\t\t\t\t\t\t\tGEPPETTO.CommandController.execute(actionStr);\n\t\t\t\t\t\t\tthat.refresh();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// if conditional, swap icon with the other condition outcome\n\t\t\t\t\t\tif (control.hasOwnProperty('condition')) {\n\t\t\t\t\t\t\tvar otherConfig = that.resolveCondition(control, path);\n\t\t\t\t\t\t\tvar element = $('#' + idVal);\n\t\t\t\t\t\t\telement.removeClass();\n\t\t\t\t\t\t\telement.addClass(\"btn buttonBar-button fa \" + otherConfig.icon);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\t// if conditional, swap icon with the other condition outcome\n\t\t\t\t\tif (control.hasOwnProperty('condition')) {\n\t\t\t\t\t\tvar otherConfig = that.resolveCondition(control, path);\n\t\t\t\t\t\tvar element = $('#' + idVal);\n\t\t\t\t\t\telement.removeClass();\n\t\t\t\t\t\telement.addClass(\"btn buttonBar-button fa \" + otherConfig.icon);\n\t\t\t\t\t}\n\n\t\t\t\t\t// figure out if we need to include the color picker (hook it up in didMount)\n\t\t\t\t\tif (controlConfig.id == \"color\") {\n\t\t\t\t\t\tthat.colorPickerBtnId = idVal;\n\t\t\t\t\t\tthat.colorPickerActionFn = actionFn;\n\t\t\t\t\t\t// set style val to color tint icon\n\t\t\t\t\t\tvar colorVal = String(entity.getColor().replace(/0X/i, \"#\") + \"0000\").slice(0, 7);\n\t\t\t\t\t\tstyleVal = { color: colorVal.startsWith('#') ? colorVal : '#' + colorVal };\n\t\t\t\t\t\tclassVal += \" color-picker-button\";\n\t\t\t\t\t}\n\n\t\t\t\t\treturn React.createElement(\n\t\t\t\t\t\t'span',\n\t\t\t\t\t\t{ key: id },\n\t\t\t\t\t\tReact.createElement('button', { id: idVal,\n\t\t\t\t\t\t\tclassName: classVal,\n\t\t\t\t\t\t\tstyle: styleVal,\n\t\t\t\t\t\t\ttitle: tooltip,\n\t\t\t\t\t\t\tonClick: controlConfig.id == \"color\" ? function () {} : actionFn })\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t});\n\n\treturn ButtonBarComponent;\n}.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/components/widgets/popup/ButtonBarComponent.js\n// module id = 2345\n// module chunks = 32\n\n//# sourceURL=webpack:///./js/components/widgets/popup/ButtonBarComponent.js?");

/***/ }),

/***/ 2346:
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(2347);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(25)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/less-loader/dist/cjs.js?{\\\"modifyVars\\\":{\\\"url\\\":\\\"'../../../extensions/geppetto-default/colors'\\\"}}!./ButtonBarComponent.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/less-loader/dist/cjs.js?{\\\"modifyVars\\\":{\\\"url\\\":\\\"'../../../extensions/geppetto-default/colors'\\\"}}!./ButtonBarComponent.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/components/widgets/popup/ButtonBarComponent.less\n// module id = 2346\n// module chunks = 32\n\n//# sourceURL=webpack:///./js/components/widgets/popup/ButtonBarComponent.less?");

/***/ }),

/***/ 2347:
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(24)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \".dark-orange {\\n  color: #fc401a;\\n}\\n.orange {\\n  color: #fc6320;\\n}\\n.orange-color {\\n  color: #fc6320;\\n}\\n.orange-color-bg {\\n  background-color: #fc6320;\\n}\\n.buttonbar-colorpicker {\\n  background: rgba(50, 50, 53, 0.8);\\n  opacity: 0.7;\\n  border: 1px solid rgba(255, 255, 255, 0.25) !important;\\n  border-radius: 0px !important;\\n}\\n.colorpicker:after {\\n  border-bottom: 6px solid rgba(255, 255, 255, 0.27) !important;\\n}\\n.buttonBar-button {\\n  height: 25px;\\n  width: 33px;\\n  margin: 0px;\\n  background: none !important;\\n  color: #fc6320;\\n  font-size: 18px !important;\\n  border: 0 !important;\\n}\\n.buttonBar-button:hover {\\n  font-size: 20px !important;\\n  background: none !important;\\n  color: #fc4b19;\\n}\\n.buttonBarComponentDiv {\\n  margin-bottom: 5px;\\n}\\n.button-bar-container {\\n  width: 100%;\\n  text-align: center;\\n}\\n.button-bar-div {\\n  height: 100%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/less-loader/dist/cjs.js?{\"modifyVars\":{\"url\":\"'../../../extensions/geppetto-default/colors'\"}}!./js/components/widgets/popup/ButtonBarComponent.less\n// module id = 2347\n// module chunks = 32\n\n//# sourceURL=webpack:///./js/components/widgets/popup/ButtonBarComponent.less?./node_modules/css-loader!./node_modules/less-loader/dist/cjs.js?%7B%22modifyVars%22:%7B%22url%22:%22'../../../extensions/geppetto-default/colors'%22%7D%7D");

/***/ }),

/***/ 2348:
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n!function (a) {\n  \"use strict\";\n  \"object\" == ( false ? \"undefined\" : _typeof(exports)) ? module.exports = a(window.jQuery) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(9)], __WEBPACK_AMD_DEFINE_FACTORY__ = (a),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : window.jQuery && !window.jQuery.fn.colorpicker && a(window.jQuery);\n}(function (a) {\n  \"use strict\";\n  var b = function b(_b, c) {\n    this.value = { h: 0, s: 0, b: 0, a: 1 }, this.origFormat = null, c && a.extend(this.colors, c), _b && (void 0 !== _b.toLowerCase ? (_b += \"\", this.setColor(_b)) : void 0 !== _b.h && (this.value = _b));\n  };b.prototype = { constructor: b, colors: { aliceblue: \"#f0f8ff\", antiquewhite: \"#faebd7\", aqua: \"#00ffff\", aquamarine: \"#7fffd4\", azure: \"#f0ffff\", beige: \"#f5f5dc\", bisque: \"#ffe4c4\", black: \"#000000\", blanchedalmond: \"#ffebcd\", blue: \"#0000ff\", blueviolet: \"#8a2be2\", brown: \"#a52a2a\", burlywood: \"#deb887\", cadetblue: \"#5f9ea0\", chartreuse: \"#7fff00\", chocolate: \"#d2691e\", coral: \"#ff7f50\", cornflowerblue: \"#6495ed\", cornsilk: \"#fff8dc\", crimson: \"#dc143c\", cyan: \"#00ffff\", darkblue: \"#00008b\", darkcyan: \"#008b8b\", darkgoldenrod: \"#b8860b\", darkgray: \"#a9a9a9\", darkgreen: \"#006400\", darkkhaki: \"#bdb76b\", darkmagenta: \"#8b008b\", darkolivegreen: \"#556b2f\", darkorange: \"#ff8c00\", darkorchid: \"#9932cc\", darkred: \"#8b0000\", darksalmon: \"#e9967a\", darkseagreen: \"#8fbc8f\", darkslateblue: \"#483d8b\", darkslategray: \"#2f4f4f\", darkturquoise: \"#00ced1\", darkviolet: \"#9400d3\", deeppink: \"#ff1493\", deepskyblue: \"#00bfff\", dimgray: \"#696969\", dodgerblue: \"#1e90ff\", firebrick: \"#b22222\", floralwhite: \"#fffaf0\", forestgreen: \"#228b22\", fuchsia: \"#ff00ff\", gainsboro: \"#dcdcdc\", ghostwhite: \"#f8f8ff\", gold: \"#ffd700\", goldenrod: \"#daa520\", gray: \"#808080\", green: \"#008000\", greenyellow: \"#adff2f\", honeydew: \"#f0fff0\", hotpink: \"#ff69b4\", indianred: \"#cd5c5c\", indigo: \"#4b0082\", ivory: \"#fffff0\", khaki: \"#f0e68c\", lavender: \"#e6e6fa\", lavenderblush: \"#fff0f5\", lawngreen: \"#7cfc00\", lemonchiffon: \"#fffacd\", lightblue: \"#add8e6\", lightcoral: \"#f08080\", lightcyan: \"#e0ffff\", lightgoldenrodyellow: \"#fafad2\", lightgrey: \"#d3d3d3\", lightgreen: \"#90ee90\", lightpink: \"#ffb6c1\", lightsalmon: \"#ffa07a\", lightseagreen: \"#20b2aa\", lightskyblue: \"#87cefa\", lightslategray: \"#778899\", lightsteelblue: \"#b0c4de\", lightyellow: \"#ffffe0\", lime: \"#00ff00\", limegreen: \"#32cd32\", linen: \"#faf0e6\", magenta: \"#ff00ff\", maroon: \"#800000\", mediumaquamarine: \"#66cdaa\", mediumblue: \"#0000cd\", mediumorchid: \"#ba55d3\", mediumpurple: \"#9370d8\", mediumseagreen: \"#3cb371\", mediumslateblue: \"#7b68ee\", mediumspringgreen: \"#00fa9a\", mediumturquoise: \"#48d1cc\", mediumvioletred: \"#c71585\", midnightblue: \"#191970\", mintcream: \"#f5fffa\", mistyrose: \"#ffe4e1\", moccasin: \"#ffe4b5\", navajowhite: \"#ffdead\", navy: \"#000080\", oldlace: \"#fdf5e6\", olive: \"#808000\", olivedrab: \"#6b8e23\", orange: \"#ffa500\", orangered: \"#ff4500\", orchid: \"#da70d6\", palegoldenrod: \"#eee8aa\", palegreen: \"#98fb98\", paleturquoise: \"#afeeee\", palevioletred: \"#d87093\", papayawhip: \"#ffefd5\", peachpuff: \"#ffdab9\", peru: \"#cd853f\", pink: \"#ffc0cb\", plum: \"#dda0dd\", powderblue: \"#b0e0e6\", purple: \"#800080\", red: \"#ff0000\", rosybrown: \"#bc8f8f\", royalblue: \"#4169e1\", saddlebrown: \"#8b4513\", salmon: \"#fa8072\", sandybrown: \"#f4a460\", seagreen: \"#2e8b57\", seashell: \"#fff5ee\", sienna: \"#a0522d\", silver: \"#c0c0c0\", skyblue: \"#87ceeb\", slateblue: \"#6a5acd\", slategray: \"#708090\", snow: \"#fffafa\", springgreen: \"#00ff7f\", steelblue: \"#4682b4\", tan: \"#d2b48c\", teal: \"#008080\", thistle: \"#d8bfd8\", tomato: \"#ff6347\", turquoise: \"#40e0d0\", violet: \"#ee82ee\", wheat: \"#f5deb3\", white: \"#ffffff\", whitesmoke: \"#f5f5f5\", yellow: \"#ffff00\", yellowgreen: \"#9acd32\", transparent: \"transparent\" }, _sanitizeNumber: function _sanitizeNumber(a) {\n      return \"number\" == typeof a ? a : isNaN(a) || null === a || \"\" === a || void 0 === a ? 1 : void 0 !== a.toLowerCase ? parseFloat(a) : 1;\n    }, isTransparent: function isTransparent(a) {\n      return a ? (a = a.toLowerCase().trim(), \"transparent\" === a || a.match(/#?00000000/) || a.match(/(rgba|hsla)\\(0,0,0,0?\\.?0\\)/)) : !1;\n    }, rgbaIsTransparent: function rgbaIsTransparent(a) {\n      return 0 === a.r && 0 === a.g && 0 === a.b && 0 === a.a;\n    }, setColor: function setColor(a) {\n      a = a.toLowerCase().trim(), a && (this.isTransparent(a) ? this.value = { h: 0, s: 0, b: 0, a: 0 } : this.value = this.stringToHSB(a) || { h: 0, s: 0, b: 0, a: 1 });\n    }, stringToHSB: function stringToHSB(b) {\n      b = b.toLowerCase();var c;\"undefined\" != typeof this.colors[b] && (b = this.colors[b], c = \"alias\");var d = this,\n          e = !1;return a.each(this.stringParsers, function (a, f) {\n        var g = f.re.exec(b),\n            h = g && f.parse.apply(d, [g]),\n            i = c || f.format || \"rgba\";return h ? (e = i.match(/hsla?/) ? d.RGBtoHSB.apply(d, d.HSLtoRGB.apply(d, h)) : d.RGBtoHSB.apply(d, h), d.origFormat = i, !1) : !0;\n      }), e;\n    }, setHue: function setHue(a) {\n      this.value.h = 1 - a;\n    }, setSaturation: function setSaturation(a) {\n      this.value.s = a;\n    }, setBrightness: function setBrightness(a) {\n      this.value.b = 1 - a;\n    }, setAlpha: function setAlpha(a) {\n      this.value.a = parseInt(100 * (1 - a), 10) / 100;\n    }, toRGB: function toRGB(a, b, c, d) {\n      a || (a = this.value.h, b = this.value.s, c = this.value.b), a *= 360;var e, f, g, h, i;return a = a % 360 / 60, i = c * b, h = i * (1 - Math.abs(a % 2 - 1)), e = f = g = c - i, a = ~~a, e += [i, h, 0, 0, h, i][a], f += [h, i, i, h, 0, 0][a], g += [0, 0, h, i, i, h][a], { r: Math.round(255 * e), g: Math.round(255 * f), b: Math.round(255 * g), a: d || this.value.a };\n    }, toHex: function toHex(a, b, c, d) {\n      var e = this.toRGB(a, b, c, d);return this.rgbaIsTransparent(e) ? \"transparent\" : \"#\" + (1 << 24 | parseInt(e.r) << 16 | parseInt(e.g) << 8 | parseInt(e.b)).toString(16).substr(1);\n    }, toHSL: function toHSL(a, b, c, d) {\n      a = a || this.value.h, b = b || this.value.s, c = c || this.value.b, d = d || this.value.a;var e = a,\n          f = (2 - b) * c,\n          g = b * c;return g /= f > 0 && 1 >= f ? f : 2 - f, f /= 2, g > 1 && (g = 1), { h: isNaN(e) ? 0 : e, s: isNaN(g) ? 0 : g, l: isNaN(f) ? 0 : f, a: isNaN(d) ? 0 : d };\n    }, toAlias: function toAlias(a, b, c, d) {\n      var e = this.toHex(a, b, c, d);for (var f in this.colors) {\n        if (this.colors[f] === e) return f;\n      }return !1;\n    }, RGBtoHSB: function RGBtoHSB(a, b, c, d) {\n      a /= 255, b /= 255, c /= 255;var e, f, g, h;return g = Math.max(a, b, c), h = g - Math.min(a, b, c), e = 0 === h ? null : g === a ? (b - c) / h : g === b ? (c - a) / h + 2 : (a - b) / h + 4, e = (e + 360) % 6 * 60 / 360, f = 0 === h ? 0 : h / g, { h: this._sanitizeNumber(e), s: f, b: g, a: this._sanitizeNumber(d) };\n    }, HueToRGB: function HueToRGB(a, b, c) {\n      return 0 > c ? c += 1 : c > 1 && (c -= 1), 1 > 6 * c ? a + (b - a) * c * 6 : 1 > 2 * c ? b : 2 > 3 * c ? a + (b - a) * (2 / 3 - c) * 6 : a;\n    }, HSLtoRGB: function HSLtoRGB(a, b, c, d) {\n      0 > b && (b = 0);var e;e = .5 >= c ? c * (1 + b) : c + b - c * b;var f = 2 * c - e,\n          g = a + 1 / 3,\n          h = a,\n          i = a - 1 / 3,\n          j = Math.round(255 * this.HueToRGB(f, e, g)),\n          k = Math.round(255 * this.HueToRGB(f, e, h)),\n          l = Math.round(255 * this.HueToRGB(f, e, i));return [j, k, l, this._sanitizeNumber(d)];\n    }, toString: function toString(a) {\n      a = a || \"rgba\";var b = !1;switch (a) {case \"rgb\":\n          return b = this.toRGB(), this.rgbaIsTransparent(b) ? \"transparent\" : \"rgb(\" + b.r + \",\" + b.g + \",\" + b.b + \")\";case \"rgba\":\n          return b = this.toRGB(), \"rgba(\" + b.r + \",\" + b.g + \",\" + b.b + \",\" + b.a + \")\";case \"hsl\":\n          return b = this.toHSL(), \"hsl(\" + Math.round(360 * b.h) + \",\" + Math.round(100 * b.s) + \"%,\" + Math.round(100 * b.l) + \"%)\";case \"hsla\":\n          return b = this.toHSL(), \"hsla(\" + Math.round(360 * b.h) + \",\" + Math.round(100 * b.s) + \"%,\" + Math.round(100 * b.l) + \"%,\" + b.a + \")\";case \"hex\":\n          return this.toHex();case \"alias\":\n          return this.toAlias() || this.toHex();default:\n          return b;}\n    }, stringParsers: [{ re: /rgb\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*?\\)/, format: \"rgb\", parse: function parse(a) {\n        return [a[1], a[2], a[3], 1];\n      } }, { re: /rgb\\(\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*?\\)/, format: \"rgb\", parse: function parse(a) {\n        return [2.55 * a[1], 2.55 * a[2], 2.55 * a[3], 1];\n      } }, { re: /rgba\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/, format: \"rgba\", parse: function parse(a) {\n        return [a[1], a[2], a[3], a[4]];\n      } }, { re: /rgba\\(\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/, format: \"rgba\", parse: function parse(a) {\n        return [2.55 * a[1], 2.55 * a[2], 2.55 * a[3], a[4]];\n      } }, { re: /hsl\\(\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*?\\)/, format: \"hsl\", parse: function parse(a) {\n        return [a[1] / 360, a[2] / 100, a[3] / 100, a[4]];\n      } }, { re: /hsla\\(\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/, format: \"hsla\", parse: function parse(a) {\n        return [a[1] / 360, a[2] / 100, a[3] / 100, a[4]];\n      } }, { re: /#?([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/, format: \"hex\", parse: function parse(a) {\n        return [parseInt(a[1], 16), parseInt(a[2], 16), parseInt(a[3], 16), 1];\n      } }, { re: /#?([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/, format: \"hex\", parse: function parse(a) {\n        return [parseInt(a[1] + a[1], 16), parseInt(a[2] + a[2], 16), parseInt(a[3] + a[3], 16), 1];\n      } }], colorNameToHex: function colorNameToHex(a) {\n      return \"undefined\" != typeof this.colors[a.toLowerCase()] ? this.colors[a.toLowerCase()] : !1;\n    } };var c = { horizontal: !1, inline: !1, color: !1, format: !1, input: \"input\", container: !1, component: \".add-on, .input-group-addon\", sliders: { saturation: { maxLeft: 100, maxTop: 100, callLeft: \"setSaturation\", callTop: \"setBrightness\" }, hue: { maxLeft: 0, maxTop: 100, callLeft: !1, callTop: \"setHue\" }, alpha: { maxLeft: 0, maxTop: 100, callLeft: !1, callTop: \"setAlpha\" } }, slidersHorz: { saturation: { maxLeft: 100, maxTop: 100, callLeft: \"setSaturation\", callTop: \"setBrightness\" }, hue: { maxLeft: 100, maxTop: 0, callLeft: \"setHue\", callTop: !1 }, alpha: { maxLeft: 100, maxTop: 0, callLeft: \"setAlpha\", callTop: !1 } }, template: '<div class=\"colorpicker dropdown-menu\"><div class=\"colorpicker-saturation\"><i><b></b></i></div><div class=\"colorpicker-hue\"><i></i></div><div class=\"colorpicker-alpha\"><i></i></div><div class=\"colorpicker-color\"><div /></div><div class=\"colorpicker-selectors\"></div></div>', align: \"right\", customClass: null, colorSelectors: null },\n      d = function d(_d, e) {\n    if (this.element = a(_d).addClass(\"colorpicker-element\"), this.options = a.extend(!0, {}, c, this.element.data(), e), this.component = this.options.component, this.component = this.component !== !1 ? this.element.find(this.component) : !1, this.component && 0 === this.component.length && (this.component = !1), this.container = this.options.container === !0 ? this.element : this.options.container, this.container = this.container !== !1 ? a(this.container) : !1, this.input = this.element.is(\"input\") ? this.element : this.options.input ? this.element.find(this.options.input) : !1, this.input && 0 === this.input.length && (this.input = !1), this.color = new b(this.options.color !== !1 ? this.options.color : this.getValue(), this.options.colorSelectors), this.format = this.options.format !== !1 ? this.options.format : this.color.origFormat, this.picker = a(this.options.template), this.options.customClass && this.picker.addClass(this.options.customClass), this.options.inline ? this.picker.addClass(\"colorpicker-inline colorpicker-visible\") : this.picker.addClass(\"colorpicker-hidden\"), this.options.horizontal && this.picker.addClass(\"colorpicker-horizontal\"), (\"rgba\" === this.format || \"hsla\" === this.format || this.options.format === !1) && this.picker.addClass(\"colorpicker-with-alpha\"), \"right\" === this.options.align && this.picker.addClass(\"colorpicker-right\"), this.options.colorSelectors) {\n      var f = this;a.each(this.options.colorSelectors, function (b, c) {\n        var d = a(\"<i />\").css(\"background-color\", c).data(\"class\", b);d.click(function () {\n          f.setValue(a(this).css(\"background-color\"));\n        }), f.picker.find(\".colorpicker-selectors\").append(d);\n      }), this.picker.find(\".colorpicker-selectors\").show();\n    }this.picker.on(\"mousedown.colorpicker touchstart.colorpicker\", a.proxy(this.mousedown, this)), this.picker.appendTo(this.container ? this.container : a(\"body\")), this.input !== !1 && (this.input.on({ \"keyup.colorpicker\": a.proxy(this.keyup, this) }), this.input.on({ \"change.colorpicker\": a.proxy(this.change, this) }), this.component === !1 && this.element.on({ \"focus.colorpicker\": a.proxy(this.show, this) }), this.options.inline === !1 && this.element.on({ \"focusout.colorpicker\": a.proxy(this.hide, this) })), this.component !== !1 && this.component.on({ \"click.colorpicker\": a.proxy(this.show, this) }), this.input === !1 && this.component === !1 && this.element.on({ \"click.colorpicker\": a.proxy(this.show, this) }), this.input !== !1 && this.component !== !1 && \"color\" === this.input.attr(\"type\") && this.input.on({ \"click.colorpicker\": a.proxy(this.show, this), \"focus.colorpicker\": a.proxy(this.show, this) }), this.update(), a(a.proxy(function () {\n      this.element.trigger(\"create\");\n    }, this));\n  };d.Color = b, d.prototype = { constructor: d, destroy: function destroy() {\n      this.picker.remove(), this.element.removeData(\"colorpicker\").off(\".colorpicker\"), this.input !== !1 && this.input.off(\".colorpicker\"), this.component !== !1 && this.component.off(\".colorpicker\"), this.element.removeClass(\"colorpicker-element\"), this.element.trigger({ type: \"destroy\" });\n    }, reposition: function reposition() {\n      if (this.options.inline !== !1 || this.options.container) return !1;var a = this.container && this.container[0] !== document.body ? \"position\" : \"offset\",\n          b = this.component || this.element,\n          c = b[a]();\"right\" === this.options.align && (c.left -= this.picker.outerWidth() - b.outerWidth()), this.picker.css({ top: c.top + b.outerHeight(), left: c.left });\n    }, show: function show(b) {\n      return this.isDisabled() ? !1 : (this.picker.addClass(\"colorpicker-visible\").removeClass(\"colorpicker-hidden\"), this.reposition(), a(window).on(\"resize.colorpicker\", a.proxy(this.reposition, this)), !b || this.hasInput() && \"color\" !== this.input.attr(\"type\") || b.stopPropagation && b.preventDefault && (b.stopPropagation(), b.preventDefault()), this.options.inline === !1 && a(window.document).on({ \"mousedown.colorpicker\": a.proxy(this.hide, this) }), void this.element.trigger({ type: \"showPicker\", color: this.color }));\n    }, hide: function hide() {\n      this.picker.addClass(\"colorpicker-hidden\").removeClass(\"colorpicker-visible\"), a(window).off(\"resize.colorpicker\", this.reposition), a(document).off({ \"mousedown.colorpicker\": this.hide }), this.update(), this.element.trigger({ type: \"hidePicker\", color: this.color });\n    }, updateData: function updateData(a) {\n      return a = a || this.color.toString(this.format), this.element.data(\"color\", a), a;\n    }, updateInput: function updateInput(a) {\n      if (a = a || this.color.toString(this.format), this.input !== !1) {\n        if (this.options.colorSelectors) {\n          var c = new b(a, this.options.colorSelectors),\n              d = c.toAlias();\"undefined\" != typeof this.options.colorSelectors[d] && (a = d);\n        }this.input.prop(\"value\", a);\n      }return a;\n    }, updatePicker: function updatePicker(a) {\n      void 0 !== a && (this.color = new b(a, this.options.colorSelectors));var c = this.options.horizontal === !1 ? this.options.sliders : this.options.slidersHorz,\n          d = this.picker.find(\"i\");return 0 !== d.length ? (this.options.horizontal === !1 ? (c = this.options.sliders, d.eq(1).css(\"top\", c.hue.maxTop * (1 - this.color.value.h)).end().eq(2).css(\"top\", c.alpha.maxTop * (1 - this.color.value.a))) : (c = this.options.slidersHorz, d.eq(1).css(\"left\", c.hue.maxLeft * (1 - this.color.value.h)).end().eq(2).css(\"left\", c.alpha.maxLeft * (1 - this.color.value.a))), d.eq(0).css({ top: c.saturation.maxTop - this.color.value.b * c.saturation.maxTop, left: this.color.value.s * c.saturation.maxLeft }), this.picker.find(\".colorpicker-saturation\").css(\"backgroundColor\", this.color.toHex(this.color.value.h, 1, 1, 1)), this.picker.find(\".colorpicker-alpha\").css(\"backgroundColor\", this.color.toHex()), this.picker.find(\".colorpicker-color, .colorpicker-color div\").css(\"backgroundColor\", this.color.toString(this.format)), a) : void 0;\n    }, updateComponent: function updateComponent(a) {\n      if (a = a || this.color.toString(this.format), this.component !== !1) {\n        var b = this.component.find(\"i\").eq(0);b.length > 0 ? b.css({ backgroundColor: a }) : this.component.css({ backgroundColor: a });\n      }return a;\n    }, update: function update(a) {\n      var b;return (this.getValue(!1) !== !1 || a === !0) && (b = this.updateComponent(), this.updateInput(b), this.updateData(b), this.updatePicker()), b;\n    }, setValue: function setValue(a) {\n      this.color = new b(a, this.options.colorSelectors), this.update(!0), this.element.trigger({ type: \"changeColor\", color: this.color, value: a });\n    }, getValue: function getValue(a) {\n      a = void 0 === a ? \"#000000\" : a;var b;return b = this.hasInput() ? this.input.val() : this.element.data(\"color\"), (void 0 === b || \"\" === b || null === b) && (b = a), b;\n    }, hasInput: function hasInput() {\n      return this.input !== !1;\n    }, isDisabled: function isDisabled() {\n      return this.hasInput() ? this.input.prop(\"disabled\") === !0 : !1;\n    }, disable: function disable() {\n      return this.hasInput() ? (this.input.prop(\"disabled\", !0), this.element.trigger({ type: \"disable\", color: this.color, value: this.getValue() }), !0) : !1;\n    }, enable: function enable() {\n      return this.hasInput() ? (this.input.prop(\"disabled\", !1), this.element.trigger({ type: \"enable\", color: this.color, value: this.getValue() }), !0) : !1;\n    }, currentSlider: null, mousePointer: { left: 0, top: 0 }, mousedown: function mousedown(b) {\n      b.pageX || b.pageY || !b.originalEvent || (b.pageX = b.originalEvent.touches[0].pageX, b.pageY = b.originalEvent.touches[0].pageY), b.stopPropagation(), b.preventDefault();var c = a(b.target),\n          d = c.closest(\"div\"),\n          e = this.options.horizontal ? this.options.slidersHorz : this.options.sliders;if (!d.is(\".colorpicker\")) {\n        if (d.is(\".colorpicker-saturation\")) this.currentSlider = a.extend({}, e.saturation);else if (d.is(\".colorpicker-hue\")) this.currentSlider = a.extend({}, e.hue);else {\n          if (!d.is(\".colorpicker-alpha\")) return !1;this.currentSlider = a.extend({}, e.alpha);\n        }var f = d.offset();this.currentSlider.guide = d.find(\"i\")[0].style, this.currentSlider.left = b.pageX - f.left, this.currentSlider.top = b.pageY - f.top, this.mousePointer = { left: b.pageX, top: b.pageY }, a(document).on({ \"mousemove.colorpicker\": a.proxy(this.mousemove, this), \"touchmove.colorpicker\": a.proxy(this.mousemove, this), \"mouseup.colorpicker\": a.proxy(this.mouseup, this), \"touchend.colorpicker\": a.proxy(this.mouseup, this) }).trigger(\"mousemove\");\n      }return !1;\n    }, mousemove: function mousemove(a) {\n      a.pageX || a.pageY || !a.originalEvent || (a.pageX = a.originalEvent.touches[0].pageX, a.pageY = a.originalEvent.touches[0].pageY), a.stopPropagation(), a.preventDefault();var b = Math.max(0, Math.min(this.currentSlider.maxLeft, this.currentSlider.left + ((a.pageX || this.mousePointer.left) - this.mousePointer.left))),\n          c = Math.max(0, Math.min(this.currentSlider.maxTop, this.currentSlider.top + ((a.pageY || this.mousePointer.top) - this.mousePointer.top)));return this.currentSlider.guide.left = b + \"px\", this.currentSlider.guide.top = c + \"px\", this.currentSlider.callLeft && this.color[this.currentSlider.callLeft].call(this.color, b / this.currentSlider.maxLeft), this.currentSlider.callTop && this.color[this.currentSlider.callTop].call(this.color, c / this.currentSlider.maxTop), \"setAlpha\" === this.currentSlider.callTop && this.options.format === !1 && (1 !== this.color.value.a ? (this.format = \"rgba\", this.color.origFormat = \"rgba\") : (this.format = \"hex\", this.color.origFormat = \"hex\")), this.update(!0), this.element.trigger({ type: \"changeColor\", color: this.color }), !1;\n    }, mouseup: function mouseup(b) {\n      return b.stopPropagation(), b.preventDefault(), a(document).off({ \"mousemove.colorpicker\": this.mousemove, \"touchmove.colorpicker\": this.mousemove, \"mouseup.colorpicker\": this.mouseup, \"touchend.colorpicker\": this.mouseup }), !1;\n    }, change: function change(a) {\n      this.keyup(a);\n    }, keyup: function keyup(a) {\n      38 === a.keyCode ? (this.color.value.a < 1 && (this.color.value.a = Math.round(100 * (this.color.value.a + .01)) / 100), this.update(!0)) : 40 === a.keyCode ? (this.color.value.a > 0 && (this.color.value.a = Math.round(100 * (this.color.value.a - .01)) / 100), this.update(!0)) : (this.color = new b(this.input.val(), this.options.colorSelectors), this.color.origFormat && this.options.format === !1 && (this.format = this.color.origFormat), this.getValue(!1) !== !1 && (this.updateData(), this.updateComponent(), this.updatePicker())), this.element.trigger({ type: \"changeColor\", color: this.color, value: this.input.val() });\n    } }, a.colorpicker = d, a.fn.colorpicker = function (b) {\n    var c,\n        e = arguments,\n        f = this.each(function () {\n      var f = a(this),\n          g = f.data(\"colorpicker\"),\n          h = \"object\" == (typeof b === \"undefined\" ? \"undefined\" : _typeof(b)) ? b : {};g || \"string\" == typeof b ? \"string\" == typeof b && (c = g[b].apply(g, Array.prototype.slice.call(e, 1))) : f.data(\"colorpicker\", new d(this, h));\n    });return \"getValue\" === b ? c : f;\n  }, a.fn.colorpicker.constructor = d;\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/components/widgets/popup/vendor/bootstrap-colorpicker.min.js\n// module id = 2348\n// module chunks = 32\n\n//# sourceURL=webpack:///./js/components/widgets/popup/vendor/bootstrap-colorpicker.min.js?");

/***/ }),

/***/ 2349:
/***/ (function(module, exports, __webpack_require__) {

eval("(function (global, factory) {\n\t true ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.anchorme = factory());\n}(this, (function () { 'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction countOccurrences(string, subString, allowOverlapping) {\n\treturn string.split(subString).length - 1;\n}\n\nfunction removeNotationEnds(str) {\n\tfunction removeThis(str, char) {\n\t\tif (str.endsWith(char)) {\n\t\t\tstr = str.substring(0, str.length - 1);\n\t\t\treturn removeThis(str, char);\n\t\t} else return str;\n\t}\n\n\tif (str.endsWith(\"?\")) str = removeThis(str, \"?\");else if (str.endsWith(\";\")) str = removeThis(str, \";\");else if (str.endsWith(\":\")) str = removeThis(str, \":\");else if (str.endsWith(\",\")) str = removeThis(str, \",\");else if (str.endsWith(\".\")) str = removeThis(str, \".\");\n\n\treturn str;\n}\n\nfunction defaultOptions(options) {\n\tif (!options) {\n\t\toptions = {\n\t\t\t\"attributes\": false,\n\t\t\t\"html\": true,\n\t\t\tips: true,\n\t\t\temails: true,\n\t\t\turls: true,\n\t\t\tTLDs: 20,\n\t\t\ttruncate: 0,\n\t\t\tdefaultProtocol: \"http://\"\n\t\t};\n\t}\n\n\tif (_typeof(options.attributes) !== \"object\") options.attributes = false;\n\tif (typeof options.html !== \"boolean\") options.html = true;\n\tif (typeof options.ips !== \"boolean\") options.ips = true;\n\tif (typeof options.emails !== \"boolean\") options.emails = true;\n\tif (typeof options.urls !== \"boolean\") options.urls = true;\n\tif (typeof options.defaultProtocol !== \"string\") options.defaultProtocol = \"http://\";\n\tif (typeof options.truncate !== \"number\") options.truncate = 0;\n\treturn options;\n}\n\nfunction isInt(value) {\n\tif (typeof value === \"string\" && value.indexOf(\".\") > -1) return false;\n\tif (typeof value === \"number\" && Math.round(value) !== value) return false;else if (value === \"\") return false;else if (isNaN(value * 1)) return false;else return true;\n}\n\nfunction isPort(value) {\n\tif (!isInt(value)) return false;\n\tif (value * 1 > 65535) return false;else return true;\n}\n\nvar allowedInEmailName = \"abcdefghijklmnopqrstuvwxyz0123456789!#$%&'*+-/=?^_`{|}~.\";\nvar allowedInHost = \"abcdefghijklmnopqrstuvwxyz0123456789-.:\";\nvar urlAllowed = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~:/?#[]@!$&'()*+,;=%\";\nvar tlds = ['.com', '.net', '.org', '.edu', '.gov', '.uk', '.ca', '.de', '.jp', '.fr', '.au', '.us', '.ru', '.ch', '.it', '.nl', '.se', '.no', '.es', '.io', '.aaa', '.aarp', '.abarth', '.abb', '.abbott', '.abbvie', '.abc', '.able', '.abogado', '.abudhabi', '.ac', '.academy', '.accenture', '.accountant', '.accountants', '.aco', '.active', '.actor', '.ad', '.adac', '.ads', '.adult', '.ae', '.aeg', '.aero', '.aetna', '.af', '.afamilycompany', '.afl', '.ag', '.agakhan', '.agency', '.ai', '.aig', '.aigo', '.airbus', '.airforce', '.airtel', '.akdn', '.al', '.alfaromeo', '.alibaba', '.alipay', '.allfinanz', '.allstate', '.ally', '.alsace', '.alstom', '.am', '.americanexpress', '.americanfamily', '.amex', '.amfam', '.amica', '.amsterdam', '.analytics', '.android', '.anquan', '.anz', '.ao', '.apartments', '.app', '.apple', '.aq', '.aquarelle', '.ar', '.aramco', '.archi', '.army', '.arpa', '.art', '.arte', '.as', '.asda', '.asia', '.associates', '.at', '.athleta', '.attorney', '.au', '.auction', '.audi', '.audible', '.audio', '.auspost', '.author', '.auto', '.autos', '.avianca', '.aw', '.aws', '.ax', '.axa', '.az', '.azure', '.ba', '.baby', '.baidu', '.banamex', '.bananarepublic', '.band', '.bank', '.bar', '.barcelona', '.barclaycard', '.barclays', '.barefoot', '.bargains', '.bauhaus', '.bayern', '.bb', '.bbc', '.bbt', '.bbva', '.bcg', '.bcn', '.bd', '.be', '.beats', '.beauty', '.beer', '.bentley', '.berlin', '.best', '.bestbuy', '.bet', '.bf', '.bg', '.bh', '.bharti', '.bi', '.bible', '.bid', '.bike', '.bing', '.bingo', '.bio', '.biz', '.bj', '.black', '.blackfriday', '.blanco', '.blockbuster', '.blog', '.bloomberg', '.blue', '.bm', '.bms', '.bmw', '.bn', '.bnl', '.bnpparibas', '.bo', '.boats', '.boehringer', '.bofa', '.bom', '.bond', '.boo', '.book', '.booking', '.boots', '.bosch', '.bostik', '.bot', '.boutique', '.br', '.bradesco', '.bridgestone', '.broadway', '.broker', '.brother', '.brussels', '.bs', '.bt', '.budapest', '.bugatti', '.build', '.builders', '.business', '.buy', '.buzz', '.bv', '.bw', '.by', '.bz', '.bzh', '.ca', '.cab', '.cafe', '.cal', '.call', '.calvinklein', '.cam', '.camera', '.camp', '.cancerresearch', '.canon', '.capetown', '.capital', '.capitalone', '.car', '.caravan', '.cards', '.care', '.career', '.careers', '.cars', '.cartier', '.casa', '.cash', '.casino', '.cat', '.catering', '.cba', '.cbn', '.cbre', '.cbs', '.cc', '.cd', '.ceb', '.center', '.ceo', '.cern', '.cf', '.cfa', '.cfd', '.cg', '.ch', '.chanel', '.channel', '.chase', '.chat', '.cheap', '.chintai', '.chloe', '.christmas', '.chrome', '.chrysler', '.church', '.ci', '.cipriani', '.circle', '.cisco', '.citadel', '.citi', '.citic', '.city', '.cityeats', '.ck', '.cl', '.claims', '.cleaning', '.click', '.clinic', '.clinique', '.clothing', '.cloud', '.club', '.clubmed', '.cm', '.cn', '.co', '.coach', '.codes', '.coffee', '.college', '.cologne', '.comcast', '.commbank', '.community', '.company', '.compare', '.computer', '.comsec', '.condos', '.construction', '.consulting', '.contact', '.contractors', '.cooking', '.cookingchannel', '.cool', '.coop', '.corsica', '.country', '.coupon', '.coupons', '.courses', '.cr', '.credit', '.creditcard', '.creditunion', '.cricket', '.crown', '.crs', '.cruises', '.csc', '.cu', '.cuisinella', '.cv', '.cw', '.cx', '.cy', '.cymru', '.cyou', '.cz', '.dabur', '.dad', '.dance', '.date', '.dating', '.datsun', '.day', '.dclk', '.dds', '.de', '.deal', '.dealer', '.deals', '.degree', '.delivery', '.dell', '.deloitte', '.delta', '.democrat', '.dental', '.dentist', '.desi', '.design', '.dev', '.dhl', '.diamonds', '.diet', '.digital', '.direct', '.directory', '.discount', '.discover', '.dish', '.diy', '.dj', '.dk', '.dm', '.dnp', '.do', '.docs', '.doctor', '.dodge', '.dog', '.doha', '.domains', '.dot', '.download', '.drive', '.dtv', '.dubai', '.duck', '.dunlop', '.duns', '.dupont', '.durban', '.dvag', '.dvr', '.dz', '.earth', '.eat', '.ec', '.eco', '.edeka', '.edu', '.education', '.ee', '.eg', '.email', '.emerck', '.energy', '.engineer', '.engineering', '.enterprises', '.epost', '.epson', '.equipment', '.er', '.ericsson', '.erni', '.es', '.esq', '.estate', '.esurance', '.et', '.eu', '.eurovision', '.eus', '.events', '.everbank', '.exchange', '.expert', '.exposed', '.express', '.extraspace', '.fage', '.fail', '.fairwinds', '.faith', '.family', '.fan', '.fans', '.farm', '.farmers', '.fashion', '.fast', '.fedex', '.feedback', '.ferrari', '.ferrero', '.fi', '.fiat', '.fidelity', '.fido', '.film', '.final', '.finance', '.financial', '.fire', '.firestone', '.firmdale', '.fish', '.fishing', '.fit', '.fitness', '.fj', '.fk', '.flickr', '.flights', '.flir', '.florist', '.flowers', '.fly', '.fm', '.fo', '.foo', '.foodnetwork', '.football', '.ford', '.forex', '.forsale', '.forum', '.foundation', '.fox', '.fr', '.fresenius', '.frl', '.frogans', '.frontdoor', '.frontier', '.ftr', '.fujitsu', '.fujixerox', '.fund', '.furniture', '.futbol', '.fyi', '.ga', '.gal', '.gallery', '.gallo', '.gallup', '.game', '.games', '.gap', '.garden', '.gb', '.gbiz', '.gd', '.gdn', '.ge', '.gea', '.gent', '.genting', '.george', '.gf', '.gg', '.ggee', '.gh', '.gi', '.gift', '.gifts', '.gives', '.giving', '.gl', '.glade', '.glass', '.gle', '.global', '.globo', '.gm', '.gmail', '.gmbh', '.gmo', '.gmx', '.gn', '.godaddy', '.gold', '.goldpoint', '.golf', '.goo', '.goodhands', '.goodyear', '.goog', '.google', '.gop', '.got', '.gov', '.gp', '.gq', '.gr', '.grainger', '.graphics', '.gratis', '.green', '.gripe', '.group', '.gs', '.gt', '.gu', '.guardian', '.gucci', '.guge', '.guide', '.guitars', '.guru', '.gw', '.gy', '.hamburg', '.hangout', '.haus', '.hbo', '.hdfc', '.hdfcbank', '.health', '.healthcare', '.help', '.helsinki', '.here', '.hermes', '.hgtv', '.hiphop', '.hisamitsu', '.hitachi', '.hiv', '.hk', '.hkt', '.hm', '.hn', '.hockey', '.holdings', '.holiday', '.homedepot', '.homegoods', '.homes', '.homesense', '.honda', '.honeywell', '.horse', '.host', '.hosting', '.hot', '.hoteles', '.hotmail', '.house', '.how', '.hr', '.hsbc', '.ht', '.htc', '.hu', '.hughes', '.hyatt', '.hyundai', '.ibm', '.icbc', '.ice', '.icu', '.id', '.ie', '.ieee', '.ifm', '.iinet', '.ikano', '.il', '.im', '.imamat', '.imdb', '.immo', '.immobilien', '.in', '.industries', '.infiniti', '.info', '.ing', '.ink', '.institute', '.insurance', '.insure', '.int', '.intel', '.international', '.intuit', '.investments', '.io', '.ipiranga', '.iq', '.ir', '.irish', '.is', '.iselect', '.ismaili', '.ist', '.istanbul', '.it', '.itau', '.itv', '.iwc', '.jaguar', '.java', '.jcb', '.jcp', '.je', '.jeep', '.jetzt', '.jewelry', '.jlc', '.jll', '.jm', '.jmp', '.jnj', '.jo', '.jobs', '.joburg', '.jot', '.joy', '.jp', '.jpmorgan', '.jprs', '.juegos', '.juniper', '.kaufen', '.kddi', '.ke', '.kerryhotels', '.kerrylogistics', '.kerryproperties', '.kfh', '.kg', '.kh', '.ki', '.kia', '.kim', '.kinder', '.kindle', '.kitchen', '.kiwi', '.km', '.kn', '.koeln', '.komatsu', '.kosher', '.kp', '.kpmg', '.kpn', '.kr', '.krd', '.kred', '.kuokgroup', '.kw', '.ky', '.kyoto', '.kz', '.la', '.lacaixa', '.ladbrokes', '.lamborghini', '.lamer', '.lancaster', '.lancia', '.lancome', '.land', '.landrover', '.lanxess', '.lasalle', '.lat', '.latino', '.latrobe', '.law', '.lawyer', '.lb', '.lc', '.lds', '.lease', '.leclerc', '.lefrak', '.legal', '.lego', '.lexus', '.lgbt', '.li', '.liaison', '.lidl', '.life', '.lifeinsurance', '.lifestyle', '.lighting', '.like', '.lilly', '.limited', '.limo', '.lincoln', '.linde', '.link', '.lipsy', '.live', '.living', '.lixil', '.lk', '.loan', '.loans', '.locker', '.locus', '.loft', '.lol', '.london', '.lotte', '.lotto', '.love', '.lpl', '.lplfinancial', '.lr', '.ls', '.lt', '.ltd', '.ltda', '.lu', '.lundbeck', '.lupin', '.luxe', '.luxury', '.lv', '.ly', '.ma', '.macys', '.madrid', '.maif', '.maison', '.makeup', '.man', '.management', '.mango', '.market', '.marketing', '.markets', '.marriott', '.marshalls', '.maserati', '.mattel', '.mba', '.mc', '.mcd', '.mcdonalds', '.mckinsey', '.md', '.me', '.med', '.media', '.meet', '.melbourne', '.meme', '.memorial', '.men', '.menu', '.meo', '.metlife', '.mg', '.mh', '.miami', '.microsoft', '.mil', '.mini', '.mint', '.mit', '.mitsubishi', '.mk', '.ml', '.mlb', '.mls', '.mm', '.mma', '.mn', '.mo', '.mobi', '.mobily', '.moda', '.moe', '.moi', '.mom', '.monash', '.money', '.monster', '.montblanc', '.mopar', '.mormon', '.mortgage', '.moscow', '.motorcycles', '.mov', '.movie', '.movistar', '.mp', '.mq', '.mr', '.ms', '.msd', '.mt', '.mtn', '.mtpc', '.mtr', '.mu', '.museum', '.mutual', '.mutuelle', '.mv', '.mw', '.mx', '.my', '.mz', '.na', '.nab', '.nadex', '.nagoya', '.name', '.nationwide', '.natura', '.navy', '.nba', '.nc', '.ne', '.nec', '.netbank', '.netflix', '.network', '.neustar', '.new', '.news', '.next', '.nextdirect', '.nexus', '.nf', '.nfl', '.ng', '.ngo', '.nhk', '.ni', '.nico', '.nike', '.nikon', '.ninja', '.nissan', '.nissay', '.nl', '.no', '.nokia', '.northwesternmutual', '.norton', '.now', '.nowruz', '.nowtv', '.np', '.nr', '.nra', '.nrw', '.ntt', '.nu', '.nyc', '.nz', '.obi', '.observer', '.off', '.office', '.okinawa', '.olayan', '.olayangroup', '.oldnavy', '.ollo', '.om', '.omega', '.one', '.ong', '.onl', '.online', '.onyourside', '.ooo', '.open', '.oracle', '.orange', '.org', '.organic', '.orientexpress', '.origins', '.osaka', '.otsuka', '.ott', '.ovh', '.pa', '.page', '.pamperedchef', '.panasonic', '.panerai', '.paris', '.pars', '.partners', '.parts', '.party', '.passagens', '.pay', '.pccw', '.pe', '.pet', '.pf', '.pfizer', '.pg', '.ph', '.pharmacy', '.philips', '.photo', '.photography', '.photos', '.physio', '.piaget', '.pics', '.pictet', '.pictures', '.pid', '.pin', '.ping', '.pink', '.pioneer', '.pizza', '.pk', '.pl', '.place', '.play', '.playstation', '.plumbing', '.plus', '.pm', '.pn', '.pnc', '.pohl', '.poker', '.politie', '.porn', '.post', '.pr', '.pramerica', '.praxi', '.press', '.prime', '.pro', '.prod', '.productions', '.prof', '.progressive', '.promo', '.properties', '.property', '.protection', '.pru', '.prudential', '.ps', '.pt', '.pub', '.pw', '.pwc', '.py', '.qa', '.qpon', '.quebec', '.quest', '.qvc', '.racing', '.raid', '.re', '.read', '.realestate', '.realtor', '.realty', '.recipes', '.red', '.redstone', '.redumbrella', '.rehab', '.reise', '.reisen', '.reit', '.ren', '.rent', '.rentals', '.repair', '.report', '.republican', '.rest', '.restaurant', '.review', '.reviews', '.rexroth', '.rich', '.richardli', '.ricoh', '.rightathome', '.rio', '.rip', '.ro', '.rocher', '.rocks', '.rodeo', '.rogers', '.room', '.rs', '.rsvp', '.ru', '.ruhr', '.run', '.rw', '.rwe', '.ryukyu', '.sa', '.saarland', '.safe', '.safety', '.sakura', '.sale', '.salon', '.samsclub', '.samsung', '.sandvik', '.sandvikcoromant', '.sanofi', '.sap', '.sapo', '.sarl', '.sas', '.save', '.saxo', '.sb', '.sbi', '.sbs', '.sc', '.sca', '.scb', '.schaeffler', '.schmidt', '.scholarships', '.school', '.schule', '.schwarz', '.science', '.scjohnson', '.scor', '.scot', '.sd', '.se', '.seat', '.secure', '.security', '.seek', '.select', '.sener', '.services', '.ses', '.seven', '.sew', '.sex', '.sexy', '.sfr', '.sg', '.sh', '.shangrila', '.sharp', '.shaw', '.shell', '.shia', '.shiksha', '.shoes', '.shop', '.shopping', '.shouji', '.show', '.showtime', '.shriram', '.si', '.silk', '.sina', '.singles', '.site', '.sj', '.sk', '.ski', '.skin', '.sky', '.skype', '.sl', '.sling', '.sm', '.smart', '.smile', '.sn', '.sncf', '.so', '.soccer', '.social', '.softbank', '.software', '.sohu', '.solar', '.solutions', '.song', '.sony', '.soy', '.space', '.spiegel', '.spot', '.spreadbetting', '.sr', '.srl', '.srt', '.st', '.stada', '.staples', '.star', '.starhub', '.statebank', '.statefarm', '.statoil', '.stc', '.stcgroup', '.stockholm', '.storage', '.store', '.stream', '.studio', '.study', '.style', '.su', '.sucks', '.supplies', '.supply', '.support', '.surf', '.surgery', '.suzuki', '.sv', '.swatch', '.swiftcover', '.swiss', '.sx', '.sy', '.sydney', '.symantec', '.systems', '.sz', '.tab', '.taipei', '.talk', '.taobao', '.target', '.tatamotors', '.tatar', '.tattoo', '.tax', '.taxi', '.tc', '.tci', '.td', '.tdk', '.team', '.tech', '.technology', '.tel', '.telecity', '.telefonica', '.temasek', '.tennis', '.teva', '.tf', '.tg', '.th', '.thd', '.theater', '.theatre', '.tiaa', '.tickets', '.tienda', '.tiffany', '.tips', '.tires', '.tirol', '.tj', '.tjmaxx', '.tjx', '.tk', '.tkmaxx', '.tl', '.tm', '.tmall', '.tn', '.to', '.today', '.tokyo', '.tools', '.top', '.toray', '.toshiba', '.total', '.tours', '.town', '.toyota', '.toys', '.tr', '.trade', '.trading', '.training', '.travel', '.travelchannel', '.travelers', '.travelersinsurance', '.trust', '.trv', '.tt', '.tube', '.tui', '.tunes', '.tushu', '.tv', '.tvs', '.tw', '.tz', '.ua', '.ubank', '.ubs', '.uconnect', '.ug', '.uk', '.unicom', '.university', '.uno', '.uol', '.ups', '.us', '.uy', '.uz', '.va', '.vacations', '.vana', '.vanguard', '.vc', '.ve', '.vegas', '.ventures', '.verisign', '.versicherung', '.vet', '.vg', '.vi', '.viajes', '.video', '.vig', '.viking', '.villas', '.vin', '.vip', '.virgin', '.visa', '.vision', '.vista', '.vistaprint', '.viva', '.vivo', '.vlaanderen', '.vn', '.vodka', '.volkswagen', '.vote', '.voting', '.voto', '.voyage', '.vu', '.vuelos', '.wales', '.walmart', '.walter', '.wang', '.wanggou', '.warman', '.watch', '.watches', '.weather', '.weatherchannel', '.webcam', '.weber', '.website', '.wed', '.wedding', '.weibo', '.weir', '.wf', '.whoswho', '.wien', '.wiki', '.williamhill', '.win', '.windows', '.wine', '.winners', '.wme', '.wolterskluwer', '.woodside', '.work', '.works', '.world', '.wow', '.ws', '.wtc', '.wtf', '.xbox', '.xerox', '.xfinity', '.xihuan', '.xin', '.xn--11b4c3d', '.xn--1ck2e1b', '.xn--1qqw23a', '.xn--30rr7y', '.xn--3bst00m', '.xn--3ds443g', '.xn--3e0b707e', '.xn--3oq18vl8pn36a', '.xn--3pxu8k', '.xn--42c2d9a', '.xn--45brj9c', '.xn--45q11c', '.xn--4gbrim', '.xn--54b7fta0cc', '.xn--55qw42g', '.xn--55qx5d', '.xn--5su34j936bgsg', '.xn--5tzm5g', '.xn--6frz82g', '.xn--6qq986b3xl', '.xn--80adxhks', '.xn--80ao21a', '.xn--80asehdb', '.xn--80aswg', '.xn--8y0a063a', '.xn--90a3ac', '.xn--90ae', '.xn--90ais', '.xn--9dbq2a', '.xn--9et52u', '.xn--9krt00a', '.xn--b4w605ferd', '.xn--bck1b9a5dre4c', '.xn--c1avg', '.xn--c2br7g', '.xn--cck2b3b', '.xn--cg4bki', '.xn--clchc0ea0b2g2a9gcd', '.xn--czr694b', '.xn--czrs0t', '.xn--czru2d', '.xn--d1acj3b', '.xn--d1alf', '.xn--e1a4c', '.xn--eckvdtc9d', '.xn--efvy88h', '.xn--estv75g', '.xn--fct429k', '.xn--fhbei', '.xn--fiq228c5hs', '.xn--fiq64b', '.xn--fiqs8s', '.xn--fiqz9s', '.xn--fjq720a', '.xn--flw351e', '.xn--fpcrj9c3d', '.xn--fzc2c9e2c', '.xn--fzys8d69uvgm', '.xn--g2xx48c', '.xn--gckr3f0f', '.xn--gecrj9c', '.xn--gk3at1e', '.xn--h2brj9c', '.xn--hxt814e', '.xn--i1b6b1a6a2e', '.xn--imr513n', '.xn--io0a7i', '.xn--j1aef', '.xn--j1amh', '.xn--j6w193g', '.xn--jlq61u9w7b', '.xn--jvr189m', '.xn--kcrx77d1x4a', '.xn--kprw13d', '.xn--kpry57d', '.xn--kpu716f', '.xn--kput3i', '.xn--l1acc', '.xn--lgbbat1ad8j', '.xn--mgb9awbf', '.xn--mgba3a3ejt', '.xn--mgba3a4f16a', '.xn--mgba7c0bbn0a', '.xn--mgbaam7a8h', '.xn--mgbab2bd', '.xn--mgbayh7gpa', '.xn--mgbb9fbpob', '.xn--mgbbh1a71e', '.xn--mgbc0a9azcg', '.xn--mgbca7dzdo', '.xn--mgberp4a5d4ar', '.xn--mgbpl2fh', '.xn--mgbt3dhd', '.xn--mgbtx2b', '.xn--mgbx4cd0ab', '.xn--mix891f', '.xn--mk1bu44c', '.xn--mxtq1m', '.xn--ngbc5azd', '.xn--ngbe9e0a', '.xn--node', '.xn--nqv7f', '.xn--nqv7fs00ema', '.xn--nyqy26a', '.xn--o3cw4h', '.xn--ogbpf8fl', '.xn--p1acf', '.xn--p1ai', '.xn--pbt977c', '.xn--pgbs0dh', '.xn--pssy2u', '.xn--q9jyb4c', '.xn--qcka1pmc', '.xn--qxam', '.xn--rhqv96g', '.xn--rovu88b', '.xn--s9brj9c', '.xn--ses554g', '.xn--t60b56a', '.xn--tckwe', '.xn--unup4y', '.xn--vermgensberater-ctb', '.xn--vermgensberatung-pwb', '.xn--vhquv', '.xn--vuq861b', '.xn--w4r85el8fhu5dnra', '.xn--w4rs40l', '.xn--wgbh1c', '.xn--wgbl6a', '.xn--xhq521b', '.xn--xkc2al3hye2a', '.xn--xkc2dl3a5ee0h', '.xn--y9a3aq', '.xn--yfro4i67o', '.xn--ygbi2ammx', '.xn--zfr164b', '.xperia', '.xxx', '.xyz', '.yachts', '.yahoo', '.yamaxun', '.yandex', '.ye', '.yodobashi', '.yoga', '.yokohama', '.you', '.youtube', '.yt', '.yun', '.za', '.zappos', '.zara', '.zero', '.zip', '.zippo', '.zm', '.zone', '.zuerich', '.zw'];\nvar htmlAttrs = [\"src=\", \"href=\", \"cite=\", \"formaction=\", \"icon=\", \"manifest=\", \"poster=\", \"codebase=\", \"background=\", \"profile=\", \"usemap=\"];\n\nvar emailChecker = function (str) {\n\tif (countOccurrences(str, \"@\") < 1) return false;\n\n\t// normalize\n\tstr = str.toLowerCase();\n\tstr = removeNotationEnds(str);\n\n\tvar emailName = str.substring(0, str.indexOf(\"@\"));\n\tvar emailServer = str.substr(str.indexOf(\"@\") + 1);\n\n\t// validate the part before @\n\tif (emailName.split(\"\").filter(function (c) {\n\t\treturn ~allowedInEmailName.indexOf(c);\n\t}).length !== emailName.length) return false;\n\t// validate the part after @\n\tif (emailServer.split(\"\").filter(function (c) {\n\t\treturn ~allowedInHost.indexOf(c);\n\t}).length !== emailServer.length) return false;\n\t// validate the tld\n\tif (emailServer.endsWith(\".com\")) return true; // for performance\n\tif (!~tlds.indexOf(emailServer.substr(emailServer.lastIndexOf(\".\")))) return false;\n\n\treturn true;\n};\n\nvar ipChecker = function (str) {\n\n\tif (countOccurrences(str, \".\") < 3) return false;\n\n\t// normalize it\t\n\tstr = str.toLowerCase();\n\tstr = removeNotationEnds(str);\n\n\tvar IPArray = str.split(\".\"),\n\t    oc1 = IPArray[0],\n\t    oc2 = IPArray[1],\n\t    oc3 = IPArray[2];\n\n\t// validate oc1,oc2,oc3\n\tif (!isInt(oc1) || oc1 > 255 || oc1 < 0) return false;\n\tif (!isInt(oc2) || oc2 > 255 || oc2 < 0) return false;\n\tif (!isInt(oc3) || oc3 > 255 || oc3 < 0) return false;\n\n\t/**\r\n  * the IPArray[3] might be a number ..\r\n  * might be just a number\t\t\t\t\t\t0\r\n  * might be a number with port \t\t\t\t\t0:3000\r\n  * might be a number with slash \t\t\t\t0/route\r\n  * might be a number with port and slash \t\t0:3000/one\r\n **/\n\n\tvar lastBit = IPArray[3],\n\t    oc4,\n\t    port,\n\t    route;\n\n\tif (!lastBit) return false;\n\n\t// one: route\n\tif (~lastBit.indexOf(\"/\")) {\n\t\tvar ocAndRoute = lastBit.split(\"/\");\n\t\toc4 = ocAndRoute[0];\n\t\troute = ocAndRoute[1];\n\t}\n\n\t// both\n\tif (~lastBit.indexOf(\":\") && ~lastBit.indexOf(\"/\") && lastBit.indexOf(\":\") < lastBit.indexOf(\"/\")) {\n\t\tvar aArr = lastBit.split(\":\");\n\t\tvar bArr = aArr[1].split(\"/\");\n\t\toc4 = aArr[0];\n\t\tport = bArr[0];\n\t}\n\n\t// one: port\n\tif (~lastBit.indexOf(\":\") && lastBit.indexOf(\"/\") < 0 && !IPArray.slice(4).join()) {\n\t\tvar ocAndPort = lastBit.split(\":\");\n\t\toc4 = ocAndPort[0];\n\t\tport = ocAndPort[1];\n\t}\n\n\t// non\n\tif (lastBit.indexOf(\":\") < 0 && lastBit.indexOf(\"/\") < 0 && !IPArray.slice(4).join()) {\n\t\toc4 = lastBit;\n\t}\n\n\t// validate the last bit\n\tif (!isInt(oc4) || oc4 > 255 || oc4 < 0) return false;\n\tif (port !== undefined && !isPort(port)) return false;\n\tif (!oc4) return false;\n\treturn true;\n};\n\nvar urlChecker = function (str) {\n\t// basic validations\n\tif (countOccurrences(str, \".\") === 0) return false;\n\tif (countOccurrences(str, \".\") === 1 && str.indexOf(\".\") === str.length - 1) return false;\n\tif (str.indexOf(\"/\") < 3 && str.indexOf(\"/\") > 0) return false;\n\n\t// normalize it\t\n\tstr = str.toLowerCase();\n\tstr = removeNotationEnds(str);\n\n\tif (~str.indexOf(\"/\")) {\n\t\tvar slashIndex = str.indexOf(\"/\");\n\t\tvar preSlash = str.substring(0, slashIndex);\n\t\tif (~preSlash.indexOf(\"..\")) return false;\n\t\tif (preSlash.split(\"\").filter(function (c) {\n\t\t\treturn ~allowedInHost.indexOf(c);\n\t\t}).length !== preSlash.length) return false;\n\t\tif (preSlash.endsWith(\".com\")) return true; // for performance\n\t\tif (preSlash.indexOf(\":\") > 0) {\n\t\t\tvar portAndHost = preSlash.split(\":\");\n\t\t\tvar host = portAndHost[0];\n\t\t\tvar port = portAndHost[1];\n\t\t\tif (!port) return false;\n\t\t\tif (isNaN(port)) return false;\n\t\t\tif (parseInt(port) > 65535) return false;\n\t\t\tif (str.endsWith(\".com\")) return true; // for performance\n\t\t\tif (!~tlds.indexOf(host.substr(host.lastIndexOf(\".\")))) return false;\n\t\t} else if (!~tlds.indexOf(preSlash.substr(preSlash.lastIndexOf(\".\")))) return false;\n\t} else {\n\t\tif (~str.indexOf(\"..\")) return false;\n\t\tif (str.split(\"\").filter(function (c) {\n\t\t\treturn ~allowedInHost.indexOf(c);\n\t\t}).length !== str.length) return false;\n\t\tif (str.endsWith(\".com\")) return true; // for performance\n\t\tif (str.indexOf(\":\") > 0) {\n\t\t\tvar _portAndHost = str.split(\":\");\n\t\t\tvar _host = _portAndHost[0];\n\t\t\tvar _port = _portAndHost[1];\n\t\t\tif (!_port) return false;\n\t\t\tif (isNaN(_port)) return false;\n\t\t\tif (parseInt(_port) > 65535) return false;\n\t\t\tif (str.endsWith(\".com\")) return true; // for performance\n\t\t\tif (!~tlds.indexOf(_host.substr(_host.lastIndexOf(\".\")))) return false;\n\t\t} else if (!~tlds.indexOf(str.substr(str.lastIndexOf(\".\")))) return false;\n\t}\n\n\treturn true;\n};\n\nvar separators = [\"\\n\", \"\\r\", \"\\t\", \"(\", \")\", \"[\", \"]\", \"<\", \">\", \"'\", '\"'];\n\nfunction fixSeparators(arr, sep1, sep2) {\n\tarr.forEach(function (bit, i) {\n\t\tif (bit.indexOf(\".\") > -1 && // it has a .\n\t\t!(arr[i - 1] === sep1 && arr[i + 1] === sep2) && ( // it's not surrounded by separators\n\t\tarr[i + 1] === sep1 || arr[i + 1] === sep2) // the one after it, is either sep1 or sep2\n\t\t) {\n\t\t\t\tarr[i] = arr[i] + arr[i + 1];\n\t\t\t\tif (typeof arr[i + 2] === \"string\") arr[i] = arr[i] + arr[i + 2];\n\t\t\t\tif (typeof arr[i + 3] === \"string\") arr[i] = arr[i] + arr[i + 3];\n\t\t\t\tif (typeof arr[i + 4] === \"string\") arr[i] = arr[i] + arr[i + 4];\n\t\t\t\tarr.splice(i + 1, 4);\n\t\t\t\tfixSeparators(arr, sep1, sep2);\n\t\t\t}\n\t});\n\treturn arr;\n}\n\nvar fix = function (arr) {\n\tarr = fixSeparators(arr, \"(\", \")\");\n\tarr = fixSeparators(arr, \"[\", \"]\");\n\tarr = fixSeparators(arr, \"\\\"\", \"\\\"\");\n\tarr = fixSeparators(arr, \"'\", \"'\");\n\treturn arr;\n};\n\nfunction padWithSpace(c) {\n\treturn \" \" + c + \" \";\n}\n\nfunction separate(input) {\n\tseparators.forEach(function (separator) {\n\t\tinput = input.split(separator).join(padWithSpace(separator));\n\t});\n\tinput = fix(input.split(\" \"));\n\treturn input;\n}\n\nfunction deSeparate(input) {\n\tinput = input.join(\" \");\n\tseparators.forEach(function (separator) {\n\t\tinput = input.split(padWithSpace(separator)).join(separator);\n\t});\n\treturn input;\n}\n\nvar hasProtocol = function (str) {\n\tstr = str.toLowerCase();\n\tif (str.startsWith(\"http://\")) return \"http://\";else if (str.startsWith(\"https://\")) return \"https://\";else if (str.startsWith(\"ftp://\")) return \"ftp://\";else if (str.startsWith(\"file:///\")) return \"file:///\";else if (str.startsWith(\"mailto:\")) return \"mailto:\";else return false;\n};\n\nvar identify = function (inputArr, options) {\n\treturn inputArr.map(function (fragment, index) {\n\t\t// quick validations\n\t\t// 1\n\t\tif (fragment.indexOf(\".\") < 1 && !hasProtocol(fragment)) return fragment;\n\t\t// 2\n\t\tif (fragment.split(\"\").filter(function (c) {\n\t\t\treturn ~urlAllowed.indexOf(c);\n\t\t}).length !== fragment.length) return fragment;\n\n\t\tvar urlObj = false;\n\n\t\t// starting tests that might render a positive result\n\t\t// test 1: it begins with a protocol\n\t\tvar protocol = hasProtocol(fragment);\n\n\t\tif (protocol) {\n\t\t\turlObj = {\n\t\t\t\treason: \"protocol\",\n\t\t\t\tprotocol: protocol,\n\t\t\t\turl: fragment.substr(protocol.length)\n\t\t\t};\n\t\t}\n\t\t// test 2: it's a URL\n\t\tif (!urlObj && options.urls && urlChecker(fragment)) {\n\t\t\turlObj = {\n\t\t\t\treason: \"url\",\n\t\t\t\tprotocol: options.defaultProtocol,\n\t\t\t\turl: fragment\n\t\t\t};\n\t\t}\n\t\t// test 3: it's an email\n\t\tif (!urlObj && options.emails && emailChecker(fragment)) {\n\t\t\turlObj = {\n\t\t\t\treason: \"email\",\n\t\t\t\tprotocol: \"mailto:\",\n\t\t\t\turl: fragment\n\t\t\t};\n\t\t}\n\t\t// test 4: it's an IP\n\t\tif (!urlObj && options.ips && ipChecker(fragment)) {\n\t\t\turlObj = {\n\t\t\t\treason: \"ip\",\n\t\t\t\tprotocol: options.defaultProtocol,\n\t\t\t\turl: fragment\n\t\t\t};\n\t\t}\n\t\tif (!urlObj) return fragment;else {\n\t\t\tvar past = index - 1;\n\t\t\tvar skip = false;\n\t\t\tif ((inputArr[index - 1] === \"'\" || inputArr[index - 1] === '\"') && ~htmlAttrs.indexOf(inputArr[index - 2])) return fragment;\n\t\t\treturn urlObj;\n\t\t}\n\t});\n};\n\nvar url2tag = function (url, options) {\n\tvar href = removeNotationEnds(url);\n\tvar nice = options.truncate > 0 && url.length > options.truncate ? url.substring(0, options.truncate) + \"...\" : url;\n\tvar tag = \"<a href='\" + href + \"'\";\n\tif (options.attributes) {\n\t\tfor (var name in options.attributes) {\n\t\t\tif (options.attributes.hasOwnProperty(name)) {\n\t\t\t\ttag = tag + \" \" + name + \"='\" + options.attributes[name] + \"' \";\n\t\t\t}\n\t\t}\n\t}\n\ttag = tag + \">\" + nice + \"</a>\";\n\treturn tag;\n};\n\nvar transform = function (str, options) {\n\tvar arr = separate(str);\n\tarr = identify(arr, options).map(function (fragment) {\n\t\tif (typeof fragment === \"string\") return fragment;\n\t\turl2tag(fragment.url, options);\n\t\treturn url2tag(fragment.protocol + fragment.url, options);\n\t});\n\treturn deSeparate(arr);\n};\n\nvar anchorme = function anchorme(str, options) {\n\toptions = defaultOptions(options);\n\tvar result = transform(str, options);\n\treturn result;\n};\n\n// exposing few functions for extra uses\nanchorme.validate = {\n\tip: ipChecker,\n\turl: urlChecker,\n\temail: emailChecker\n};\n\nreturn anchorme;\n\n})));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/anchorme/dist/anchorme.js\n// module id = 2349\n// module chunks = 32\n\n//# sourceURL=webpack:///./node_modules/anchorme/dist/anchorme.js?");

/***/ }),

/***/ 2350:
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(2351);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(25)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/less-loader/dist/cjs.js?{\\\"modifyVars\\\":{\\\"url\\\":\\\"'../../../extensions/geppetto-default/colors'\\\"}}!./Popup.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/less-loader/dist/cjs.js?{\\\"modifyVars\\\":{\\\"url\\\":\\\"'../../../extensions/geppetto-default/colors'\\\"}}!./Popup.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/components/widgets/popup/Popup.less\n// module id = 2350\n// module chunks = 32\n\n//# sourceURL=webpack:///./js/components/widgets/popup/Popup.less?");

/***/ }),

/***/ 2351:
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(24)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \".dark-orange {\\n  color: #fc401a;\\n}\\n.orange {\\n  color: #fc6320;\\n}\\n.orange-color {\\n  color: #fc6320;\\n}\\n.orange-color-bg {\\n  background-color: #fc6320;\\n}\\n.popup {\\n  font-size: 14px;\\n  font-weight: 200;\\n  color: white;\\n  overflow: auto !important;\\n  -webkit-user-select: text;\\n  -khtml-user-select: text;\\n  -moz-user-select: text;\\n  -ms-user-select: text;\\n  user-select: text;\\n}\\n.popup-link {\\n  color: #fc6320;\\n}\\n.popup-link:hover {\\n  color: #fc401a;\\n  text-decoration: none;\\n}\\n.popup a {\\n  color: #fc6320;\\n}\\n.popup p {\\n  color: #fc6320;\\n}\\n.popup a:hover {\\n  color: #fc401a;\\n  text-decoration: none;\\n}\\n.popup-image {\\n  margin: 0 auto;\\n  text-align: center;\\n  color: white;\\n  clear: both;\\n  max-width: 100%;\\n  margin-left: 25px;\\n}\\n.invert {\\n  -webkit-filter: invert(22%);\\n  filter: invert(22%);\\n}\\n.popup-slick-image {\\n  margin: 0 auto;\\n  text-align: center;\\n  color: white;\\n}\\n.popup-icon {\\n  color: #7F98FF;\\n  margin-left: 5px;\\n  margin-right: 5px;\\n}\\n.popup-icon-link {\\n  color: #9bafff;\\n  font-size: 15px;\\n  margin-right: 2px;\\n  margin-left: 2px;\\n}\\n.popup-icon-link:hover {\\n  color: #8098f9;\\n}\\n.popup-slick {\\n  clear: both;\\n  margin-top: 40px;\\n}\\n.popup-title {\\n  font-weight: 600;\\n  color: #fc6320;\\n  cursor: pointer;\\n  clear: both;\\n  float: left;\\n  text-transform: capitalize;\\n  margin-top: 5px;\\n  margin-bottom: 5px;\\n}\\n.popup-title:hover {\\n  color: #fc401a;\\n}\\n.popup-chevron {\\n  margin-left: 10px;\\n  margin-top: 7px;\\n  float: right;\\n  color: #8A7F7F;\\n  cursor: pointer;\\n}\\n.popup-html {\\n  clear: both;\\n}\\n.popup-text {\\n  font-size: 14px;\\n  font-weight: 200;\\n  text-align: justify;\\n  color: white;\\n  clear: both;\\n}\\n\", \"\"]);\n\n// exports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/less-loader/dist/cjs.js?{\"modifyVars\":{\"url\":\"'../../../extensions/geppetto-default/colors'\"}}!./js/components/widgets/popup/Popup.less\n// module id = 2351\n// module chunks = 32\n\n//# sourceURL=webpack:///./js/components/widgets/popup/Popup.less?./node_modules/css-loader!./node_modules/less-loader/dist/cjs.js?%7B%22modifyVars%22:%7B%22url%22:%22'../../../extensions/geppetto-default/colors'%22%7D%7D");

/***/ }),

/***/ 2352:
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(2353);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(25)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/less-loader/dist/cjs.js?{\\\"modifyVars\\\":{\\\"url\\\":\\\"'../../../extensions/geppetto-default/colors'\\\"}}!./slick.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/less-loader/dist/cjs.js?{\\\"modifyVars\\\":{\\\"url\\\":\\\"'../../../extensions/geppetto-default/colors'\\\"}}!./slick.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/components/widgets/popup/vendor/slick.less\n// module id = 2352\n// module chunks = 32\n\n//# sourceURL=webpack:///./js/components/widgets/popup/vendor/slick.less?");

/***/ }),

/***/ 2353:
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(24)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \"/* Slider */\\n.slick-slider {\\n  position: relative;\\n  -moz-box-sizing: border-box;\\n  box-sizing: border-box;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  -webkit-touch-callout: none;\\n  -khtml-user-select: none;\\n  -ms-touch-action: pan-y;\\n  touch-action: pan-y;\\n  -webkit-tap-highlight-color: transparent;\\n}\\n.slick-list {\\n  position: relative;\\n  display: block;\\n  overflow: hidden;\\n  margin: 0;\\n  padding: 0;\\n}\\n.slick-list:focus {\\n  outline: none;\\n}\\n.slick-list.dragging {\\n  cursor: pointer;\\n  cursor: hand;\\n}\\n.slick-slider .slick-track,\\n.slick-slider .slick-list {\\n  -webkit-transform: translate3d(0, 0, 0);\\n  -moz-transform: translate3d(0, 0, 0);\\n  -ms-transform: translate3d(0, 0, 0);\\n  -o-transform: translate3d(0, 0, 0);\\n  transform: translate3d(0, 0, 0);\\n}\\n.slick-track {\\n  position: relative;\\n  top: 0;\\n  left: 0;\\n  display: block;\\n}\\n.slick-track:before,\\n.slick-track:after {\\n  display: table;\\n  content: '';\\n}\\n.slick-track:after {\\n  clear: both;\\n}\\n.slick-loading .slick-track {\\n  visibility: hidden;\\n}\\n.slick-slide {\\n  display: none;\\n  float: left;\\n  height: 100%;\\n  min-height: 1px;\\n}\\n[dir='rtl'] .slick-slide {\\n  float: right;\\n}\\n.slick-slide img {\\n  display: block;\\n}\\n.slick-slide.slick-loading img {\\n  display: none;\\n}\\n.slick-slide.dragging img {\\n  pointer-events: none;\\n}\\n.slick-initialized .slick-slide {\\n  display: block;\\n}\\n.slick-loading .slick-slide {\\n  visibility: hidden;\\n}\\n.slick-vertical .slick-slide {\\n  display: block;\\n  height: auto;\\n  border: 1px solid transparent;\\n}\\n.slick-arrow.slick-hidden {\\n  display: none;\\n}\\n\", \"\"]);\n\n// exports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/less-loader/dist/cjs.js?{\"modifyVars\":{\"url\":\"'../../../extensions/geppetto-default/colors'\"}}!./js/components/widgets/popup/vendor/slick.less\n// module id = 2353\n// module chunks = 32\n\n//# sourceURL=webpack:///./js/components/widgets/popup/vendor/slick.less?./node_modules/css-loader!./node_modules/less-loader/dist/cjs.js?%7B%22modifyVars%22:%7B%22url%22:%22'../../../extensions/geppetto-default/colors'%22%7D%7D");

/***/ }),

/***/ 2354:
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(2355);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(25)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/less-loader/dist/cjs.js?{\\\"modifyVars\\\":{\\\"url\\\":\\\"'../../../extensions/geppetto-default/colors'\\\"}}!./slick-theme.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/less-loader/dist/cjs.js?{\\\"modifyVars\\\":{\\\"url\\\":\\\"'../../../extensions/geppetto-default/colors'\\\"}}!./slick-theme.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/components/widgets/popup/vendor/slick-theme.less\n// module id = 2354\n// module chunks = 32\n\n//# sourceURL=webpack:///./js/components/widgets/popup/vendor/slick-theme.less?");

/***/ }),

/***/ 2355:
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(24)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \".dark-orange {\\n  color: #fc401a;\\n}\\n.orange {\\n  color: #fc6320;\\n}\\n.orange-color {\\n  color: #fc6320;\\n}\\n.orange-color-bg {\\n  background-color: #fc6320;\\n}\\n/* Slider */\\n.slick-loading .slick-list {\\n  background: #fff url(\" + __webpack_require__(2356) + \") center center no-repeat;\\n}\\n.slick-next {\\n  right: 6px;\\n}\\n[dir='rtl'] .slick-next {\\n  right: auto;\\n  left: -25px;\\n}\\n.slick-arrow:hover {\\n  color: #fc401a;\\n}\\n.slick-arrow {\\n  color: #fc6320;\\n  z-index: 2;\\n  cursor: pointer;\\n}\\n/* Arrows */\\n.slick-prev,\\n.slick-next {\\n  font-size: 0;\\n  line-height: 0;\\n  position: absolute;\\n  top: 50%;\\n  display: block;\\n  width: 20px;\\n  height: 20px;\\n  padding: 0;\\n  -webkit-transform: translate(0, -50%);\\n  -ms-transform: translate(0, -50%);\\n  transform: translate(0, -50%);\\n  cursor: pointer;\\n  border: none;\\n  outline: none;\\n  background: transparent;\\n}\\n.slick-prev:hover,\\n.slick-prev:focus,\\n.slick-next:hover,\\n.slick-next:focus {\\n  outline: none;\\n  background: transparent;\\n}\\n.slick-prev:hover:before,\\n.slick-prev:focus:before,\\n.slick-next:hover:before,\\n.slick-next:focus:before {\\n  opacity: 1;\\n}\\n.slick-prev.slick-disabled:before,\\n.slick-next.slick-disabled:before {\\n  opacity: .25;\\n}\\n.slick-prev:before,\\n.slick-next:before {\\n  font-family: 'FontAwesome';\\n  font-size: 14px;\\n  line-height: 1;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n.slick-prev:before {\\n  content: '\\\\F137';\\n}\\n[dir='rtl'] .slick-prev:before {\\n  content: '\\\\F138';\\n}\\n.slick-next:before {\\n  content: '\\\\F138';\\n}\\n[dir='rtl'] .slick-next:before {\\n  content: '\\\\F137';\\n}\\n/* Dots */\\n.slick-slider {\\n  margin-bottom: 30px;\\n}\\n.slick-dots {\\n  position: absolute;\\n  bottom: -45px;\\n  display: block;\\n  width: 100%;\\n  padding: 0;\\n  list-style: none;\\n  text-align: center;\\n}\\n.slick-dots li {\\n  position: relative;\\n  display: inline-block;\\n  width: 20px;\\n  height: 20px;\\n  margin: 0 5px;\\n  padding: 0;\\n  cursor: pointer;\\n}\\n.slick-dots li button {\\n  font-size: 0;\\n  line-height: 0;\\n  display: block;\\n  width: 20px;\\n  height: 20px;\\n  padding: 5px;\\n  cursor: pointer;\\n  color: transparent;\\n  border: 0;\\n  outline: none;\\n  background: transparent;\\n}\\n.slick-dots li button:hover,\\n.slick-dots li button:focus {\\n  outline: none;\\n}\\n.slick-dots li button:hover:before,\\n.slick-dots li button:focus:before {\\n  color: #fc401a;\\n}\\n.slick-dots li button:before {\\n  font-family: 'FontAwesome';\\n  font-size: 6px;\\n  line-height: 14px;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 20px;\\n  height: 20px;\\n  content: '\\\\F111';\\n  text-align: center;\\n  color: white;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n.slick-dots li.slick-active button:before {\\n  color: #fc6320;\\n  z-index: 2;\\n}\\n\", \"\"]);\n\n// exports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/less-loader/dist/cjs.js?{\"modifyVars\":{\"url\":\"'../../../extensions/geppetto-default/colors'\"}}!./js/components/widgets/popup/vendor/slick-theme.less\n// module id = 2355\n// module chunks = 32\n\n//# sourceURL=webpack:///./js/components/widgets/popup/vendor/slick-theme.less?./node_modules/css-loader!./node_modules/less-loader/dist/cjs.js?%7B%22modifyVars%22:%7B%22url%22:%22'../../../extensions/geppetto-default/colors'%22%7D%7D");

/***/ }),

/***/ 2356:
/***/ (function(module, exports) {

eval("\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/components/widgets/popup/vendor/ajax-loader.gif\n// module id = 2356\n// module chunks = 32\n\n//# sourceURL=webpack:///./js/components/widgets/popup/vendor/ajax-loader.gif?");

/***/ })

});