FROM python:3.6

ARG APP_DIR=/app
ARG SOURCES_DIR=$APP_DIR/sources
ARG VIRGO_DIR=/opt/virgo
ARG SCIDASH_REPO_FOLDER=/git
ARG GEPPETTO_REPO=http://github.com/openworm/org.geppetto.git
ARG SCIDASH_BRANCH=geppetto-scidash

ARG targetBranch=geppetto-scidash
ARG originBranch=geppetto-scidash
ARG defaultBranch=geppetto-scidash

# -== Install OpenJDK and certificates ==-
WORKDIR /
RUN useradd -ms /bin/bash developer
ENV HOME /home/developer
RUN printf "\ndeb http://deb.debian.org/debian/ sid main\n" >> /etc/apt/sources.list
RUN apt-get update && \
    apt-get install -y openjdk-8-jdk && \
    apt-get install -y ant && \
    apt-get clean;
RUN apt-get update && \
    apt-get install ca-certificates-java && \
    apt-get clean && \
    update-ca-certificates -f;

# -== Setup JAVA_HOME ==-
ENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64/
RUN export JAVA_HOME

# -== Create various folder for this deployment ==-
RUN mkdir $APP_DIR
RUN mkdir $SCIDASH_REPO_FOLDER
WORKDIR $APP_DIR
RUN mkdir $SOURCES_DIR
WORKDIR $SCIDASH_REPO_FOLDER
RUN git clone https://github.com/ddelpiano/travis_utils
RUN cp travis_utils/copy.sh $APP_DIR

# -== Download SCIDASH repo ==-

RUN $APP_DIR/copy.sh http://github.com/Metacell/scidash.git "${targetBranch}" "${originBranch}" "${defaultBranch}"

# -== INSTALL MAVEN ==-
WORKDIR /tmp
RUN wget http://archive.apache.org/dist/maven/maven-3/3.5.2/binaries/apache-maven-3.5.2-bin.tar.gz
RUN tar xzf apache-maven-3.5.2-bin.tar.gz -C /opt/
RUN ln -s /opt/apache-maven-3.5.2 /opt/maven
RUN ln -s /opt/maven/bin/mvn /usr/local/bin
RUN rm -f /apache-maven-3.5.2-bin.tar.gz
ENV MAVEN_HOME /opt/maven
RUN mvn --version

# -== INSTALL NEURON ==-
RUN mkdir /nrn
WORKDIR /nrn
RUN apt-get install -y libreadline5 libreadline-gplv2-dev lsof
RUN wget -O nrn-7.6.tar.gz https://github.com/ddelpiano/neuron/raw/master/nrn-7.6.tar.gz
RUN tar xzvf nrn-7.6.tar.gz
WORKDIR nrn-7.6
RUN ./configure \
    --without-x \
    --with-nrnpython=python3 \
    --without-paranrn \
    --prefix=`pwd` \
    --without-iv \
    --without-nrnoc-x11 \
    --silent &&\
make --silent -j4 &&\
make --silent install -j4
WORKDIR src/nrnpython
ENV NEURON_HOME /nrn/nrn-7.6/x86_64/bin
RUN python setup.py install

# -== Linking Neuron environment with application and geppetto ==-
RUN mkdir -p /Applications/NEURON-7.6/
WORKDIR /Applications/NEURON-7.6/
RUN ln -s /nrn/nrn-7.6 nrn
WORKDIR /usr/local
RUN ln -s /nrn/nrn-7.6 nrn
RUN chown developer nrn
RUN ls -l /usr/local/nrn/

# -== INSTALL VIRGO ==-
RUN mkdir $VIRGO_DIR
RUN apt-get -y install curl
RUN curl -L 'http://www.eclipse.org/downloads/download.php?file=/virgo/release/VP/3.7.2.RELEASE/virgo-tomcat-server-3.7.2.RELEASE.zip&r=1' > virgo.zip
RUN unzip virgo.zip
RUN cp -r ./virgo-tomcat-server-3.7.2.RELEASE/* $VIRGO_DIR
RUN rm $VIRGO_DIR/configuration/java-server.profile
RUN cp /git/scidash/service/geppetto/java-server.profile $VIRGO_DIR/configuration/
RUN rm $VIRGO_DIR/configuration/tomcat-server.xml
RUN cat /git/scidash/service/geppetto/tomcat-server.xml | sed 's/127.0.0.1/0.0.0.0/' > $VIRGO_DIR/configuration/tomcat-server.xml
RUN chmod u+x $VIRGO_DIR/bin/*.sh
ENV SERVER_HOME $VIRGO_DIR
RUN chmod 777 -R $VIRGO_DIR
RUN mkdir $VIRGO_DIR/repository/usr
RUN mvn --version

# -== INSTALL GEPPETTO ==-
WORKDIR $SOURCES_DIR
RUN $APP_DIR/copy.sh http://github.com/openworm/org.geppetto.git geppetto-scidash "${originBranch}" "${defaultBranch}"
RUN cp /git/scidash/service/geppetto/config.json $SOURCES_DIR/org.geppetto/utilities/source_setup
RUN cp /git/scidash/service/geppetto/setup.py $SOURCES_DIR/org.geppetto/utilities/source_setup
RUN cp /git/scidash/service/geppetto/geppetto.plan $SOURCES_DIR/org.geppetto/

RUN $APP_DIR/copy.sh https://github.com/openworm/org.geppetto.model.git geppetto-scidash "${originBranch}" "${defaultBranch}" &&\
    cd org.geppetto.model &&\
    /bin/echo -e "\e[96mMaven install org.geppetto.model\e[0m" &&\
    mvn -Dhttps.protocols=TLSv1.2 -DskipTests --quiet install &&\
    rm -rf src && cd ../

RUN $APP_DIR/copy.sh https://github.com/openworm/org.geppetto.core.git geppetto-scidash "${originBranch}" "${defaultBranch}" &&\
    cd org.geppetto.core && cp /git/scidash/service/geppetto/core/app-config.xml ./src/main/java/META-INF/spring &&\
    /bin/echo -e "\e[96mMaven install org.geppetto.core\e[0m" &&\
    mvn -Dhttps.protocols=TLSv1.2 -DskipTests --quiet install &&\
    rm -rf src && cd ../

RUN $APP_DIR/copy.sh https://github.com/openworm/org.geppetto.model.neuroml.git geppetto-scidash "${originBranch}" "${defaultBranch}" &&\
    cd org.geppetto.model.neuroml &&\
    /bin/echo -e "\e[96mMaven install org.geppetto.model.neuroml\e[0m" &&\
    mvn -Dhttps.protocols=TLSv1.2 -DskipTests --quiet install &&\
    rm -rf src && cd ../

RUN $APP_DIR/copy.sh https://github.com/openworm/org.geppetto.simulation.git geppetto-scidash "${originBranch}" "${defaultBranch}" &&\
    cd org.geppetto.simulation &&\
    /bin/echo -e "\e[96mMaven install org.geppetto.simulation\e[0m" &&\
    mvn -Dhttps.protocols=TLSv1.2 -DskipTests --quiet install &&\
    rm -rf src && cd ../

RUN $APP_DIR/copy.sh https://github.com/openworm/org.geppetto.simulator.external.git geppetto-scidash "${originBranch}" "${defaultBranch}" &&\
    cd org.geppetto.simulator.external &&\
    /bin/echo -e "\e[96mMaven install org.geppetto.simulator.external\e[0m" &&\
    mvn -Dhttps.protocols=TLSv1.2 -DskipTests --quiet install &&\
    rm -rf src && cd ../

RUN $APP_DIR/copy.sh https://github.com/Metacell/org.geppetto.simulator.scidash.git geppetto-scidash "${originBranch}" "${defaultBranch}" &&\
    cd org.geppetto.simulator.scidash &&\
    /bin/echo -e "\e[96mMaven install org.geppetto.simulator.scidash\e[0m" &&\
    mvn -Dhttps.protocols=TLSv1.2 -DskipTests --quiet install &&\
    rm -rf src && cd ../

RUN $APP_DIR/copy.sh https://github.com/openworm/org.geppetto.frontend.git geppetto-scidash "${originBranch}" "${defaultBranch}" &&\
    cd org.geppetto.frontend && cp /git/scidash/service/geppetto/frontend/app-config.xml ./src/main/webapp/WEB-INF/spring/ &&\
    /bin/echo -e "\e[96mMaven install org.geppetto.frontend\e[0m" &&\
    mvn -Dhttps.protocols=TLSv1.2 -DskipTests --quiet install &&\
    rm -rf src && cd ../

WORKDIR $SOURCES_DIR/org.geppetto/utilities/source_setup
RUN python2 update_server.py

WORKDIR $APP_DIR

RUN chown developer $VIRGO_DIR

# -== Clean up to reduce container size ==-
RUN rm -rf $SCIDASH_REPO_FOLDER
RUN rm -rf /tmp/virgo.zip /tmp/apache-maven-3.5.2-bin.tar.gz
USER developer

EXPOSE 8080
CMD /opt/virgo/bin/startup.sh
