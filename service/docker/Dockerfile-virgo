FROM python:3.6

ARG APP_DIR=/app
ARG SOURCES_DIR=$APP_DIR/sources
ARG VIRGO_DIR=/opt/virgo
ARG SCIDASH_REPO_FOLDER=/git
ARG GEPPETTO_REPO=http://github.com/openworm/org.geppetto
ARG SCIDASH_TAG=scidash_2.0.0
ARG ALPHA_TAG=v0.4.2-alpha

RUN useradd -ms /bin/bash developer
ENV HOME /home/developer

WORKDIR /
RUN mkdir $APP_DIR
RUN mkdir $SCIDASH_REPO_FOLDER
WORKDIR $APP_DIR
RUN mkdir $SOURCES_DIR
WORKDIR $SCIDASH_REPO_FOLDER

# Install OpenJDK-8
RUN apt-get update && \
    apt-get install -y openjdk-8-jdk && \
    apt-get install -y ant && \
    apt-get clean;

# Fix certificate issues
RUN apt-get update && \
    apt-get install ca-certificates-java && \
    apt-get clean && \
    update-ca-certificates -f;

# Setup JAVA_HOME -- useful for docker commandline
ENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64/
RUN export JAVA_HOME

# Get the scidash repo

RUN git clone -b development https://github.com/MetaCell/scidash

WORKDIR /tmp

RUN wget http://archive.apache.org/dist/maven/maven-3/3.5.2/binaries/apache-maven-3.5.2-bin.tar.gz

# INSTALL MAVEN
RUN tar xzf apache-maven-3.5.2-bin.tar.gz -C /opt/
RUN ln -s /opt/apache-maven-3.5.2 /opt/maven
RUN ln -s /opt/maven/bin/mvn /usr/local/bin
RUN rm -f /apache-maven-3.5.2-bin.tar.gz
ENV MAVEN_HOME /opt/maven
RUN mvn --version

# INSTALL NEURON
RUN wget https://neuron.yale.edu/ftp/neuron/versions/v7.6/nrn-7.6.x86_64-linux.deb
RUN dpkg -i nrn-7.6.x86_64-linux.deb
ENV NEURON_HOME /usr/local/nrn

RUN mkdir $VIRGO_DIR

# INSTALL VIRGO
RUN apt-get install curl
RUN curl -L 'http://www.eclipse.org/downloads/download.php?file=/virgo/release/VP/3.7.2.RELEASE/virgo-tomcat-server-3.7.2.RELEASE.zip&r=1' > virgo.zip
RUN unzip virgo.zip
RUN cp -r ./virgo-tomcat-server-3.7.2.RELEASE/* $VIRGO_DIR
RUN rm $VIRGO_DIR/configuration/java-server.profile
RUN cp /git/scidash/service/geppetto/java-server.profile $VIRGO_DIR/configuration/
RUN rm $VIRGO_DIR/configuration/tomcat-server.xml
RUN cp /git/scidash/service/geppetto/tomcat-server.xml $VIRGO_DIR/configuration/
RUN chmod u+x $VIRGO_DIR/bin/*.sh
ENV SERVER_HOME $VIRGO_DIR
RUN chmod 777 -R $VIRGO_DIR
RUN mkdir rm $VIRGO_DIR/repository/usr
RUN mvn --version

WORKDIR $SOURCES_DIR

# INSTALL GEPPETTO
RUN git clone $GEPPETTO_REPO -b $ALPHA_TAG
WORKDIR $SOURCES_DIR/org.geppetto/utilities/source_setup
RUN rm $SOURCES_DIR/org.geppetto/utilities/source_setup/config.json
RUN cp /git/scidash/service/geppetto/config.json $SOURCES_DIR/org.geppetto/utilities/source_setup
RUN cp /git/scidash/service/geppetto/setup.py $SOURCES_DIR/org.geppetto/utilities/source_setup
RUN cp /git/scidash/service/geppetto/geppetto.plan $SOURCES_DIR/org.geppetto/
RUN python2 setup.py

WORKDIR $SOURCES_DIR/org.geppetto.core
RUN git checkout $SCIDASH_TAG

WORKDIR $SOURCES_DIR/org.geppetto.frontend
RUN git checkout $SCIDASH_TAG

WORKDIR $SOURCES_DIR/org.geppetto.model
RUN git checkout $SCIDASH_TAG

WORKDIR $SOURCES_DIR/org.geppetto.model.neuroml
RUN git checkout $SCIDASH_TAG

WORKDIR $SOURCES_DIR/org.geppetto.simulation
RUN git checkout $SCIDASH_TAG

WORKDIR $SOURCES_DIR/org.geppetto.simulator.external
RUN git checkout $SCIDASH_TAG

WORKDIR $SOURCES_DIR/org.geppetto.simulator.scidash
RUN git checkout $SCIDASH_TAG
# RUN rm ./src/main/java/META-INF/spring/app-config.xml
# ADD ./service/geppetto/app-config.xml ./src/main/java/META-INF/spring

WORKDIR $SOURCES_DIR/org.geppetto
RUN mvn -Dhttps.protocols=TLSv1.2 -DcontextPath=org.geppetto.frontend -DuseSsl=false -DskipTests install

WORKDIR $SOURCES_DIR/org.geppetto/utilities/source_setup
RUN python2 update_server.py

WORKDIR $APP_DIR

RUN chown developer $VIRGO_DIR
USER developer

EXPOSE 8080
CMD /opt/virgo/bin/startup.sh
